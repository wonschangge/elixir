!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!C++	name	/aliased names/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!C	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C	m,member	/struct, and union members/
!_TAG_KIND_DESCRIPTION!C	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!C++	c,class	/classes/
!_TAG_KIND_DESCRIPTION!C++	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C++	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C++	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C++	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C++	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C++	m,member	/class, struct, and union members/
!_TAG_KIND_DESCRIPTION!C++	n,namespace	/namespaces/
!_TAG_KIND_DESCRIPTION!C++	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C++	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C++	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C++	v,variable	/variable definitions/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!C	1.1	/current.age/
!_TAG_PARSER_VERSION!C++	1.1	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/chanj/WORK/elixir/fork-elixir/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.1.0	/v6.1.0/
!_TAG_ROLE_DESCRIPTION!C!function	foreigndecl	/declared in foreign languages/
!_TAG_ROLE_DESCRIPTION!C!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!C!struct	foreigndecl	/declared in foreign languages/
!_TAG_ROLE_DESCRIPTION!C++!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C++!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C++!macro	undef	/undefined/
ACPI_AC_COMPONENT	t/tree/include/acpi/acpi_drivers.h	/^#define ACPI_AC_COMPONENT	/;"	d
ACPI_ADDRESS_RANGE_ACPI	t/tree/include/linux/acpi.h	/^	ACPI_ADDRESS_RANGE_ACPI = 3,$/;"	e	enum:acpi_address_range_id
ACPI_ADDRESS_RANGE_COUNT	t/tree/include/linux/acpi.h	/^	ACPI_ADDRESS_RANGE_COUNT$/;"	e	enum:acpi_address_range_id
ACPI_ADDRESS_RANGE_MEMORY	t/tree/include/linux/acpi.h	/^	ACPI_ADDRESS_RANGE_MEMORY = 1,$/;"	e	enum:acpi_address_range_id
ACPI_ADDRESS_RANGE_NVS	t/tree/include/linux/acpi.h	/^	ACPI_ADDRESS_RANGE_NVS	= 4,$/;"	e	enum:acpi_address_range_id
ACPI_ADDRESS_RANGE_RESERVED	t/tree/include/linux/acpi.h	/^	ACPI_ADDRESS_RANGE_RESERVED = 2,$/;"	e	enum:acpi_address_range_id
ACPI_BATTERY_COMPONENT	t/tree/include/acpi/acpi_drivers.h	/^#define ACPI_BATTERY_COMPONENT	/;"	d
ACPI_BAY_HID	t/tree/include/acpi/acpi_drivers.h	/^#define ACPI_BAY_HID	/;"	d
ACPI_BUS_COMPONENT	t/tree/include/acpi/acpi_drivers.h	/^#define ACPI_BUS_COMPONENT	/;"	d
ACPI_BUS_DEVICE_TYPE_COUNT	t/tree/include/acpi/acpi_bus.h	/^	ACPI_BUS_DEVICE_TYPE_COUNT$/;"	e	enum:acpi_bus_device_type
ACPI_BUS_FILE_ROOT	t/tree/include/acpi/acpi_bus.h	/^#define ACPI_BUS_FILE_ROOT	/;"	d
ACPI_BUS_TYPE_DEVICE	t/tree/include/acpi/acpi_bus.h	/^	ACPI_BUS_TYPE_DEVICE = 0,$/;"	e	enum:acpi_bus_device_type
ACPI_BUS_TYPE_ECDT_EC	t/tree/include/acpi/acpi_bus.h	/^	ACPI_BUS_TYPE_ECDT_EC,$/;"	e	enum:acpi_bus_device_type
ACPI_BUS_TYPE_POWER	t/tree/include/acpi/acpi_bus.h	/^	ACPI_BUS_TYPE_POWER,$/;"	e	enum:acpi_bus_device_type
ACPI_BUS_TYPE_POWER_BUTTON	t/tree/include/acpi/acpi_bus.h	/^	ACPI_BUS_TYPE_POWER_BUTTON,$/;"	e	enum:acpi_bus_device_type
ACPI_BUS_TYPE_PROCESSOR	t/tree/include/acpi/acpi_bus.h	/^	ACPI_BUS_TYPE_PROCESSOR,$/;"	e	enum:acpi_bus_device_type
ACPI_BUS_TYPE_SLEEP_BUTTON	t/tree/include/acpi/acpi_bus.h	/^	ACPI_BUS_TYPE_SLEEP_BUTTON,$/;"	e	enum:acpi_bus_device_type
ACPI_BUS_TYPE_THERMAL	t/tree/include/acpi/acpi_bus.h	/^	ACPI_BUS_TYPE_THERMAL,$/;"	e	enum:acpi_bus_device_type
ACPI_BUTTON_COMPONENT	t/tree/include/acpi/acpi_drivers.h	/^#define ACPI_BUTTON_COMPONENT	/;"	d
ACPI_BUTTON_HID_POWERF	t/tree/include/acpi/acpi_drivers.h	/^#define ACPI_BUTTON_HID_POWERF	/;"	d
ACPI_BUTTON_HID_SLEEPF	t/tree/include/acpi/acpi_drivers.h	/^#define ACPI_BUTTON_HID_SLEEPF	/;"	d
ACPI_COMPANION	t/tree/include/linux/acpi.h	/^#define ACPI_COMPANION(/;"	d
ACPI_COMPANION_SET	t/tree/include/linux/acpi.h	/^#define ACPI_COMPANION_SET(/;"	d
ACPI_CONTAINER_COMPONENT	t/tree/include/acpi/acpi_drivers.h	/^#define ACPI_CONTAINER_COMPONENT	/;"	d
ACPI_DECLARE_PROBE_ENTRY	t/tree/include/linux/acpi.h	/^#define ACPI_DECLARE_PROBE_ENTRY(/;"	d
ACPI_DEVICE_CLASS	t/tree/include/linux/acpi.h	/^#define ACPI_DEVICE_CLASS(/;"	d
ACPI_DOCK_HID	t/tree/include/acpi/acpi_drivers.h	/^#define ACPI_DOCK_HID	/;"	d
ACPI_DRIVER_ALL_NOTIFY_EVENTS	t/tree/include/acpi/acpi_bus.h	/^#define ACPI_DRIVER_ALL_NOTIFY_EVENTS	/;"	d
ACPI_ECDT_HID	t/tree/include/acpi/acpi_drivers.h	/^#define ACPI_ECDT_HID	/;"	d
ACPI_FAN_COMPONENT	t/tree/include/acpi/acpi_drivers.h	/^#define ACPI_FAN_COMPONENT	/;"	d
ACPI_FIXED_HARDWARE_EVENT	t/tree/include/acpi/acpi_drivers.h	/^#define ACPI_FIXED_HARDWARE_EVENT	/;"	d
ACPI_GSB_ACCESS_ATTRIB_BLOCK	t/tree/include/linux/acpi.h	/^#define ACPI_GSB_ACCESS_ATTRIB_BLOCK	/;"	d
ACPI_GSB_ACCESS_ATTRIB_BLOCK_CALL	t/tree/include/linux/acpi.h	/^#define ACPI_GSB_ACCESS_ATTRIB_BLOCK_CALL	/;"	d
ACPI_GSB_ACCESS_ATTRIB_BYTE	t/tree/include/linux/acpi.h	/^#define ACPI_GSB_ACCESS_ATTRIB_BYTE	/;"	d
ACPI_GSB_ACCESS_ATTRIB_MULTIBYTE	t/tree/include/linux/acpi.h	/^#define ACPI_GSB_ACCESS_ATTRIB_MULTIBYTE	/;"	d
ACPI_GSB_ACCESS_ATTRIB_QUICK	t/tree/include/linux/acpi.h	/^#define ACPI_GSB_ACCESS_ATTRIB_QUICK	/;"	d
ACPI_GSB_ACCESS_ATTRIB_RAW_BYTES	t/tree/include/linux/acpi.h	/^#define ACPI_GSB_ACCESS_ATTRIB_RAW_BYTES	/;"	d
ACPI_GSB_ACCESS_ATTRIB_RAW_PROCESS	t/tree/include/linux/acpi.h	/^#define ACPI_GSB_ACCESS_ATTRIB_RAW_PROCESS	/;"	d
ACPI_GSB_ACCESS_ATTRIB_SEND_RCV	t/tree/include/linux/acpi.h	/^#define ACPI_GSB_ACCESS_ATTRIB_SEND_RCV /;"	d
ACPI_GSB_ACCESS_ATTRIB_WORD	t/tree/include/linux/acpi.h	/^#define ACPI_GSB_ACCESS_ATTRIB_WORD	/;"	d
ACPI_GSB_ACCESS_ATTRIB_WORD_CALL	t/tree/include/linux/acpi.h	/^#define ACPI_GSB_ACCESS_ATTRIB_WORD_CALL	/;"	d
ACPI_HANDLE	t/tree/include/linux/acpi.h	/^#define ACPI_HANDLE(/;"	d
ACPI_HANDLE_FWNODE	t/tree/include/linux/acpi.h	/^#define ACPI_HANDLE_FWNODE(/;"	d
ACPI_HAVE_ARCH_GET_ROOT_POINTER	t/tree/arch/x86/include/asm/acpi.h	/^#define ACPI_HAVE_ARCH_GET_ROOT_POINTER$/;"	d
ACPI_HAVE_ARCH_SET_ROOT_POINTER	t/tree/arch/x86/include/asm/acpi.h	/^#define ACPI_HAVE_ARCH_SET_ROOT_POINTER$/;"	d
ACPI_HOTPLUG_OST	t/tree/include/linux/acpi.h	/^#define ACPI_HOTPLUG_OST$/;"	d
ACPI_INIT_DSM_ARGV4	t/tree/include/acpi/acpi_bus.h	/^#define	ACPI_INIT_DSM_ARGV4(/;"	d
ACPI_INTERRUPT_COUNT	t/tree/include/linux/acpi.h	/^	ACPI_INTERRUPT_COUNT$/;"	e	enum:acpi_interrupt_id
ACPI_INTERRUPT_CPEI	t/tree/include/linux/acpi.h	/^	ACPI_INTERRUPT_CPEI,$/;"	e	enum:acpi_interrupt_id
ACPI_INTERRUPT_INIT	t/tree/include/linux/acpi.h	/^	ACPI_INTERRUPT_INIT,$/;"	e	enum:acpi_interrupt_id
ACPI_INTERRUPT_PMI	t/tree/include/linux/acpi.h	/^	ACPI_INTERRUPT_PMI	= 1,$/;"	e	enum:acpi_interrupt_id
ACPI_IRQ_MODEL_COUNT	t/tree/include/linux/acpi.h	/^	ACPI_IRQ_MODEL_COUNT$/;"	e	enum:acpi_irq_model_id
ACPI_IRQ_MODEL_GIC	t/tree/include/linux/acpi.h	/^	ACPI_IRQ_MODEL_GIC,$/;"	e	enum:acpi_irq_model_id
ACPI_IRQ_MODEL_IOAPIC	t/tree/include/linux/acpi.h	/^	ACPI_IRQ_MODEL_IOAPIC,$/;"	e	enum:acpi_irq_model_id
ACPI_IRQ_MODEL_IOSAPIC	t/tree/include/linux/acpi.h	/^	ACPI_IRQ_MODEL_IOSAPIC,$/;"	e	enum:acpi_irq_model_id
ACPI_IRQ_MODEL_PIC	t/tree/include/linux/acpi.h	/^	ACPI_IRQ_MODEL_PIC = 0,$/;"	e	enum:acpi_irq_model_id
ACPI_IRQ_MODEL_PLATFORM	t/tree/include/linux/acpi.h	/^	ACPI_IRQ_MODEL_PLATFORM,$/;"	e	enum:acpi_irq_model_id
ACPI_MAX_HANDLES	t/tree/include/acpi/acpi_bus.h	/^#define ACPI_MAX_HANDLES	/;"	d
ACPI_MAX_STRING	t/tree/include/acpi/acpi_drivers.h	/^#define ACPI_MAX_STRING	/;"	d
ACPI_MEMORY_DEVICE_COMPONENT	t/tree/include/acpi/acpi_drivers.h	/^#define ACPI_MEMORY_DEVICE_COMPONENT	/;"	d
ACPI_OST_EC_OSPM_EJECT	t/tree/include/linux/acpi.h	/^#define ACPI_OST_EC_OSPM_EJECT	/;"	d
ACPI_OST_EC_OSPM_INSERTION	t/tree/include/linux/acpi.h	/^#define ACPI_OST_EC_OSPM_INSERTION	/;"	d
ACPI_OST_EC_OSPM_SHUTDOWN	t/tree/include/linux/acpi.h	/^#define ACPI_OST_EC_OSPM_SHUTDOWN	/;"	d
ACPI_OST_SC_DEVICE_BUSY	t/tree/include/linux/acpi.h	/^#define ACPI_OST_SC_DEVICE_BUSY	/;"	d
ACPI_OST_SC_DEVICE_IN_USE	t/tree/include/linux/acpi.h	/^#define ACPI_OST_SC_DEVICE_IN_USE	/;"	d
ACPI_OST_SC_DRIVER_LOAD_FAILURE	t/tree/include/linux/acpi.h	/^#define ACPI_OST_SC_DRIVER_LOAD_FAILURE	/;"	d
ACPI_OST_SC_EJECT_DEPENDENCY_BUSY	t/tree/include/linux/acpi.h	/^#define ACPI_OST_SC_EJECT_DEPENDENCY_BUSY	/;"	d
ACPI_OST_SC_EJECT_IN_PROGRESS	t/tree/include/linux/acpi.h	/^#define ACPI_OST_SC_EJECT_IN_PROGRESS	/;"	d
ACPI_OST_SC_EJECT_NOT_SUPPORTED	t/tree/include/linux/acpi.h	/^#define ACPI_OST_SC_EJECT_NOT_SUPPORTED	/;"	d
ACPI_OST_SC_INSERT_IN_PROGRESS	t/tree/include/linux/acpi.h	/^#define ACPI_OST_SC_INSERT_IN_PROGRESS	/;"	d
ACPI_OST_SC_INSERT_NOT_SUPPORTED	t/tree/include/linux/acpi.h	/^#define ACPI_OST_SC_INSERT_NOT_SUPPORTED	/;"	d
ACPI_OST_SC_NON_SPECIFIC_FAILURE	t/tree/include/linux/acpi.h	/^#define ACPI_OST_SC_NON_SPECIFIC_FAILURE	/;"	d
ACPI_OST_SC_OS_SHUTDOWN_COMPLETED	t/tree/include/linux/acpi.h	/^#define ACPI_OST_SC_OS_SHUTDOWN_COMPLETED	/;"	d
ACPI_OST_SC_OS_SHUTDOWN_DENIED	t/tree/include/linux/acpi.h	/^#define ACPI_OST_SC_OS_SHUTDOWN_DENIED	/;"	d
ACPI_OST_SC_OS_SHUTDOWN_IN_PROGRESS	t/tree/include/linux/acpi.h	/^#define ACPI_OST_SC_OS_SHUTDOWN_IN_PROGRESS	/;"	d
ACPI_OST_SC_OS_SHUTDOWN_NOT_SUPPORTED	t/tree/include/linux/acpi.h	/^#define ACPI_OST_SC_OS_SHUTDOWN_NOT_SUPPORTED	/;"	d
ACPI_OST_SC_SUCCESS	t/tree/include/linux/acpi.h	/^#define ACPI_OST_SC_SUCCESS	/;"	d
ACPI_OST_SC_UNRECOGNIZED_NOTIFY	t/tree/include/linux/acpi.h	/^#define ACPI_OST_SC_UNRECOGNIZED_NOTIFY	/;"	d
ACPI_PCI_COMPONENT	t/tree/include/acpi/acpi_drivers.h	/^#define ACPI_PCI_COMPONENT	/;"	d
ACPI_POWER_COMPONENT	t/tree/include/acpi/acpi_drivers.h	/^#define ACPI_POWER_COMPONENT	/;"	d
ACPI_POWER_HID	t/tree/include/acpi/acpi_drivers.h	/^#define ACPI_POWER_HID	/;"	d
ACPI_PROBE_TABLE	t/tree/include/linux/acpi.h	/^#define ACPI_PROBE_TABLE(/;"	d
ACPI_PROBE_TABLE_END	t/tree/include/linux/acpi.h	/^#define ACPI_PROBE_TABLE_END(/;"	d
ACPI_PROCESSOR_COMPONENT	t/tree/include/acpi/acpi_drivers.h	/^#define ACPI_PROCESSOR_COMPONENT	/;"	d
ACPI_PROCESSOR_LIMIT_DECREMENT	t/tree/include/acpi/acpi_drivers.h	/^#define ACPI_PROCESSOR_LIMIT_DECREMENT	/;"	d
ACPI_PROCESSOR_LIMIT_INCREMENT	t/tree/include/acpi/acpi_drivers.h	/^#define ACPI_PROCESSOR_LIMIT_INCREMENT	/;"	d
ACPI_PROCESSOR_LIMIT_NONE	t/tree/include/acpi/acpi_drivers.h	/^#define ACPI_PROCESSOR_LIMIT_NONE	/;"	d
ACPI_PROCESSOR_OBJECT_HID	t/tree/include/acpi/acpi_drivers.h	/^#define ACPI_PROCESSOR_OBJECT_HID	/;"	d
ACPI_PTR	t/tree/include/linux/acpi.h	/^#define ACPI_PTR(/;"	d
ACPI_RECONFIG_DEVICE_ADD	t/tree/include/linux/acpi.h	/^	ACPI_RECONFIG_DEVICE_ADD = 0,$/;"	e	enum:acpi_reconfig_event
ACPI_RECONFIG_DEVICE_REMOVE	t/tree/include/linux/acpi.h	/^	ACPI_RECONFIG_DEVICE_REMOVE,$/;"	e	enum:acpi_reconfig_event
ACPI_SBS_COMPONENT	t/tree/include/acpi/acpi_drivers.h	/^#define ACPI_SBS_COMPONENT	/;"	d
ACPI_SMBUS_IBM_HID	t/tree/include/acpi/acpi_drivers.h	/^#define ACPI_SMBUS_IBM_HID	/;"	d
ACPI_SPACE_MEM	t/tree/include/linux/acpi.h	/^#define	ACPI_SPACE_MEM	/;"	d
ACPI_SYSTEM_COMPONENT	t/tree/include/acpi/acpi_drivers.h	/^#define ACPI_SYSTEM_COMPONENT	/;"	d
ACPI_SYSTEM_HID	t/tree/include/acpi/acpi_drivers.h	/^#define ACPI_SYSTEM_HID	/;"	d
ACPI_TABLE_ID_LEN	t/tree/include/linux/acpi.h	/^#define ACPI_TABLE_ID_LEN	/;"	d
ACPI_TABLE_UPGRADE_MAX_PHYS	t/tree/arch/x86/include/asm/acpi.h	/^#define ACPI_TABLE_UPGRADE_MAX_PHYS /;"	d
ACPI_THERMAL_COMPONENT	t/tree/include/acpi/acpi_drivers.h	/^#define ACPI_THERMAL_COMPONENT	/;"	d
ACPI_THERMAL_HID	t/tree/include/acpi/acpi_drivers.h	/^#define ACPI_THERMAL_HID	/;"	d
ACPI_VIDEO_BACKLIGHT	t/tree/include/linux/acpi.h	/^#define ACPI_VIDEO_BACKLIGHT	/;"	d
ACPI_VIDEO_BACKLIGHT_DMI_VENDOR	t/tree/include/linux/acpi.h	/^#define ACPI_VIDEO_BACKLIGHT_DMI_VENDOR	/;"	d
ACPI_VIDEO_BACKLIGHT_DMI_VIDEO	t/tree/include/linux/acpi.h	/^#define ACPI_VIDEO_BACKLIGHT_DMI_VIDEO	/;"	d
ACPI_VIDEO_BACKLIGHT_FORCE_VENDOR	t/tree/include/linux/acpi.h	/^#define ACPI_VIDEO_BACKLIGHT_FORCE_VENDOR	/;"	d
ACPI_VIDEO_BACKLIGHT_FORCE_VIDEO	t/tree/include/linux/acpi.h	/^#define ACPI_VIDEO_BACKLIGHT_FORCE_VIDEO	/;"	d
ACPI_VIDEO_COMPONENT	t/tree/include/acpi/acpi_drivers.h	/^#define ACPI_VIDEO_COMPONENT	/;"	d
ACPI_VIDEO_DEVICE_POSTING	t/tree/include/linux/acpi.h	/^#define ACPI_VIDEO_DEVICE_POSTING	/;"	d
ACPI_VIDEO_HID	t/tree/include/acpi/acpi_drivers.h	/^#define ACPI_VIDEO_HID	/;"	d
ACPI_VIDEO_OUTPUT_SWITCHING	t/tree/include/linux/acpi.h	/^#define ACPI_VIDEO_OUTPUT_SWITCHING	/;"	d
ACPI_VIDEO_OUTPUT_SWITCHING_DMI_VENDOR	t/tree/include/linux/acpi.h	/^#define ACPI_VIDEO_OUTPUT_SWITCHING_DMI_VENDOR	/;"	d
ACPI_VIDEO_OUTPUT_SWITCHING_DMI_VIDEO	t/tree/include/linux/acpi.h	/^#define ACPI_VIDEO_OUTPUT_SWITCHING_DMI_VIDEO	/;"	d
ACPI_VIDEO_OUTPUT_SWITCHING_FORCE_VENDOR	t/tree/include/linux/acpi.h	/^#define ACPI_VIDEO_OUTPUT_SWITCHING_FORCE_VENDOR	/;"	d
ACPI_VIDEO_OUTPUT_SWITCHING_FORCE_VIDEO	t/tree/include/linux/acpi.h	/^#define ACPI_VIDEO_OUTPUT_SWITCHING_FORCE_VIDEO	/;"	d
ACPI_VIDEO_ROM_AVAILABLE	t/tree/include/linux/acpi.h	/^#define ACPI_VIDEO_ROM_AVAILABLE	/;"	d
APM_16_BIT_SUPPORT	t/tree/include/linux/apm_bios.h	/^#define APM_16_BIT_SUPPORT	/;"	d
APM_16_CONNECTED	t/tree/include/uapi/linux/apm_bios.h	/^#define APM_16_CONNECTED	/;"	d
APM_16_UNSUPPORTED	t/tree/include/uapi/linux/apm_bios.h	/^#define APM_16_UNSUPPORTED	/;"	d
APM_32_BIT_SUPPORT	t/tree/include/linux/apm_bios.h	/^#define APM_32_BIT_SUPPORT	/;"	d
APM_32_CONNECTED	t/tree/include/uapi/linux/apm_bios.h	/^#define APM_32_CONNECTED	/;"	d
APM_32_UNSUPPORTED	t/tree/include/uapi/linux/apm_bios.h	/^#define APM_32_UNSUPPORTED	/;"	d
APM_BAD_DEVICE	t/tree/include/uapi/linux/apm_bios.h	/^#define APM_BAD_DEVICE	/;"	d
APM_BAD_FUNCTION	t/tree/include/uapi/linux/apm_bios.h	/^#define APM_BAD_FUNCTION	/;"	d
APM_BAD_PARAM	t/tree/include/uapi/linux/apm_bios.h	/^#define APM_BAD_PARAM	/;"	d
APM_BAD_STATE	t/tree/include/uapi/linux/apm_bios.h	/^#define APM_BAD_STATE	/;"	d
APM_BIOS_DISABLED	t/tree/include/linux/apm_bios.h	/^#define APM_BIOS_DISABLED /;"	d
APM_BIOS_DISENGAGED	t/tree/include/linux/apm_bios.h	/^#define APM_BIOS_DISENGAGED /;"	d
APM_CAPABILITY_CHANGE	t/tree/include/uapi/linux/apm_bios.h	/^#define APM_CAPABILITY_CHANGE	/;"	d
APM_CAP_GLOBAL_STANDBY	t/tree/include/uapi/linux/apm_bios.h	/^#define APM_CAP_GLOBAL_STANDBY	/;"	d
APM_CAP_GLOBAL_SUSPEND	t/tree/include/uapi/linux/apm_bios.h	/^#define APM_CAP_GLOBAL_SUSPEND	/;"	d
APM_CAP_RESUME_STANDBY_PCMCIA	t/tree/include/uapi/linux/apm_bios.h	/^#define APM_CAP_RESUME_STANDBY_PCMCIA	/;"	d
APM_CAP_RESUME_STANDBY_RING	t/tree/include/uapi/linux/apm_bios.h	/^#define APM_CAP_RESUME_STANDBY_RING	/;"	d
APM_CAP_RESUME_STANDBY_TIMER	t/tree/include/uapi/linux/apm_bios.h	/^#define APM_CAP_RESUME_STANDBY_TIMER	/;"	d
APM_CAP_RESUME_SUSPEND_PCMCIA	t/tree/include/uapi/linux/apm_bios.h	/^#define APM_CAP_RESUME_SUSPEND_PCMCIA	/;"	d
APM_CAP_RESUME_SUSPEND_RING	t/tree/include/uapi/linux/apm_bios.h	/^#define APM_CAP_RESUME_SUSPEND_RING	/;"	d
APM_CAP_RESUME_SUSPEND_TIMER	t/tree/include/uapi/linux/apm_bios.h	/^#define APM_CAP_RESUME_SUSPEND_TIMER	/;"	d
APM_CONNECTED	t/tree/include/uapi/linux/apm_bios.h	/^#define APM_CONNECTED	/;"	d
APM_CRITICAL_RESUME	t/tree/include/uapi/linux/apm_bios.h	/^#define APM_CRITICAL_RESUME	/;"	d
APM_CRITICAL_SUSPEND	t/tree/include/uapi/linux/apm_bios.h	/^#define APM_CRITICAL_SUSPEND	/;"	d
APM_CS	t/tree/include/linux/apm_bios.h	/^#define APM_CS	/;"	d
APM_CS_16	t/tree/include/linux/apm_bios.h	/^#define APM_CS_16	/;"	d
APM_DEVICE_ALL	t/tree/include/uapi/linux/apm_bios.h	/^#define APM_DEVICE_ALL	/;"	d
APM_DEVICE_BALL	t/tree/include/linux/apm_bios.h	/^#define APM_DEVICE_BALL	/;"	d
APM_DEVICE_BATTERY	t/tree/include/uapi/linux/apm_bios.h	/^#define APM_DEVICE_BATTERY	/;"	d
APM_DEVICE_BIOS	t/tree/include/uapi/linux/apm_bios.h	/^#define APM_DEVICE_BIOS	/;"	d
APM_DEVICE_CLASS	t/tree/include/uapi/linux/apm_bios.h	/^#define APM_DEVICE_CLASS	/;"	d
APM_DEVICE_DISPLAY	t/tree/include/uapi/linux/apm_bios.h	/^#define APM_DEVICE_DISPLAY	/;"	d
APM_DEVICE_MASK	t/tree/include/uapi/linux/apm_bios.h	/^#define APM_DEVICE_MASK	/;"	d
APM_DEVICE_NETWORK	t/tree/include/uapi/linux/apm_bios.h	/^#define APM_DEVICE_NETWORK	/;"	d
APM_DEVICE_OEM	t/tree/include/uapi/linux/apm_bios.h	/^#define APM_DEVICE_OEM	/;"	d
APM_DEVICE_OLD_ALL	t/tree/include/uapi/linux/apm_bios.h	/^#define APM_DEVICE_OLD_ALL	/;"	d
APM_DEVICE_PARALLEL	t/tree/include/uapi/linux/apm_bios.h	/^#define APM_DEVICE_PARALLEL	/;"	d
APM_DEVICE_PCMCIA	t/tree/include/uapi/linux/apm_bios.h	/^#define APM_DEVICE_PCMCIA	/;"	d
APM_DEVICE_SERIAL	t/tree/include/uapi/linux/apm_bios.h	/^#define APM_DEVICE_SERIAL	/;"	d
APM_DEVICE_STORAGE	t/tree/include/uapi/linux/apm_bios.h	/^#define APM_DEVICE_STORAGE	/;"	d
APM_DISABLED	t/tree/include/uapi/linux/apm_bios.h	/^#define APM_DISABLED	/;"	d
APM_DS	t/tree/include/linux/apm_bios.h	/^#define APM_DS	/;"	d
APM_FUNC_16BIT_CONN	t/tree/include/linux/apm_bios.h	/^#define	APM_FUNC_16BIT_CONN	/;"	d
APM_FUNC_32BIT_CONN	t/tree/include/linux/apm_bios.h	/^#define	APM_FUNC_32BIT_CONN	/;"	d
APM_FUNC_BUSY	t/tree/include/linux/apm_bios.h	/^#define	APM_FUNC_BUSY	/;"	d
APM_FUNC_DISABLE_RING	t/tree/include/linux/apm_bios.h	/^#define	APM_FUNC_DISABLE_RING	/;"	d
APM_FUNC_DISABLE_TIMER	t/tree/include/linux/apm_bios.h	/^#define	APM_FUNC_DISABLE_TIMER	/;"	d
APM_FUNC_DISCONN	t/tree/include/linux/apm_bios.h	/^#define	APM_FUNC_DISCONN	/;"	d
APM_FUNC_ENABLE_DEV_PM	t/tree/include/linux/apm_bios.h	/^#define	APM_FUNC_ENABLE_DEV_PM	/;"	d
APM_FUNC_ENABLE_PM	t/tree/include/linux/apm_bios.h	/^#define	APM_FUNC_ENABLE_PM	/;"	d
APM_FUNC_ENABLE_RING	t/tree/include/linux/apm_bios.h	/^#define	APM_FUNC_ENABLE_RING	/;"	d
APM_FUNC_ENGAGE_PM	t/tree/include/linux/apm_bios.h	/^#define	APM_FUNC_ENGAGE_PM	/;"	d
APM_FUNC_GET_CAP	t/tree/include/linux/apm_bios.h	/^#define	APM_FUNC_GET_CAP	/;"	d
APM_FUNC_GET_EVENT	t/tree/include/linux/apm_bios.h	/^#define	APM_FUNC_GET_EVENT	/;"	d
APM_FUNC_GET_RING	t/tree/include/linux/apm_bios.h	/^#define	APM_FUNC_GET_RING	/;"	d
APM_FUNC_GET_STATE	t/tree/include/linux/apm_bios.h	/^#define	APM_FUNC_GET_STATE	/;"	d
APM_FUNC_GET_STATUS	t/tree/include/linux/apm_bios.h	/^#define	APM_FUNC_GET_STATUS	/;"	d
APM_FUNC_GET_TIMER	t/tree/include/linux/apm_bios.h	/^#define	APM_FUNC_GET_TIMER	/;"	d
APM_FUNC_IDLE	t/tree/include/linux/apm_bios.h	/^#define	APM_FUNC_IDLE	/;"	d
APM_FUNC_INST_CHECK	t/tree/include/linux/apm_bios.h	/^#define	APM_FUNC_INST_CHECK	/;"	d
APM_FUNC_REAL_CONN	t/tree/include/linux/apm_bios.h	/^#define	APM_FUNC_REAL_CONN	/;"	d
APM_FUNC_RESTORE_BIOS	t/tree/include/linux/apm_bios.h	/^#define	APM_FUNC_RESTORE_BIOS	/;"	d
APM_FUNC_RESUME_ON_RING	t/tree/include/linux/apm_bios.h	/^#define	APM_FUNC_RESUME_ON_RING	/;"	d
APM_FUNC_RESUME_TIMER	t/tree/include/linux/apm_bios.h	/^#define	APM_FUNC_RESUME_TIMER	/;"	d
APM_FUNC_SET_STATE	t/tree/include/linux/apm_bios.h	/^#define	APM_FUNC_SET_STATE	/;"	d
APM_FUNC_SET_TIMER	t/tree/include/linux/apm_bios.h	/^#define	APM_FUNC_SET_TIMER	/;"	d
APM_FUNC_TIMER	t/tree/include/linux/apm_bios.h	/^#define	APM_FUNC_TIMER	/;"	d
APM_FUNC_TIMER_DISABLE	t/tree/include/linux/apm_bios.h	/^#define	APM_FUNC_TIMER_DISABLE	/;"	d
APM_FUNC_TIMER_ENABLE	t/tree/include/linux/apm_bios.h	/^#define	APM_FUNC_TIMER_ENABLE	/;"	d
APM_FUNC_TIMER_GET	t/tree/include/linux/apm_bios.h	/^#define	APM_FUNC_TIMER_GET	/;"	d
APM_FUNC_VERSION	t/tree/include/linux/apm_bios.h	/^#define	APM_FUNC_VERSION	/;"	d
APM_HIBERNATION_RESUME	t/tree/include/uapi/linux/apm_bios.h	/^#define APM_HIBERNATION_RESUME	/;"	d
APM_IDLE_SLOWS_CLOCK	t/tree/include/linux/apm_bios.h	/^#define APM_IDLE_SLOWS_CLOCK	/;"	d
APM_IOC_STANDBY	t/tree/include/uapi/linux/apm_bios.h	/^#define APM_IOC_STANDBY	/;"	d
APM_IOC_SUSPEND	t/tree/include/uapi/linux/apm_bios.h	/^#define APM_IOC_SUSPEND	/;"	d
APM_LOW_BATTERY	t/tree/include/uapi/linux/apm_bios.h	/^#define APM_LOW_BATTERY	/;"	d
APM_MAX_BATTERIES	t/tree/include/uapi/linux/apm_bios.h	/^#define APM_MAX_BATTERIES	/;"	d
APM_NORMAL_RESUME	t/tree/include/uapi/linux/apm_bios.h	/^#define APM_NORMAL_RESUME	/;"	d
APM_NOT_CONNECTED	t/tree/include/uapi/linux/apm_bios.h	/^#define APM_NOT_CONNECTED	/;"	d
APM_NOT_ENGAGED	t/tree/include/uapi/linux/apm_bios.h	/^#define APM_NOT_ENGAGED	/;"	d
APM_NOT_PRESENT	t/tree/include/uapi/linux/apm_bios.h	/^#define APM_NOT_PRESENT	/;"	d
APM_NO_ERROR	t/tree/include/uapi/linux/apm_bios.h	/^#define APM_NO_ERROR	/;"	d
APM_NO_EVENTS	t/tree/include/uapi/linux/apm_bios.h	/^#define APM_NO_EVENTS	/;"	d
APM_POWER_STATUS_CHANGE	t/tree/include/uapi/linux/apm_bios.h	/^#define APM_POWER_STATUS_CHANGE	/;"	d
APM_RESUME_DISABLED	t/tree/include/uapi/linux/apm_bios.h	/^#define APM_RESUME_DISABLED	/;"	d
APM_STANDBY_RESUME	t/tree/include/uapi/linux/apm_bios.h	/^#define APM_STANDBY_RESUME	/;"	d
APM_STATE_BUSY	t/tree/include/uapi/linux/apm_bios.h	/^#define APM_STATE_BUSY	/;"	d
APM_STATE_DISABLE	t/tree/include/uapi/linux/apm_bios.h	/^#define APM_STATE_DISABLE	/;"	d
APM_STATE_DISENGAGE	t/tree/include/uapi/linux/apm_bios.h	/^#define APM_STATE_DISENGAGE	/;"	d
APM_STATE_ENABLE	t/tree/include/uapi/linux/apm_bios.h	/^#define APM_STATE_ENABLE	/;"	d
APM_STATE_ENGAGE	t/tree/include/uapi/linux/apm_bios.h	/^#define APM_STATE_ENGAGE	/;"	d
APM_STATE_OEM_DEV	t/tree/include/uapi/linux/apm_bios.h	/^#define APM_STATE_OEM_DEV	/;"	d
APM_STATE_OEM_SYS	t/tree/include/uapi/linux/apm_bios.h	/^#define APM_STATE_OEM_SYS	/;"	d
APM_STATE_OFF	t/tree/include/uapi/linux/apm_bios.h	/^#define APM_STATE_OFF	/;"	d
APM_STATE_READY	t/tree/include/uapi/linux/apm_bios.h	/^#define APM_STATE_READY	/;"	d
APM_STATE_REJECT	t/tree/include/uapi/linux/apm_bios.h	/^#define APM_STATE_REJECT	/;"	d
APM_STATE_STANDBY	t/tree/include/uapi/linux/apm_bios.h	/^#define APM_STATE_STANDBY	/;"	d
APM_STATE_SUSPEND	t/tree/include/uapi/linux/apm_bios.h	/^#define APM_STATE_SUSPEND	/;"	d
APM_SUCCESS	t/tree/include/uapi/linux/apm_bios.h	/^#define APM_SUCCESS	/;"	d
APM_SYS_STANDBY	t/tree/include/uapi/linux/apm_bios.h	/^#define APM_SYS_STANDBY	/;"	d
APM_SYS_SUSPEND	t/tree/include/uapi/linux/apm_bios.h	/^#define APM_SYS_SUSPEND	/;"	d
APM_UPDATE_TIME	t/tree/include/uapi/linux/apm_bios.h	/^#define APM_UPDATE_TIME	/;"	d
APM_USER_HIBERNATION	t/tree/include/uapi/linux/apm_bios.h	/^#define APM_USER_HIBERNATION	/;"	d
APM_USER_STANDBY	t/tree/include/uapi/linux/apm_bios.h	/^#define APM_USER_STANDBY	/;"	d
APM_USER_SUSPEND	t/tree/include/uapi/linux/apm_bios.h	/^#define APM_USER_SUSPEND	/;"	d
ARCH_HAS_POWER_INIT	t/tree/arch/x86/include/asm/acpi.h	/^#define ARCH_HAS_POWER_INIT	/;"	d
ARCH_LOW_ADDRESS_LIMIT	t/tree/include/linux/memblock.h	/^#define ARCH_LOW_ADDRESS_LIMIT /;"	d
ASSOC_ARRAY_KEY_CHUNK_SIZE	t/tree/include/linux/assoc_array.h	/^#define ASSOC_ARRAY_KEY_CHUNK_SIZE /;"	d
BAD_MADT_ENTRY	t/tree/include/linux/acpi.h	/^#define BAD_MADT_ENTRY(/;"	d
BAR	t/tree/issue188.c	/^    #define BAR /;"	d	file:
BITS_PER_XA_VALUE	t/tree/include/linux/xarray.h	/^#define BITS_PER_XA_VALUE	/;"	d
CREATE_TRACE_POINTS	t/tree/drivers/i2c/i2c-core-base.c	/^#define CREATE_TRACE_POINTS$/;"	d	file:
CREATE_TRACE_POINTS	t/tree/drivers/i2c/i2c-core-smbus.c	/^#define CREATE_TRACE_POINTS$/;"	d	file:
CRED_MAGIC	t/tree/include/linux/cred.h	/^#define CRED_MAGIC	/;"	d
CRED_MAGIC_DEAD	t/tree/include/linux/cred.h	/^#define CRED_MAGIC_DEAD	/;"	d
DEBUG	t/tree/drivers/i2c/i2c-stub.c	/^#define DEBUG /;"	d	file:
DEFINE_RCU_SYNC	t/tree/include/linux/rcu_sync.h	/^#define	DEFINE_RCU_SYNC(/;"	d
DEFINE_SRCU	t/tree/include/linux/srcutree.h	/^#define DEFINE_SRCU(name)		__DEFINE_SRCU(/;"	d
DEFINE_STATIC_SRCU	t/tree/include/linux/srcutree.h	/^#define DEFINE_STATIC_SRCU(/;"	d
DEFINE_XARRAY	t/tree/include/linux/xarray.h	/^#define DEFINE_XARRAY(name) DEFINE_XARRAY_/;"	d
DEFINE_XARRAY_ALLOC	t/tree/include/linux/xarray.h	/^#define DEFINE_XARRAY_ALLOC(/;"	d
DEFINE_XARRAY_ALLOC1	t/tree/include/linux/xarray.h	/^#define DEFINE_XARRAY_ALLOC1(/;"	d
DEFINE_XARRAY_FLAGS	t/tree/include/linux/xarray.h	/^#define DEFINE_XARRAY_FLAGS(/;"	d
DPM_FLAG_LEAVE_SUSPENDED	t/tree/include/linux/pm.h	/^#define DPM_FLAG_LEAVE_SUSPENDED	/;"	d
DPM_FLAG_NEVER_SKIP	t/tree/include/linux/pm.h	/^#define DPM_FLAG_NEVER_SKIP	/;"	d
DPM_FLAG_SMART_PREPARE	t/tree/include/linux/pm.h	/^#define DPM_FLAG_SMART_PREPARE	/;"	d
DPM_FLAG_SMART_SUSPEND	t/tree/include/linux/pm.h	/^#define DPM_FLAG_SMART_SUSPEND	/;"	d
DPM_ORDER_DEV_AFTER_PARENT	t/tree/include/linux/pm.h	/^	DPM_ORDER_DEV_AFTER_PARENT,$/;"	e	enum:dpm_order
DPM_ORDER_DEV_LAST	t/tree/include/linux/pm.h	/^	DPM_ORDER_DEV_LAST,$/;"	e	enum:dpm_order
DPM_ORDER_NONE	t/tree/include/linux/pm.h	/^	DPM_ORDER_NONE,$/;"	e	enum:dpm_order
DPM_ORDER_PARENT_BEFORE_DEV	t/tree/include/linux/pm.h	/^	DPM_ORDER_PARENT_BEFORE_DEV,$/;"	e	enum:dpm_order
ENTRY	t/tree/drivers/firmware/broadcom/bcm74xx_sprom.c	/^#define ENTRY(/;"	d	file:
EPOLLERR	t/tree/include/uapi/linux/eventpoll.h	/^#define EPOLLERR	/;"	d
EPOLLET	t/tree/include/uapi/linux/eventpoll.h	/^#define EPOLLET	/;"	d
EPOLLEXCLUSIVE	t/tree/include/uapi/linux/eventpoll.h	/^#define EPOLLEXCLUSIVE	/;"	d
EPOLLHUP	t/tree/include/uapi/linux/eventpoll.h	/^#define EPOLLHUP	/;"	d
EPOLLIN	t/tree/include/uapi/linux/eventpoll.h	/^#define EPOLLIN	/;"	d
EPOLLMSG	t/tree/include/uapi/linux/eventpoll.h	/^#define EPOLLMSG	/;"	d
EPOLLNVAL	t/tree/include/uapi/linux/eventpoll.h	/^#define EPOLLNVAL	/;"	d
EPOLLONESHOT	t/tree/include/uapi/linux/eventpoll.h	/^#define EPOLLONESHOT	/;"	d
EPOLLOUT	t/tree/include/uapi/linux/eventpoll.h	/^#define EPOLLOUT	/;"	d
EPOLLPRI	t/tree/include/uapi/linux/eventpoll.h	/^#define EPOLLPRI	/;"	d
EPOLLRDBAND	t/tree/include/uapi/linux/eventpoll.h	/^#define EPOLLRDBAND	/;"	d
EPOLLRDHUP	t/tree/include/uapi/linux/eventpoll.h	/^#define EPOLLRDHUP	/;"	d
EPOLLRDNORM	t/tree/include/uapi/linux/eventpoll.h	/^#define EPOLLRDNORM	/;"	d
EPOLLWAKEUP	t/tree/include/uapi/linux/eventpoll.h	/^#define EPOLLWAKEUP	/;"	d
EPOLLWRBAND	t/tree/include/uapi/linux/eventpoll.h	/^#define EPOLLWRBAND	/;"	d
EPOLLWRNORM	t/tree/include/uapi/linux/eventpoll.h	/^#define EPOLLWRNORM	/;"	d
EPOLL_CLOEXEC	t/tree/include/uapi/linux/eventpoll.h	/^#define EPOLL_CLOEXEC /;"	d
EPOLL_CTL_ADD	t/tree/include/uapi/linux/eventpoll.h	/^#define EPOLL_CTL_ADD /;"	d
EPOLL_CTL_DEL	t/tree/include/uapi/linux/eventpoll.h	/^#define EPOLL_CTL_DEL /;"	d
EPOLL_CTL_MOD	t/tree/include/uapi/linux/eventpoll.h	/^#define EPOLL_CTL_MOD /;"	d
EPOLL_PACKED	t/tree/include/uapi/linux/eventpoll.h	/^#define EPOLL_PACKED /;"	d
EPOLL_PACKED	t/tree/include/uapi/linux/eventpoll.h	/^#define EPOLL_PACKED$/;"	d
EPOLL_PACKED	t/tree/include/uapi/linux/eventpoll.h	/^} EPOLL_PACKED;$/;"	v	typeref:struct:epoll_event
HASHDIST_DEFAULT	t/tree/include/linux/memblock.h	/^#define HASHDIST_DEFAULT /;"	d
HASH_EARLY	t/tree/include/linux/memblock.h	/^#define HASH_EARLY	/;"	d
HASH_SMALL	t/tree/include/linux/memblock.h	/^#define HASH_SMALL	/;"	d
HASH_ZERO	t/tree/include/linux/memblock.h	/^#define HASH_ZERO	/;"	d
I2C_ACPI_MAX_SCAN_DEPTH	t/tree/drivers/i2c/i2c-core-acpi.c	/^#define I2C_ACPI_MAX_SCAN_DEPTH /;"	d	file:
I2C_ADDRS	t/tree/include/linux/i2c.h	/^#define I2C_ADDRS(/;"	d
I2C_ADDR_7BITS_COUNT	t/tree/drivers/i2c/i2c-core-base.c	/^#define I2C_ADDR_7BITS_COUNT	/;"	d	file:
I2C_ADDR_7BITS_MAX	t/tree/drivers/i2c/i2c-core-base.c	/^#define I2C_ADDR_7BITS_MAX	/;"	d	file:
I2C_ADDR_DEVICE_ID	t/tree/drivers/i2c/i2c-core-base.c	/^#define I2C_ADDR_DEVICE_ID	/;"	d	file:
I2C_ADDR_OFFSET_SLAVE	t/tree/drivers/i2c/i2c-core-base.c	/^#define I2C_ADDR_OFFSET_SLAVE	/;"	d	file:
I2C_ADDR_OFFSET_TEN_BIT	t/tree/drivers/i2c/i2c-core-base.c	/^#define I2C_ADDR_OFFSET_TEN_BIT	/;"	d	file:
I2C_ALF_IS_SUSPENDED	t/tree/include/linux/i2c.h	/^#define I2C_ALF_IS_SUSPENDED	/;"	d
I2C_ALF_SUSPEND_REPORTED	t/tree/include/linux/i2c.h	/^#define I2C_ALF_SUSPEND_REPORTED	/;"	d
I2C_AQ_COMB	t/tree/include/linux/i2c.h	/^#define I2C_AQ_COMB	/;"	d
I2C_AQ_COMB_READ_SECOND	t/tree/include/linux/i2c.h	/^#define I2C_AQ_COMB_READ_SECOND	/;"	d
I2C_AQ_COMB_SAME_ADDR	t/tree/include/linux/i2c.h	/^#define I2C_AQ_COMB_SAME_ADDR	/;"	d
I2C_AQ_COMB_WRITE_FIRST	t/tree/include/linux/i2c.h	/^#define I2C_AQ_COMB_WRITE_FIRST	/;"	d
I2C_AQ_COMB_WRITE_THEN_READ	t/tree/include/linux/i2c.h	/^#define I2C_AQ_COMB_WRITE_THEN_READ	/;"	d
I2C_AQ_NO_CLK_STRETCH	t/tree/include/linux/i2c.h	/^#define I2C_AQ_NO_CLK_STRETCH	/;"	d
I2C_AQ_NO_ZERO_LEN	t/tree/include/linux/i2c.h	/^#define I2C_AQ_NO_ZERO_LEN		(I2C_AQ_NO_ZERO_LEN_READ | I2C_AQ_NO_ZERO_LEN_/;"	d
I2C_AQ_NO_ZERO_LEN_READ	t/tree/include/linux/i2c.h	/^#define I2C_AQ_NO_ZERO_LEN_READ	/;"	d
I2C_AQ_NO_ZERO_LEN_WRITE	t/tree/include/linux/i2c.h	/^#define I2C_AQ_NO_ZERO_LEN_WRITE	/;"	d
I2C_BOARD_INFO	t/tree/include/linux/i2c.h	/^#define I2C_BOARD_INFO(/;"	d
I2C_CLASS_DDC	t/tree/include/linux/i2c.h	/^#define I2C_CLASS_DDC	/;"	d
I2C_CLASS_DEPRECATED	t/tree/include/linux/i2c.h	/^#define I2C_CLASS_DEPRECATED	/;"	d
I2C_CLASS_HWMON	t/tree/include/linux/i2c.h	/^#define I2C_CLASS_HWMON	/;"	d
I2C_CLASS_SPD	t/tree/include/linux/i2c.h	/^#define I2C_CLASS_SPD	/;"	d
I2C_CLIENT_END	t/tree/include/linux/i2c.h	/^#define I2C_CLIENT_END	/;"	d
I2C_CLIENT_HOST_NOTIFY	t/tree/include/linux/i2c.h	/^#define I2C_CLIENT_HOST_NOTIFY	/;"	d
I2C_CLIENT_PEC	t/tree/include/linux/i2c.h	/^#define I2C_CLIENT_PEC	/;"	d
I2C_CLIENT_SCCB	t/tree/include/linux/i2c.h	/^#define I2C_CLIENT_SCCB	/;"	d
I2C_CLIENT_SLAVE	t/tree/include/linux/i2c.h	/^#define I2C_CLIENT_SLAVE	/;"	d
I2C_CLIENT_TEN	t/tree/include/linux/i2c.h	/^#define I2C_CLIENT_TEN	/;"	d
I2C_CLIENT_WAKE	t/tree/include/linux/i2c.h	/^#define I2C_CLIENT_WAKE	/;"	d
I2C_DEVICE_ID_ANALOG_DEVICES	t/tree/include/linux/i2c.h	/^#define I2C_DEVICE_ID_ANALOG_DEVICES /;"	d
I2C_DEVICE_ID_ATMEL	t/tree/include/linux/i2c.h	/^#define I2C_DEVICE_ID_ATMEL /;"	d
I2C_DEVICE_ID_ESPROS_PHOTONICS_AG	t/tree/include/linux/i2c.h	/^#define I2C_DEVICE_ID_ESPROS_PHOTONICS_AG /;"	d
I2C_DEVICE_ID_FLIR	t/tree/include/linux/i2c.h	/^#define I2C_DEVICE_ID_FLIR /;"	d
I2C_DEVICE_ID_FUJITSU_SEMICONDUCTOR	t/tree/include/linux/i2c.h	/^#define I2C_DEVICE_ID_FUJITSU_SEMICONDUCTOR /;"	d
I2C_DEVICE_ID_NONE	t/tree/include/linux/i2c.h	/^#define I2C_DEVICE_ID_NONE /;"	d
I2C_DEVICE_ID_NXP_SEMICONDUCTORS	t/tree/include/linux/i2c.h	/^#define I2C_DEVICE_ID_NXP_SEMICONDUCTORS /;"	d
I2C_DEVICE_ID_NXP_SEMICONDUCTORS_1	t/tree/include/linux/i2c.h	/^#define I2C_DEVICE_ID_NXP_SEMICONDUCTORS_1 /;"	d
I2C_DEVICE_ID_NXP_SEMICONDUCTORS_2	t/tree/include/linux/i2c.h	/^#define I2C_DEVICE_ID_NXP_SEMICONDUCTORS_2 /;"	d
I2C_DEVICE_ID_NXP_SEMICONDUCTORS_3	t/tree/include/linux/i2c.h	/^#define I2C_DEVICE_ID_NXP_SEMICONDUCTORS_3 /;"	d
I2C_DEVICE_ID_O2MICRO	t/tree/include/linux/i2c.h	/^#define I2C_DEVICE_ID_O2MICRO /;"	d
I2C_DEVICE_ID_ON_SEMICONDUCTOR	t/tree/include/linux/i2c.h	/^#define I2C_DEVICE_ID_ON_SEMICONDUCTOR /;"	d
I2C_DEVICE_ID_RAMTRON_INTERNATIONAL	t/tree/include/linux/i2c.h	/^#define I2C_DEVICE_ID_RAMTRON_INTERNATIONAL /;"	d
I2C_DEVICE_ID_SPRINTEK_CORPORATION	t/tree/include/linux/i2c.h	/^#define I2C_DEVICE_ID_SPRINTEK_CORPORATION /;"	d
I2C_DEVICE_ID_STMICROELECTRONICS	t/tree/include/linux/i2c.h	/^#define I2C_DEVICE_ID_STMICROELECTRONICS /;"	d
I2C_FUNC_10BIT_ADDR	t/tree/include/uapi/linux/i2c.h	/^#define I2C_FUNC_10BIT_ADDR	/;"	d
I2C_FUNC_I2C	t/tree/include/uapi/linux/i2c.h	/^#define I2C_FUNC_I2C	/;"	d
I2C_FUNC_NOSTART	t/tree/include/uapi/linux/i2c.h	/^#define I2C_FUNC_NOSTART	/;"	d
I2C_FUNC_PROTOCOL_MANGLING	t/tree/include/uapi/linux/i2c.h	/^#define I2C_FUNC_PROTOCOL_MANGLING	/;"	d
I2C_FUNC_SLAVE	t/tree/include/uapi/linux/i2c.h	/^#define I2C_FUNC_SLAVE	/;"	d
I2C_FUNC_SMBUS_BLOCK_DATA	t/tree/include/uapi/linux/i2c.h	/^#define I2C_FUNC_SMBUS_BLOCK_DATA	/;"	d
I2C_FUNC_SMBUS_BLOCK_PROC_CALL	t/tree/include/uapi/linux/i2c.h	/^#define I2C_FUNC_SMBUS_BLOCK_PROC_CALL	/;"	d
I2C_FUNC_SMBUS_BYTE	t/tree/include/uapi/linux/i2c.h	/^#define I2C_FUNC_SMBUS_BYTE	/;"	d
I2C_FUNC_SMBUS_BYTE_DATA	t/tree/include/uapi/linux/i2c.h	/^#define I2C_FUNC_SMBUS_BYTE_DATA	/;"	d
I2C_FUNC_SMBUS_EMUL	t/tree/include/uapi/linux/i2c.h	/^#define I2C_FUNC_SMBUS_EMUL	/;"	d
I2C_FUNC_SMBUS_HOST_NOTIFY	t/tree/include/uapi/linux/i2c.h	/^#define I2C_FUNC_SMBUS_HOST_NOTIFY	/;"	d
I2C_FUNC_SMBUS_I2C_BLOCK	t/tree/include/uapi/linux/i2c.h	/^#define I2C_FUNC_SMBUS_I2C_BLOCK	/;"	d
I2C_FUNC_SMBUS_PEC	t/tree/include/uapi/linux/i2c.h	/^#define I2C_FUNC_SMBUS_PEC	/;"	d
I2C_FUNC_SMBUS_PROC_CALL	t/tree/include/uapi/linux/i2c.h	/^#define I2C_FUNC_SMBUS_PROC_CALL	/;"	d
I2C_FUNC_SMBUS_QUICK	t/tree/include/uapi/linux/i2c.h	/^#define I2C_FUNC_SMBUS_QUICK	/;"	d
I2C_FUNC_SMBUS_READ_BLOCK_DATA	t/tree/include/uapi/linux/i2c.h	/^#define I2C_FUNC_SMBUS_READ_BLOCK_DATA	/;"	d
I2C_FUNC_SMBUS_READ_BYTE	t/tree/include/uapi/linux/i2c.h	/^#define I2C_FUNC_SMBUS_READ_BYTE	/;"	d
I2C_FUNC_SMBUS_READ_BYTE_DATA	t/tree/include/uapi/linux/i2c.h	/^#define I2C_FUNC_SMBUS_READ_BYTE_DATA	/;"	d
I2C_FUNC_SMBUS_READ_I2C_BLOCK	t/tree/include/uapi/linux/i2c.h	/^#define I2C_FUNC_SMBUS_READ_I2C_BLOCK	/;"	d
I2C_FUNC_SMBUS_READ_WORD_DATA	t/tree/include/uapi/linux/i2c.h	/^#define I2C_FUNC_SMBUS_READ_WORD_DATA	/;"	d
I2C_FUNC_SMBUS_WORD_DATA	t/tree/include/uapi/linux/i2c.h	/^#define I2C_FUNC_SMBUS_WORD_DATA	/;"	d
I2C_FUNC_SMBUS_WRITE_BLOCK_DATA	t/tree/include/uapi/linux/i2c.h	/^#define I2C_FUNC_SMBUS_WRITE_BLOCK_DATA /;"	d
I2C_FUNC_SMBUS_WRITE_BYTE	t/tree/include/uapi/linux/i2c.h	/^#define I2C_FUNC_SMBUS_WRITE_BYTE	/;"	d
I2C_FUNC_SMBUS_WRITE_BYTE_DATA	t/tree/include/uapi/linux/i2c.h	/^#define I2C_FUNC_SMBUS_WRITE_BYTE_DATA	/;"	d
I2C_FUNC_SMBUS_WRITE_I2C_BLOCK	t/tree/include/uapi/linux/i2c.h	/^#define I2C_FUNC_SMBUS_WRITE_I2C_BLOCK	/;"	d
I2C_FUNC_SMBUS_WRITE_WORD_DATA	t/tree/include/uapi/linux/i2c.h	/^#define I2C_FUNC_SMBUS_WRITE_WORD_DATA	/;"	d
I2C_LOCK_ROOT_ADAPTER	t/tree/include/linux/i2c.h	/^#define I2C_LOCK_ROOT_ADAPTER /;"	d
I2C_LOCK_SEGMENT	t/tree/include/linux/i2c.h	/^#define I2C_LOCK_SEGMENT /;"	d
I2C_MINORS	t/tree/drivers/i2c/i2c-dev.c	/^#define I2C_MINORS	/;"	d	file:
I2C_M_DMA_SAFE	t/tree/include/uapi/linux/i2c.h	/^#define I2C_M_DMA_SAFE	/;"	d
I2C_M_IGNORE_NAK	t/tree/include/uapi/linux/i2c.h	/^#define I2C_M_IGNORE_NAK	/;"	d
I2C_M_NOSTART	t/tree/include/uapi/linux/i2c.h	/^#define I2C_M_NOSTART	/;"	d
I2C_M_NO_RD_ACK	t/tree/include/uapi/linux/i2c.h	/^#define I2C_M_NO_RD_ACK	/;"	d
I2C_M_RD	t/tree/include/uapi/linux/i2c.h	/^#define I2C_M_RD	/;"	d
I2C_M_RECV_LEN	t/tree/include/uapi/linux/i2c.h	/^#define I2C_M_RECV_LEN	/;"	d
I2C_M_REV_DIR_ADDR	t/tree/include/uapi/linux/i2c.h	/^#define I2C_M_REV_DIR_ADDR	/;"	d
I2C_M_STOP	t/tree/include/uapi/linux/i2c.h	/^#define I2C_M_STOP	/;"	d
I2C_M_TEN	t/tree/include/uapi/linux/i2c.h	/^#define I2C_M_TEN	/;"	d
I2C_PROTOCOL_SMBUS_ALERT	t/tree/include/linux/i2c.h	/^	I2C_PROTOCOL_SMBUS_ALERT,$/;"	e	enum:i2c_alert_protocol
I2C_PROTOCOL_SMBUS_HOST_NOTIFY	t/tree/include/linux/i2c.h	/^	I2C_PROTOCOL_SMBUS_HOST_NOTIFY,$/;"	e	enum:i2c_alert_protocol
I2C_SLAVE_READ_PROCESSED	t/tree/include/linux/i2c.h	/^	I2C_SLAVE_READ_PROCESSED,$/;"	e	enum:i2c_slave_event
I2C_SLAVE_READ_REQUESTED	t/tree/include/linux/i2c.h	/^	I2C_SLAVE_READ_REQUESTED,$/;"	e	enum:i2c_slave_event
I2C_SLAVE_STOP	t/tree/include/linux/i2c.h	/^	I2C_SLAVE_STOP,$/;"	e	enum:i2c_slave_event
I2C_SLAVE_WRITE_RECEIVED	t/tree/include/linux/i2c.h	/^	I2C_SLAVE_WRITE_RECEIVED,$/;"	e	enum:i2c_slave_event
I2C_SLAVE_WRITE_REQUESTED	t/tree/include/linux/i2c.h	/^	I2C_SLAVE_WRITE_REQUESTED,$/;"	e	enum:i2c_slave_event
I2C_SMBUS_BLOCK_DATA	t/tree/include/uapi/linux/i2c.h	/^#define I2C_SMBUS_BLOCK_DATA	/;"	d
I2C_SMBUS_BLOCK_MAX	t/tree/include/uapi/linux/i2c.h	/^#define I2C_SMBUS_BLOCK_MAX	/;"	d
I2C_SMBUS_BLOCK_PROC_CALL	t/tree/include/uapi/linux/i2c.h	/^#define I2C_SMBUS_BLOCK_PROC_CALL /;"	d
I2C_SMBUS_BYTE	t/tree/include/uapi/linux/i2c.h	/^#define I2C_SMBUS_BYTE	/;"	d
I2C_SMBUS_BYTE_DATA	t/tree/include/uapi/linux/i2c.h	/^#define I2C_SMBUS_BYTE_DATA	/;"	d
I2C_SMBUS_I2C_BLOCK_BROKEN	t/tree/include/uapi/linux/i2c.h	/^#define I2C_SMBUS_I2C_BLOCK_BROKEN /;"	d
I2C_SMBUS_I2C_BLOCK_DATA	t/tree/include/uapi/linux/i2c.h	/^#define I2C_SMBUS_I2C_BLOCK_DATA /;"	d
I2C_SMBUS_PROC_CALL	t/tree/include/uapi/linux/i2c.h	/^#define I2C_SMBUS_PROC_CALL	/;"	d
I2C_SMBUS_QUICK	t/tree/include/uapi/linux/i2c.h	/^#define I2C_SMBUS_QUICK	/;"	d
I2C_SMBUS_READ	t/tree/include/uapi/linux/i2c.h	/^#define I2C_SMBUS_READ	/;"	d
I2C_SMBUS_WORD_DATA	t/tree/include/uapi/linux/i2c.h	/^#define I2C_SMBUS_WORD_DATA	/;"	d
I2C_SMBUS_WRITE	t/tree/include/uapi/linux/i2c.h	/^#define I2C_SMBUS_WRITE	/;"	d
INIT_RADIX_TREE	t/tree/include/linux/radix-tree.h	/^#define INIT_RADIX_TREE(/;"	d
INVALID_ACPI_IRQ	t/tree/include/linux/acpi.h	/^#define INVALID_ACPI_IRQ	/;"	d
IO_SPACE_LIMIT	t/tree/include/asm-generic/io.h	/^#define IO_SPACE_LIMIT /;"	d
KEY_ALLOC_BUILT_IN	t/tree/include/linux/key.h	/^#define KEY_ALLOC_BUILT_IN	/;"	d
KEY_ALLOC_BYPASS_RESTRICTION	t/tree/include/linux/key.h	/^#define KEY_ALLOC_BYPASS_RESTRICTION	/;"	d
KEY_ALLOC_IN_QUOTA	t/tree/include/linux/key.h	/^#define KEY_ALLOC_IN_QUOTA	/;"	d
KEY_ALLOC_NOT_IN_QUOTA	t/tree/include/linux/key.h	/^#define KEY_ALLOC_NOT_IN_QUOTA	/;"	d
KEY_ALLOC_QUOTA_OVERRUN	t/tree/include/linux/key.h	/^#define KEY_ALLOC_QUOTA_OVERRUN	/;"	d
KEY_ALLOC_UID_KEYRING	t/tree/include/linux/key.h	/^#define KEY_ALLOC_UID_KEYRING	/;"	d
KEY_DEBUG_MAGIC	t/tree/include/linux/key.h	/^#define KEY_DEBUG_MAGIC	/;"	d
KEY_FLAG_BUILTIN	t/tree/include/linux/key.h	/^#define KEY_FLAG_BUILTIN	/;"	d
KEY_FLAG_DEAD	t/tree/include/linux/key.h	/^#define KEY_FLAG_DEAD	/;"	d
KEY_FLAG_INVALIDATED	t/tree/include/linux/key.h	/^#define KEY_FLAG_INVALIDATED	/;"	d
KEY_FLAG_IN_QUOTA	t/tree/include/linux/key.h	/^#define KEY_FLAG_IN_QUOTA	/;"	d
KEY_FLAG_KEEP	t/tree/include/linux/key.h	/^#define KEY_FLAG_KEEP	/;"	d
KEY_FLAG_REVOKED	t/tree/include/linux/key.h	/^#define KEY_FLAG_REVOKED	/;"	d
KEY_FLAG_ROOT_CAN_CLEAR	t/tree/include/linux/key.h	/^#define KEY_FLAG_ROOT_CAN_CLEAR	/;"	d
KEY_FLAG_ROOT_CAN_INVAL	t/tree/include/linux/key.h	/^#define KEY_FLAG_ROOT_CAN_INVAL	/;"	d
KEY_FLAG_UID_KEYRING	t/tree/include/linux/key.h	/^#define KEY_FLAG_UID_KEYRING	/;"	d
KEY_FLAG_USER_CONSTRUCT	t/tree/include/linux/key.h	/^#define KEY_FLAG_USER_CONSTRUCT	/;"	d
KEY_GRP_ALL	t/tree/include/linux/key.h	/^#define KEY_GRP_ALL	/;"	d
KEY_GRP_LINK	t/tree/include/linux/key.h	/^#define KEY_GRP_LINK	/;"	d
KEY_GRP_READ	t/tree/include/linux/key.h	/^#define KEY_GRP_READ	/;"	d
KEY_GRP_SEARCH	t/tree/include/linux/key.h	/^#define KEY_GRP_SEARCH	/;"	d
KEY_GRP_SETATTR	t/tree/include/linux/key.h	/^#define KEY_GRP_SETATTR	/;"	d
KEY_GRP_VIEW	t/tree/include/linux/key.h	/^#define KEY_GRP_VIEW	/;"	d
KEY_GRP_WRITE	t/tree/include/linux/key.h	/^#define KEY_GRP_WRITE	/;"	d
KEY_IS_POSITIVE	t/tree/include/linux/key.h	/^	KEY_IS_POSITIVE,		\/* Positively instantiated *\/$/;"	e	enum:key_state
KEY_IS_UNINSTANTIATED	t/tree/include/linux/key.h	/^	KEY_IS_UNINSTANTIATED,$/;"	e	enum:key_state
KEY_NEED_ALL	t/tree/include/linux/key.h	/^#define	KEY_NEED_ALL	/;"	d
KEY_NEED_LINK	t/tree/include/linux/key.h	/^#define	KEY_NEED_LINK	/;"	d
KEY_NEED_READ	t/tree/include/linux/key.h	/^#define	KEY_NEED_READ	/;"	d
KEY_NEED_SEARCH	t/tree/include/linux/key.h	/^#define	KEY_NEED_SEARCH	/;"	d
KEY_NEED_SETATTR	t/tree/include/linux/key.h	/^#define	KEY_NEED_SETATTR /;"	d
KEY_NEED_VIEW	t/tree/include/linux/key.h	/^#define	KEY_NEED_VIEW	/;"	d
KEY_NEED_WRITE	t/tree/include/linux/key.h	/^#define	KEY_NEED_WRITE	/;"	d
KEY_OTH_ALL	t/tree/include/linux/key.h	/^#define KEY_OTH_ALL	/;"	d
KEY_OTH_LINK	t/tree/include/linux/key.h	/^#define KEY_OTH_LINK	/;"	d
KEY_OTH_READ	t/tree/include/linux/key.h	/^#define KEY_OTH_READ	/;"	d
KEY_OTH_SEARCH	t/tree/include/linux/key.h	/^#define KEY_OTH_SEARCH	/;"	d
KEY_OTH_SETATTR	t/tree/include/linux/key.h	/^#define KEY_OTH_SETATTR	/;"	d
KEY_OTH_VIEW	t/tree/include/linux/key.h	/^#define KEY_OTH_VIEW	/;"	d
KEY_OTH_WRITE	t/tree/include/linux/key.h	/^#define KEY_OTH_WRITE	/;"	d
KEY_PERM_UNDEF	t/tree/include/linux/key.h	/^#define KEY_PERM_UNDEF	/;"	d
KEY_POS_ALL	t/tree/include/linux/key.h	/^#define KEY_POS_ALL	/;"	d
KEY_POS_LINK	t/tree/include/linux/key.h	/^#define KEY_POS_LINK	/;"	d
KEY_POS_READ	t/tree/include/linux/key.h	/^#define KEY_POS_READ	/;"	d
KEY_POS_SEARCH	t/tree/include/linux/key.h	/^#define KEY_POS_SEARCH	/;"	d
KEY_POS_SETATTR	t/tree/include/linux/key.h	/^#define KEY_POS_SETATTR	/;"	d
KEY_POS_VIEW	t/tree/include/linux/key.h	/^#define KEY_POS_VIEW	/;"	d
KEY_POS_WRITE	t/tree/include/linux/key.h	/^#define KEY_POS_WRITE	/;"	d
KEY_USR_ALL	t/tree/include/linux/key.h	/^#define KEY_USR_ALL	/;"	d
KEY_USR_LINK	t/tree/include/linux/key.h	/^#define KEY_USR_LINK	/;"	d
KEY_USR_READ	t/tree/include/linux/key.h	/^#define KEY_USR_READ	/;"	d
KEY_USR_SEARCH	t/tree/include/linux/key.h	/^#define KEY_USR_SEARCH	/;"	d
KEY_USR_SETATTR	t/tree/include/linux/key.h	/^#define KEY_USR_SETATTR	/;"	d
KEY_USR_VIEW	t/tree/include/linux/key.h	/^#define KEY_USR_VIEW	/;"	d
KEY_USR_WRITE	t/tree/include/linux/key.h	/^#define KEY_USR_WRITE	/;"	d
KMOD_PATH_LEN	t/tree/include/linux/kmod.h	/^#define KMOD_PATH_LEN /;"	d
LOGIC_PIO_CPU_MMIO	t/tree/include/linux/logic_pio.h	/^	LOGIC_PIO_CPU_MMIO,		\/* Memory-mapped IO flag *\/$/;"	e	enum:__anona951f0040103
LOGIC_PIO_INDIRECT	t/tree/include/linux/logic_pio.h	/^	LOGIC_PIO_INDIRECT,		\/* Indirect IO flag *\/$/;"	e	enum:__anona951f0040103
MAX_CHIPS	t/tree/drivers/i2c/i2c-stub.c	/^#define MAX_CHIPS /;"	d	file:
MAX_PHANDLE_ARGS	t/tree/include/linux/of.h	/^#define MAX_PHANDLE_ARGS /;"	d
MAX_UINSN_BYTES	t/tree/arch/x86/include/asm/uprobes.h	/^#define MAX_UINSN_BYTES	/;"	d
MAX_URETPROBE_DEPTH	t/tree/include/linux/uprobes.h	/^#define MAX_URETPROBE_DEPTH	/;"	d
MEMBLOCK_ALLOC_ACCESSIBLE	t/tree/include/linux/memblock.h	/^#define MEMBLOCK_ALLOC_ACCESSIBLE	/;"	d
MEMBLOCK_ALLOC_ANYWHERE	t/tree/include/linux/memblock.h	/^#define MEMBLOCK_ALLOC_ANYWHERE	/;"	d
MEMBLOCK_ALLOC_KASAN	t/tree/include/linux/memblock.h	/^#define MEMBLOCK_ALLOC_KASAN	/;"	d
MEMBLOCK_HOTPLUG	t/tree/include/linux/memblock.h	/^	MEMBLOCK_HOTPLUG	= 0x1,	\/* hotpluggable region *\/$/;"	e	enum:memblock_flags
MEMBLOCK_LOW_LIMIT	t/tree/include/linux/memblock.h	/^#define MEMBLOCK_LOW_LIMIT /;"	d
MEMBLOCK_MIRROR	t/tree/include/linux/memblock.h	/^	MEMBLOCK_MIRROR		= 0x2,	\/* mirrored region *\/$/;"	e	enum:memblock_flags
MEMBLOCK_NOMAP	t/tree/include/linux/memblock.h	/^	MEMBLOCK_NOMAP		= 0x4,	\/* don't add to kernel direct mapping *\/$/;"	e	enum:memblock_flags
MEMBLOCK_NONE	t/tree/include/linux/memblock.h	/^	MEMBLOCK_NONE		= 0x0,	\/* No special request *\/$/;"	e	enum:memblock_flags
MMIO_UPPER_LIMIT	t/tree/include/linux/logic_pio.h	/^#define MMIO_UPPER_LIMIT /;"	d
NUM_RCU_LVL_0	t/tree/include/linux/rcu_node_tree.h	/^#  define NUM_RCU_LVL_0	/;"	d
NUM_RCU_LVL_1	t/tree/include/linux/rcu_node_tree.h	/^#  define NUM_RCU_LVL_1	/;"	d
NUM_RCU_LVL_2	t/tree/include/linux/rcu_node_tree.h	/^#  define NUM_RCU_LVL_2	/;"	d
NUM_RCU_LVL_3	t/tree/include/linux/rcu_node_tree.h	/^#  define NUM_RCU_LVL_3	/;"	d
NUM_RCU_LVL_INIT	t/tree/include/linux/rcu_node_tree.h	/^#  define NUM_RCU_LVL_INIT /;"	d
NUM_RCU_NODES	t/tree/include/linux/rcu_node_tree.h	/^#  define NUM_RCU_NODES	/;"	d
NVRAM_READ_VAL	t/tree/drivers/firmware/broadcom/bcm74xx_sprom.c	/^#define NVRAM_READ_VAL(/;"	d	file:
NVRAM_READ_VAL	t/tree/drivers/firmware/broadcom/bcm74xx_sprom.c	/^NVRAM_READ_VAL(s8)$/;"	f	typeref:typename:u8	file:
OF_BAD_ADDR	t/tree/include/linux/of.h	/^#define OF_BAD_ADDR	/;"	d
OF_DECLARE_1	t/tree/include/linux/of.h	/^#define OF_DECLARE_1(/;"	d
OF_DECLARE_1_RET	t/tree/include/linux/of.h	/^#define OF_DECLARE_1_RET(/;"	d
OF_DECLARE_2	t/tree/include/linux/of.h	/^#define OF_DECLARE_2(/;"	d
OF_DETACHED	t/tree/include/linux/of.h	/^#define OF_DETACHED	/;"	d
OF_DEV_AUXDATA	t/tree/include/linux/of_platform.h	/^#define OF_DEV_AUXDATA(/;"	d
OF_DYNAMIC	t/tree/include/linux/of.h	/^#define OF_DYNAMIC	/;"	d
OF_IS_DYNAMIC	t/tree/include/linux/of.h	/^#define OF_IS_DYNAMIC(/;"	d
OF_MARK_DYNAMIC	t/tree/include/linux/of.h	/^#define OF_MARK_DYNAMIC(/;"	d
OF_OVERLAY	t/tree/include/linux/of.h	/^#define OF_OVERLAY	/;"	d
OF_OVERLAY_FREE_CSET	t/tree/include/linux/of.h	/^#define OF_OVERLAY_FREE_CSET	/;"	d
OF_OVERLAY_POST_APPLY	t/tree/include/linux/of.h	/^	OF_OVERLAY_POST_APPLY,$/;"	e	enum:of_overlay_notify_action
OF_OVERLAY_POST_REMOVE	t/tree/include/linux/of.h	/^	OF_OVERLAY_POST_REMOVE,$/;"	e	enum:of_overlay_notify_action
OF_OVERLAY_PRE_APPLY	t/tree/include/linux/of.h	/^	OF_OVERLAY_PRE_APPLY = 0,$/;"	e	enum:of_overlay_notify_action
OF_OVERLAY_PRE_REMOVE	t/tree/include/linux/of.h	/^	OF_OVERLAY_PRE_REMOVE,$/;"	e	enum:of_overlay_notify_action
OF_POPULATED	t/tree/include/linux/of.h	/^#define OF_POPULATED	/;"	d
OF_POPULATED_BUS	t/tree/include/linux/of.h	/^#define OF_POPULATED_BUS	/;"	d
OF_RECONFIG_ADD_PROPERTY	t/tree/include/linux/of.h	/^#define OF_RECONFIG_ADD_PROPERTY	/;"	d
OF_RECONFIG_ATTACH_NODE	t/tree/include/linux/of.h	/^#define OF_RECONFIG_ATTACH_NODE	/;"	d
OF_RECONFIG_CHANGE_ADD	t/tree/include/linux/of.h	/^	OF_RECONFIG_CHANGE_ADD,$/;"	e	enum:of_reconfig_change
OF_RECONFIG_CHANGE_REMOVE	t/tree/include/linux/of.h	/^	OF_RECONFIG_CHANGE_REMOVE,$/;"	e	enum:of_reconfig_change
OF_RECONFIG_DETACH_NODE	t/tree/include/linux/of.h	/^#define OF_RECONFIG_DETACH_NODE	/;"	d
OF_RECONFIG_NO_CHANGE	t/tree/include/linux/of.h	/^	OF_RECONFIG_NO_CHANGE = 0,$/;"	e	enum:of_reconfig_change
OF_RECONFIG_REMOVE_PROPERTY	t/tree/include/linux/of.h	/^#define OF_RECONFIG_REMOVE_PROPERTY	/;"	d
OF_RECONFIG_UPDATE_PROPERTY	t/tree/include/linux/of.h	/^#define OF_RECONFIG_UPDATE_PROPERTY	/;"	d
ORC_REG_BP	t/tree/arch/x86/include/asm/orc_types.h	/^#define ORC_REG_BP	/;"	d
ORC_REG_BP_INDIRECT	t/tree/arch/x86/include/asm/orc_types.h	/^#define ORC_REG_BP_INDIRECT	/;"	d
ORC_REG_DI	t/tree/arch/x86/include/asm/orc_types.h	/^#define ORC_REG_DI	/;"	d
ORC_REG_DX	t/tree/arch/x86/include/asm/orc_types.h	/^#define ORC_REG_DX	/;"	d
ORC_REG_MAX	t/tree/arch/x86/include/asm/orc_types.h	/^#define ORC_REG_MAX	/;"	d
ORC_REG_PREV_SP	t/tree/arch/x86/include/asm/orc_types.h	/^#define ORC_REG_PREV_SP	/;"	d
ORC_REG_R10	t/tree/arch/x86/include/asm/orc_types.h	/^#define ORC_REG_R10	/;"	d
ORC_REG_R13	t/tree/arch/x86/include/asm/orc_types.h	/^#define ORC_REG_R13	/;"	d
ORC_REG_SP	t/tree/arch/x86/include/asm/orc_types.h	/^#define ORC_REG_SP	/;"	d
ORC_REG_SP_INDIRECT	t/tree/arch/x86/include/asm/orc_types.h	/^#define ORC_REG_SP_INDIRECT	/;"	d
ORC_REG_UNDEFINED	t/tree/arch/x86/include/asm/orc_types.h	/^#define ORC_REG_UNDEFINED	/;"	d
ORC_TYPE_CALL	t/tree/arch/x86/include/asm/orc_types.h	/^#define ORC_TYPE_CALL	/;"	d
ORC_TYPE_REGS	t/tree/arch/x86/include/asm/orc_types.h	/^#define ORC_TYPE_REGS	/;"	d
ORC_TYPE_REGS_IRET	t/tree/arch/x86/include/asm/orc_types.h	/^#define ORC_TYPE_REGS_IRET	/;"	d
OSC_CAPABILITIES_MASK_ERROR	t/tree/include/linux/acpi.h	/^#define OSC_CAPABILITIES_MASK_ERROR	/;"	d
OSC_CONTROL_DWORD	t/tree/include/linux/acpi.h	/^#define OSC_CONTROL_DWORD	/;"	d
OSC_INVALID_REVISION_ERROR	t/tree/include/linux/acpi.h	/^#define OSC_INVALID_REVISION_ERROR	/;"	d
OSC_INVALID_UUID_ERROR	t/tree/include/linux/acpi.h	/^#define OSC_INVALID_UUID_ERROR	/;"	d
OSC_PCI_ASPM_SUPPORT	t/tree/include/linux/acpi.h	/^#define OSC_PCI_ASPM_SUPPORT	/;"	d
OSC_PCI_CLOCK_PM_SUPPORT	t/tree/include/linux/acpi.h	/^#define OSC_PCI_CLOCK_PM_SUPPORT	/;"	d
OSC_PCI_CONTROL_MASKS	t/tree/include/linux/acpi.h	/^#define OSC_PCI_CONTROL_MASKS	/;"	d
OSC_PCI_EXPRESS_AER_CONTROL	t/tree/include/linux/acpi.h	/^#define OSC_PCI_EXPRESS_AER_CONTROL	/;"	d
OSC_PCI_EXPRESS_CAPABILITY_CONTROL	t/tree/include/linux/acpi.h	/^#define OSC_PCI_EXPRESS_CAPABILITY_CONTROL	/;"	d
OSC_PCI_EXPRESS_LTR_CONTROL	t/tree/include/linux/acpi.h	/^#define OSC_PCI_EXPRESS_LTR_CONTROL	/;"	d
OSC_PCI_EXPRESS_NATIVE_HP_CONTROL	t/tree/include/linux/acpi.h	/^#define OSC_PCI_EXPRESS_NATIVE_HP_CONTROL	/;"	d
OSC_PCI_EXPRESS_PME_CONTROL	t/tree/include/linux/acpi.h	/^#define OSC_PCI_EXPRESS_PME_CONTROL	/;"	d
OSC_PCI_EXT_CONFIG_SUPPORT	t/tree/include/linux/acpi.h	/^#define OSC_PCI_EXT_CONFIG_SUPPORT	/;"	d
OSC_PCI_HPX_TYPE_3_SUPPORT	t/tree/include/linux/acpi.h	/^#define OSC_PCI_HPX_TYPE_3_SUPPORT	/;"	d
OSC_PCI_MSI_SUPPORT	t/tree/include/linux/acpi.h	/^#define OSC_PCI_MSI_SUPPORT	/;"	d
OSC_PCI_SEGMENT_GROUPS_SUPPORT	t/tree/include/linux/acpi.h	/^#define OSC_PCI_SEGMENT_GROUPS_SUPPORT	/;"	d
OSC_PCI_SHPC_NATIVE_HP_CONTROL	t/tree/include/linux/acpi.h	/^#define OSC_PCI_SHPC_NATIVE_HP_CONTROL	/;"	d
OSC_PCI_SUPPORT_MASKS	t/tree/include/linux/acpi.h	/^#define OSC_PCI_SUPPORT_MASKS	/;"	d
OSC_QUERY_DWORD	t/tree/include/linux/acpi.h	/^#define OSC_QUERY_DWORD	/;"	d
OSC_QUERY_ENABLE	t/tree/include/linux/acpi.h	/^#define OSC_QUERY_ENABLE	/;"	d
OSC_REQUEST_ERROR	t/tree/include/linux/acpi.h	/^#define OSC_REQUEST_ERROR	/;"	d
OSC_SB_APEI_SUPPORT	t/tree/include/linux/acpi.h	/^#define OSC_SB_APEI_SUPPORT	/;"	d
OSC_SB_CPCV2_SUPPORT	t/tree/include/linux/acpi.h	/^#define OSC_SB_CPCV2_SUPPORT	/;"	d
OSC_SB_CPC_DIVERSE_HIGH_SUPPORT	t/tree/include/linux/acpi.h	/^#define OSC_SB_CPC_DIVERSE_HIGH_SUPPORT	/;"	d
OSC_SB_CPC_SUPPORT	t/tree/include/linux/acpi.h	/^#define OSC_SB_CPC_SUPPORT	/;"	d
OSC_SB_HOTPLUG_OST_SUPPORT	t/tree/include/linux/acpi.h	/^#define OSC_SB_HOTPLUG_OST_SUPPORT	/;"	d
OSC_SB_OSLPI_SUPPORT	t/tree/include/linux/acpi.h	/^#define OSC_SB_OSLPI_SUPPORT	/;"	d
OSC_SB_PAD_SUPPORT	t/tree/include/linux/acpi.h	/^#define OSC_SB_PAD_SUPPORT	/;"	d
OSC_SB_PCLPI_SUPPORT	t/tree/include/linux/acpi.h	/^#define OSC_SB_PCLPI_SUPPORT	/;"	d
OSC_SB_PPC_OST_SUPPORT	t/tree/include/linux/acpi.h	/^#define OSC_SB_PPC_OST_SUPPORT	/;"	d
OSC_SB_PR3_SUPPORT	t/tree/include/linux/acpi.h	/^#define OSC_SB_PR3_SUPPORT	/;"	d
OSC_SUPPORT_DWORD	t/tree/include/linux/acpi.h	/^#define OSC_SUPPORT_DWORD	/;"	d
PCI_IOBASE	t/tree/include/asm-generic/io.h	/^#define PCI_IOBASE /;"	d
PHYS_CPUID_INVALID	t/tree/include/linux/acpi.h	/^#define PHYS_CPUID_INVALID /;"	d
PIO_INDIRECT_SIZE	t/tree/include/linux/logic_pio.h	/^#define PIO_INDIRECT_SIZE /;"	d
PLIST_HEAD	t/tree/include/linux/plist.h	/^#define PLIST_HEAD(/;"	d
PLIST_HEAD_INIT	t/tree/include/linux/plist.h	/^#define PLIST_HEAD_INIT(/;"	d
PLIST_NODE_INIT	t/tree/include/linux/plist.h	/^#define PLIST_NODE_INIT(/;"	d
PMSG_AUTO_RESUME	t/tree/include/linux/pm.h	/^#define PMSG_AUTO_RESUME	/;"	d
PMSG_AUTO_SUSPEND	t/tree/include/linux/pm.h	/^#define PMSG_AUTO_SUSPEND	/;"	d
PMSG_FREEZE	t/tree/include/linux/pm.h	/^#define PMSG_FREEZE	/;"	d
PMSG_HIBERNATE	t/tree/include/linux/pm.h	/^#define PMSG_HIBERNATE	/;"	d
PMSG_INVALID	t/tree/include/linux/pm.h	/^#define PMSG_INVALID	/;"	d
PMSG_IS_AUTO	t/tree/include/linux/pm.h	/^#define PMSG_IS_AUTO(/;"	d
PMSG_ON	t/tree/include/linux/pm.h	/^#define PMSG_ON	/;"	d
PMSG_QUIESCE	t/tree/include/linux/pm.h	/^#define PMSG_QUIESCE	/;"	d
PMSG_RECOVER	t/tree/include/linux/pm.h	/^#define PMSG_RECOVER	/;"	d
PMSG_REMOTE_RESUME	t/tree/include/linux/pm.h	/^#define PMSG_REMOTE_RESUME	/;"	d
PMSG_RESTORE	t/tree/include/linux/pm.h	/^#define PMSG_RESTORE	/;"	d
PMSG_RESUME	t/tree/include/linux/pm.h	/^#define PMSG_RESUME	/;"	d
PMSG_SUSPEND	t/tree/include/linux/pm.h	/^#define PMSG_SUSPEND	/;"	d
PMSG_THAW	t/tree/include/linux/pm.h	/^#define PMSG_THAW	/;"	d
PMSG_USER_RESUME	t/tree/include/linux/pm.h	/^#define PMSG_USER_RESUME	/;"	d
PMSG_USER_SUSPEND	t/tree/include/linux/pm.h	/^#define PMSG_USER_SUSPEND	/;"	d
PM_EVENT_AUTO	t/tree/include/linux/pm.h	/^#define PM_EVENT_AUTO	/;"	d
PM_EVENT_AUTO_RESUME	t/tree/include/linux/pm.h	/^#define PM_EVENT_AUTO_RESUME	/;"	d
PM_EVENT_AUTO_SUSPEND	t/tree/include/linux/pm.h	/^#define PM_EVENT_AUTO_SUSPEND	/;"	d
PM_EVENT_FREEZE	t/tree/include/linux/pm.h	/^#define PM_EVENT_FREEZE	/;"	d
PM_EVENT_HIBERNATE	t/tree/include/linux/pm.h	/^#define PM_EVENT_HIBERNATE	/;"	d
PM_EVENT_INVALID	t/tree/include/linux/pm.h	/^#define PM_EVENT_INVALID	/;"	d
PM_EVENT_ON	t/tree/include/linux/pm.h	/^#define PM_EVENT_ON	/;"	d
PM_EVENT_PRETHAW	t/tree/include/linux/pm.h	/^#define PM_EVENT_PRETHAW /;"	d
PM_EVENT_QUIESCE	t/tree/include/linux/pm.h	/^#define PM_EVENT_QUIESCE	/;"	d
PM_EVENT_RECOVER	t/tree/include/linux/pm.h	/^#define PM_EVENT_RECOVER	/;"	d
PM_EVENT_REMOTE	t/tree/include/linux/pm.h	/^#define PM_EVENT_REMOTE	/;"	d
PM_EVENT_REMOTE_RESUME	t/tree/include/linux/pm.h	/^#define PM_EVENT_REMOTE_RESUME	/;"	d
PM_EVENT_RESTORE	t/tree/include/linux/pm.h	/^#define PM_EVENT_RESTORE	/;"	d
PM_EVENT_RESUME	t/tree/include/linux/pm.h	/^#define PM_EVENT_RESUME	/;"	d
PM_EVENT_SLEEP	t/tree/include/linux/pm.h	/^#define PM_EVENT_SLEEP	/;"	d
PM_EVENT_SUSPEND	t/tree/include/linux/pm.h	/^#define PM_EVENT_SUSPEND	/;"	d
PM_EVENT_THAW	t/tree/include/linux/pm.h	/^#define PM_EVENT_THAW	/;"	d
PM_EVENT_USER	t/tree/include/linux/pm.h	/^#define PM_EVENT_USER	/;"	d
PM_EVENT_USER_RESUME	t/tree/include/linux/pm.h	/^#define PM_EVENT_USER_RESUME	/;"	d
PM_EVENT_USER_SUSPEND	t/tree/include/linux/pm.h	/^#define PM_EVENT_USER_SUSPEND	/;"	d
POLY	t/tree/drivers/i2c/i2c-core-smbus.c	/^#define POLY /;"	d	file:
PXM_INVAL	t/tree/include/linux/acpi.h	/^#define PXM_INVAL	/;"	d
RADIX_TREE	t/tree/include/linux/radix-tree.h	/^#define RADIX_TREE(/;"	d
RADIX_TREE_ENTRY_MASK	t/tree/include/linux/radix-tree.h	/^#define RADIX_TREE_ENTRY_MASK	/;"	d
RADIX_TREE_INDEX_BITS	t/tree/include/linux/radix-tree.h	/^#define RADIX_TREE_INDEX_BITS /;"	d
RADIX_TREE_INIT	t/tree/include/linux/radix-tree.h	/^#define RADIX_TREE_INIT(/;"	d
RADIX_TREE_INTERNAL_NODE	t/tree/include/linux/radix-tree.h	/^#define RADIX_TREE_INTERNAL_NODE	/;"	d
RADIX_TREE_ITER_CONTIG	t/tree/include/linux/radix-tree.h	/^	RADIX_TREE_ITER_CONTIG   = 0x20,	\/* stop at first hole *\/$/;"	e	enum:__anon048c02c40103
RADIX_TREE_ITER_TAGGED	t/tree/include/linux/radix-tree.h	/^	RADIX_TREE_ITER_TAGGED   = 0x10,	\/* lookup tagged slots *\/$/;"	e	enum:__anon048c02c40103
RADIX_TREE_ITER_TAG_MASK	t/tree/include/linux/radix-tree.h	/^	RADIX_TREE_ITER_TAG_MASK = 0x0f,	\/* tag index in lower nybble *\/$/;"	e	enum:__anon048c02c40103
RADIX_TREE_MAP_MASK	t/tree/include/linux/radix-tree.h	/^#define RADIX_TREE_MAP_MASK	/;"	d
RADIX_TREE_MAP_SHIFT	t/tree/include/linux/radix-tree.h	/^#define RADIX_TREE_MAP_SHIFT	/;"	d
RADIX_TREE_MAP_SIZE	t/tree/include/linux/radix-tree.h	/^#define RADIX_TREE_MAP_SIZE	/;"	d
RADIX_TREE_MAX_PATH	t/tree/include/linux/radix-tree.h	/^#define RADIX_TREE_MAX_PATH /;"	d
RADIX_TREE_MAX_TAGS	t/tree/include/linux/radix-tree.h	/^#define RADIX_TREE_MAX_TAGS	/;"	d
RADIX_TREE_TAG_LONGS	t/tree/include/linux/radix-tree.h	/^#define RADIX_TREE_TAG_LONGS	/;"	d
RB_CLEAR_NODE	t/tree/include/linux/rbtree.h	/^#define RB_CLEAR_NODE(/;"	d
RB_EMPTY_NODE	t/tree/include/linux/rbtree.h	/^#define RB_EMPTY_NODE(/;"	d
RB_EMPTY_ROOT	t/tree/include/linux/rbtree.h	/^#define RB_EMPTY_ROOT(/;"	d
RB_ROOT	t/tree/include/linux/rbtree.h	/^#define RB_ROOT	/;"	d
RB_ROOT_CACHED	t/tree/include/linux/rbtree.h	/^#define RB_ROOT_CACHED /;"	d
RCU_CBLIST_INITIALIZER	t/tree/include/linux/rcu_segcblist.h	/^#define RCU_CBLIST_INITIALIZER(/;"	d
RCU_CBLIST_NSEGS	t/tree/include/linux/rcu_segcblist.h	/^#define RCU_CBLIST_NSEGS	/;"	d
RCU_DONE_TAIL	t/tree/include/linux/rcu_segcblist.h	/^#define RCU_DONE_TAIL	/;"	d
RCU_FANOUT	t/tree/include/linux/rcu_node_tree.h	/^# define RCU_FANOUT /;"	d
RCU_FANOUT	t/tree/include/linux/rcu_node_tree.h	/^#define RCU_FANOUT CONFIG_RCU_FANOUT$/;"	d
RCU_FANOUT_1	t/tree/include/linux/rcu_node_tree.h	/^#define RCU_FANOUT_1	/;"	d
RCU_FANOUT_2	t/tree/include/linux/rcu_node_tree.h	/^#define RCU_FANOUT_2	/;"	d
RCU_FANOUT_3	t/tree/include/linux/rcu_node_tree.h	/^#define RCU_FANOUT_3	/;"	d
RCU_FANOUT_4	t/tree/include/linux/rcu_node_tree.h	/^#define RCU_FANOUT_4	/;"	d
RCU_FANOUT_LEAF	t/tree/include/linux/rcu_node_tree.h	/^#define RCU_FANOUT_LEAF /;"	d
RCU_FANOUT_LEAF	t/tree/include/linux/rcu_node_tree.h	/^#define RCU_FANOUT_LEAF CONFIG_RCU_FANOUT_LEAF$/;"	d
RCU_FQS_NAME_INIT	t/tree/include/linux/rcu_node_tree.h	/^#  define RCU_FQS_NAME_INIT /;"	d
RCU_INITIALIZER	t/tree/include/linux/rcupdate.h	/^#define RCU_INITIALIZER(/;"	d
RCU_INIT_POINTER	t/tree/include/linux/rcupdate.h	/^#define RCU_INIT_POINTER(/;"	d
RCU_LOCKDEP_WARN	t/tree/include/linux/rcupdate.h	/^#define RCU_LOCKDEP_WARN(/;"	d
RCU_NEXT_READY_TAIL	t/tree/include/linux/rcu_segcblist.h	/^#define RCU_NEXT_READY_TAIL	/;"	d
RCU_NEXT_TAIL	t/tree/include/linux/rcu_segcblist.h	/^#define RCU_NEXT_TAIL	/;"	d
RCU_NODE_NAME_INIT	t/tree/include/linux/rcu_node_tree.h	/^#  define RCU_NODE_NAME_INIT /;"	d
RCU_NONIDLE	t/tree/include/linux/rcupdate.h	/^#define RCU_NONIDLE(/;"	d
RCU_NUM_LVLS	t/tree/include/linux/rcu_node_tree.h	/^#  define RCU_NUM_LVLS	/;"	d
RCU_POINTER_INITIALIZER	t/tree/include/linux/rcupdate.h	/^#define RCU_POINTER_INITIALIZER(/;"	d
RCU_SEGCBLIST_INITIALIZER	t/tree/include/linux/rcu_segcblist.h	/^#define RCU_SEGCBLIST_INITIALIZER(/;"	d
RCU_WAIT_TAIL	t/tree/include/linux/rcu_segcblist.h	/^#define RCU_WAIT_TAIL	/;"	d
RECOVERY_CLK_CNT	t/tree/drivers/i2c/i2c-core-base.c	/^#define RECOVERY_CLK_CNT	/;"	d	file:
RECOVERY_NDELAY	t/tree/drivers/i2c/i2c-core-base.c	/^#define RECOVERY_NDELAY	/;"	d	file:
ROOT_IS_IDR	t/tree/include/linux/radix-tree.h	/^#define ROOT_IS_IDR	/;"	d
ROOT_TAG_SHIFT	t/tree/include/linux/radix-tree.h	/^#define ROOT_TAG_SHIFT	/;"	d
RPM_ACTIVE	t/tree/include/linux/pm.h	/^	RPM_ACTIVE = 0,$/;"	e	enum:rpm_status
RPM_REQ_AUTOSUSPEND	t/tree/include/linux/pm.h	/^	RPM_REQ_AUTOSUSPEND,$/;"	e	enum:rpm_request
RPM_REQ_IDLE	t/tree/include/linux/pm.h	/^	RPM_REQ_IDLE,$/;"	e	enum:rpm_request
RPM_REQ_NONE	t/tree/include/linux/pm.h	/^	RPM_REQ_NONE = 0,$/;"	e	enum:rpm_request
RPM_REQ_RESUME	t/tree/include/linux/pm.h	/^	RPM_REQ_RESUME,$/;"	e	enum:rpm_request
RPM_REQ_SUSPEND	t/tree/include/linux/pm.h	/^	RPM_REQ_SUSPEND,$/;"	e	enum:rpm_request
RPM_RESUMING	t/tree/include/linux/pm.h	/^	RPM_RESUMING,$/;"	e	enum:rpm_status
RPM_SUSPENDED	t/tree/include/linux/pm.h	/^	RPM_SUSPENDED,$/;"	e	enum:rpm_status
RPM_SUSPENDING	t/tree/include/linux/pm.h	/^	RPM_SUSPENDING,$/;"	e	enum:rpm_status
RP_CHECK_CALL	t/tree/include/linux/uprobes.h	/^	RP_CHECK_CALL,$/;"	e	enum:rp_check
RP_CHECK_CHAIN_CALL	t/tree/include/linux/uprobes.h	/^	RP_CHECK_CHAIN_CALL,$/;"	e	enum:rp_check
RP_CHECK_RET	t/tree/include/linux/uprobes.h	/^	RP_CHECK_RET,$/;"	e	enum:rp_check
RSEQ_CPU_ID_REGISTRATION_FAILED	t/tree/include/uapi/linux/rseq.h	/^	RSEQ_CPU_ID_REGISTRATION_FAILED		= -2,$/;"	e	enum:rseq_cpu_id_state
RSEQ_CPU_ID_UNINITIALIZED	t/tree/include/uapi/linux/rseq.h	/^	RSEQ_CPU_ID_UNINITIALIZED		= -1,$/;"	e	enum:rseq_cpu_id_state
RSEQ_CS_FLAG_NO_RESTART_ON_MIGRATE	t/tree/include/uapi/linux/rseq.h	/^	RSEQ_CS_FLAG_NO_RESTART_ON_MIGRATE	=$/;"	e	enum:rseq_cs_flags
RSEQ_CS_FLAG_NO_RESTART_ON_MIGRATE_BIT	t/tree/include/uapi/linux/rseq.h	/^	RSEQ_CS_FLAG_NO_RESTART_ON_MIGRATE_BIT	= 2,$/;"	e	enum:rseq_cs_flags_bit
RSEQ_CS_FLAG_NO_RESTART_ON_PREEMPT	t/tree/include/uapi/linux/rseq.h	/^	RSEQ_CS_FLAG_NO_RESTART_ON_PREEMPT	=$/;"	e	enum:rseq_cs_flags
RSEQ_CS_FLAG_NO_RESTART_ON_PREEMPT_BIT	t/tree/include/uapi/linux/rseq.h	/^	RSEQ_CS_FLAG_NO_RESTART_ON_PREEMPT_BIT	= 0,$/;"	e	enum:rseq_cs_flags_bit
RSEQ_CS_FLAG_NO_RESTART_ON_SIGNAL	t/tree/include/uapi/linux/rseq.h	/^	RSEQ_CS_FLAG_NO_RESTART_ON_SIGNAL	=$/;"	e	enum:rseq_cs_flags
RSEQ_CS_FLAG_NO_RESTART_ON_SIGNAL_BIT	t/tree/include/uapi/linux/rseq.h	/^	RSEQ_CS_FLAG_NO_RESTART_ON_SIGNAL_BIT	= 1,$/;"	e	enum:rseq_cs_flags_bit
RSEQ_FLAG_UNREGISTER	t/tree/include/uapi/linux/rseq.h	/^	RSEQ_FLAG_UNREGISTER = (1 << 0),$/;"	e	enum:rseq_flags
SET_LATE_SYSTEM_SLEEP_PM_OPS	t/tree/include/linux/pm.h	/^#define SET_LATE_SYSTEM_SLEEP_PM_OPS(/;"	d
SET_NOIRQ_SYSTEM_SLEEP_PM_OPS	t/tree/include/linux/pm.h	/^#define SET_NOIRQ_SYSTEM_SLEEP_PM_OPS(/;"	d
SET_RUNTIME_PM_OPS	t/tree/include/linux/pm.h	/^#define SET_RUNTIME_PM_OPS(/;"	d
SET_SYSTEM_SLEEP_PM_OPS	t/tree/include/linux/pm.h	/^#define SET_SYSTEM_SLEEP_PM_OPS(/;"	d
SIMPLE_DEV_PM_OPS	t/tree/include/linux/pm.h	/^#define SIMPLE_DEV_PM_OPS(/;"	d
SRCU_STATE_IDLE	t/tree/include/linux/srcutree.h	/^#define SRCU_STATE_IDLE	/;"	d
SRCU_STATE_SCAN1	t/tree/include/linux/srcutree.h	/^#define SRCU_STATE_SCAN1	/;"	d
SRCU_STATE_SCAN2	t/tree/include/linux/srcutree.h	/^#define SRCU_STATE_SCAN2	/;"	d
STUB_FUNC_ALL	t/tree/drivers/i2c/i2c-stub.c	/^#define STUB_FUNC_ALL /;"	d	file:
STUB_FUNC_DEFAULT	t/tree/drivers/i2c/i2c-stub.c	/^#define STUB_FUNC_DEFAULT /;"	d	file:
SYSCALL_DEFINE3	t/tree/syscall_define.c	/^SYSCALL_DEFINE3(init_module)$/;"	f
TRACE_SYSTEM	t/tree/include/trace/events/i2c.h	/^#define TRACE_SYSTEM /;"	d
ULONG_CMP_GE	t/tree/include/linux/rcupdate.h	/^#define ULONG_CMP_GE(/;"	d
ULONG_CMP_LT	t/tree/include/linux/rcupdate.h	/^#define ULONG_CMP_LT(/;"	d
UNIVERSAL_DEV_PM_OPS	t/tree/include/linux/pm.h	/^#define UNIVERSAL_DEV_PM_OPS(/;"	d
UNWIND_HINT_TYPE_RESTORE	t/tree/arch/x86/include/asm/orc_types.h	/^#define UNWIND_HINT_TYPE_RESTORE	/;"	d
UNWIND_HINT_TYPE_SAVE	t/tree/arch/x86/include/asm/orc_types.h	/^#define UNWIND_HINT_TYPE_SAVE	/;"	d
UPROBE_FILTER_MMAP	t/tree/include/linux/uprobes.h	/^	UPROBE_FILTER_MMAP,$/;"	e	enum:uprobe_filter_ctx
UPROBE_FILTER_REGISTER	t/tree/include/linux/uprobes.h	/^	UPROBE_FILTER_REGISTER,$/;"	e	enum:uprobe_filter_ctx
UPROBE_FILTER_UNREGISTER	t/tree/include/linux/uprobes.h	/^	UPROBE_FILTER_UNREGISTER,$/;"	e	enum:uprobe_filter_ctx
UPROBE_HANDLER_MASK	t/tree/include/linux/uprobes.h	/^#define UPROBE_HANDLER_MASK	/;"	d
UPROBE_HANDLER_REMOVE	t/tree/include/linux/uprobes.h	/^#define UPROBE_HANDLER_REMOVE	/;"	d
UPROBE_SWBP_INSN	t/tree/arch/x86/include/asm/uprobes.h	/^#define UPROBE_SWBP_INSN	/;"	d
UPROBE_SWBP_INSN_SIZE	t/tree/arch/x86/include/asm/uprobes.h	/^#define UPROBE_SWBP_INSN_SIZE	/;"	d
UPROBE_XOL_SLOT_BYTES	t/tree/arch/x86/include/asm/uprobes.h	/^#define UPROBE_XOL_SLOT_BYTES	/;"	d
UTASK_RUNNING	t/tree/include/linux/uprobes.h	/^	UTASK_RUNNING,$/;"	e	enum:uprobe_task_state
UTASK_SSTEP	t/tree/include/linux/uprobes.h	/^	UTASK_SSTEP,$/;"	e	enum:uprobe_task_state
UTASK_SSTEP_ACK	t/tree/include/linux/uprobes.h	/^	UTASK_SSTEP_ACK,$/;"	e	enum:uprobe_task_state
UTASK_SSTEP_TRAPPED	t/tree/include/linux/uprobes.h	/^	UTASK_SSTEP_TRAPPED,$/;"	e	enum:uprobe_task_state
XARRAY_INIT	t/tree/include/linux/xarray.h	/^#define XARRAY_INIT(/;"	d
XAS_BOUNDS	t/tree/include/linux/xarray.h	/^#define XAS_BOUNDS	/;"	d
XAS_RESTART	t/tree/include/linux/xarray.h	/^#define XAS_RESTART	/;"	d
XA_BUG_ON	t/tree/include/linux/xarray.h	/^#define XA_BUG_ON(/;"	d
XA_CHECK_SCHED	t/tree/include/linux/xarray.h	/^	XA_CHECK_SCHED = 4096,$/;"	e	enum:__anonde33faa60303
XA_CHUNK_MASK	t/tree/include/linux/xarray.h	/^#define XA_CHUNK_MASK	/;"	d
XA_CHUNK_SHIFT	t/tree/include/linux/xarray.h	/^#define XA_CHUNK_SHIFT	/;"	d
XA_CHUNK_SIZE	t/tree/include/linux/xarray.h	/^#define XA_CHUNK_SIZE	/;"	d
XA_ERROR	t/tree/include/linux/xarray.h	/^#define XA_ERROR(/;"	d
XA_FLAGS_ACCOUNT	t/tree/include/linux/xarray.h	/^#define XA_FLAGS_ACCOUNT	/;"	d
XA_FLAGS_ALLOC	t/tree/include/linux/xarray.h	/^#define XA_FLAGS_ALLOC	/;"	d
XA_FLAGS_ALLOC1	t/tree/include/linux/xarray.h	/^#define XA_FLAGS_ALLOC1	/;"	d
XA_FLAGS_ALLOC_WRAPPED	t/tree/include/linux/xarray.h	/^#define XA_FLAGS_ALLOC_WRAPPED	/;"	d
XA_FLAGS_LOCK_BH	t/tree/include/linux/xarray.h	/^#define XA_FLAGS_LOCK_BH	/;"	d
XA_FLAGS_LOCK_IRQ	t/tree/include/linux/xarray.h	/^#define XA_FLAGS_LOCK_IRQ	/;"	d
XA_FLAGS_MARK	t/tree/include/linux/xarray.h	/^#define XA_FLAGS_MARK(/;"	d
XA_FLAGS_TRACK_FREE	t/tree/include/linux/xarray.h	/^#define XA_FLAGS_TRACK_FREE	/;"	d
XA_FLAGS_ZERO_BUSY	t/tree/include/linux/xarray.h	/^#define XA_FLAGS_ZERO_BUSY	/;"	d
XA_FREE_MARK	t/tree/include/linux/xarray.h	/^#define XA_FREE_MARK	/;"	d
XA_LIMIT	t/tree/include/linux/xarray.h	/^#define XA_LIMIT(/;"	d
XA_LOCK_BH	t/tree/include/linux/xarray.h	/^	XA_LOCK_BH = 2,$/;"	e	enum:xa_lock_type
XA_LOCK_IRQ	t/tree/include/linux/xarray.h	/^	XA_LOCK_IRQ = 1,$/;"	e	enum:xa_lock_type
XA_MARK_0	t/tree/include/linux/xarray.h	/^#define XA_MARK_0	/;"	d
XA_MARK_1	t/tree/include/linux/xarray.h	/^#define XA_MARK_1	/;"	d
XA_MARK_2	t/tree/include/linux/xarray.h	/^#define XA_MARK_2	/;"	d
XA_MARK_LONGS	t/tree/include/linux/xarray.h	/^#define XA_MARK_LONGS	/;"	d
XA_MARK_MAX	t/tree/include/linux/xarray.h	/^#define XA_MARK_MAX	/;"	d
XA_MAX_MARKS	t/tree/include/linux/xarray.h	/^#define XA_MAX_MARKS	/;"	d
XA_NODE_BUG_ON	t/tree/include/linux/xarray.h	/^#define XA_NODE_BUG_ON(/;"	d
XA_PRESENT	t/tree/include/linux/xarray.h	/^#define XA_PRESENT	/;"	d
XA_RETRY_ENTRY	t/tree/include/linux/xarray.h	/^#define XA_RETRY_ENTRY	/;"	d
XA_STATE	t/tree/include/linux/xarray.h	/^#define XA_STATE(/;"	d
XA_STATE_ORDER	t/tree/include/linux/xarray.h	/^#define XA_STATE_ORDER(/;"	d
XA_ZERO_ENTRY	t/tree/include/linux/xarray.h	/^#define XA_ZERO_ENTRY	/;"	d
_ASM_UPROBES_H	t/tree/arch/x86/include/asm/uprobes.h	/^#define _ASM_UPROBES_H$/;"	d
_ASM_X86_ACPI_H	t/tree/arch/x86/include/asm/acpi.h	/^#define _ASM_X86_ACPI_H$/;"	d
_ASM_X86_IST_H	t/tree/arch/x86/include/asm/ist.h	/^#define _ASM_X86_IST_H$/;"	d
_LINUX	t/tree/include/linux/acpi.h	/^#define _LINUX$/;"	d
_LINUX_ACPI_H	t/tree/include/linux/acpi.h	/^#define _LINUX_ACPI_H$/;"	d
_LINUX_APM_H	t/tree/include/linux/apm_bios.h	/^#define _LINUX_APM_H$/;"	d
_LINUX_ASSOC_ARRAY_H	t/tree/include/linux/assoc_array.h	/^#define _LINUX_ASSOC_ARRAY_H$/;"	d
_LINUX_CRED_H	t/tree/include/linux/cred.h	/^#define _LINUX_CRED_H$/;"	d
_LINUX_I2C_H	t/tree/include/linux/i2c.h	/^#define _LINUX_I2C_H$/;"	d
_LINUX_I2C_SMBUS_H	t/tree/include/linux/i2c-smbus.h	/^#define _LINUX_I2C_SMBUS_H$/;"	d
_LINUX_KEY_H	t/tree/include/linux/key.h	/^#define _LINUX_KEY_H$/;"	d
_LINUX_LOG2_H	t/tree/include/linux/log2.h	/^#define _LINUX_LOG2_H$/;"	d
_LINUX_MEMBLOCK_H	t/tree/include/linux/memblock.h	/^#define _LINUX_MEMBLOCK_H$/;"	d
_LINUX_OF_H	t/tree/include/linux/of.h	/^#define _LINUX_OF_H$/;"	d
_LINUX_OF_PLATFORM_H	t/tree/include/linux/of_platform.h	/^#define _LINUX_OF_PLATFORM_H$/;"	d
_LINUX_PLIST_H_	t/tree/include/linux/plist.h	/^#define _LINUX_PLIST_H_$/;"	d
_LINUX_PM_H	t/tree/include/linux/pm.h	/^#define _LINUX_PM_H$/;"	d
_LINUX_PM_WAKEUP_H	t/tree/include/linux/pm_wakeup.h	/^#define _LINUX_PM_WAKEUP_H$/;"	d
_LINUX_RADIX_TREE_H	t/tree/include/linux/radix-tree.h	/^#define _LINUX_RADIX_TREE_H$/;"	d
_LINUX_RBTREE_H	t/tree/include/linux/rbtree.h	/^#define	_LINUX_RBTREE_H$/;"	d
_LINUX_RCU_SYNC_H_	t/tree/include/linux/rcu_sync.h	/^#define _LINUX_RCU_SYNC_H_$/;"	d
_LINUX_SRCU_H	t/tree/include/linux/srcu.h	/^#define _LINUX_SRCU_H$/;"	d
_LINUX_SRCU_TREE_H	t/tree/include/linux/srcutree.h	/^#define _LINUX_SRCU_TREE_H$/;"	d
_LINUX_STACKDEPOT_H	t/tree/include/linux/stackdepot.h	/^#define _LINUX_STACKDEPOT_H$/;"	d
_LINUX_UPROBES_H	t/tree/include/linux/uprobes.h	/^#define _LINUX_UPROBES_H$/;"	d
_LINUX_XARRAY_H	t/tree/include/linux/xarray.h	/^#define _LINUX_XARRAY_H$/;"	d
_OF_DECLARE	t/tree/include/linux/of.h	/^#define _OF_DECLARE(/;"	d
_ORC_TYPES_H	t/tree/arch/x86/include/asm/orc_types.h	/^#define _ORC_TYPES_H$/;"	d
_QR_BIAS	t/tree/include/asm-generic/qrwlock.h	/^#define _QR_BIAS	/;"	d
_QR_SHIFT	t/tree/include/asm-generic/qrwlock.h	/^#define	_QR_SHIFT	/;"	d
_QW_LOCKED	t/tree/include/asm-generic/qrwlock.h	/^#define	_QW_LOCKED	/;"	d
_QW_WAITING	t/tree/include/asm-generic/qrwlock.h	/^#define	_QW_WAITING	/;"	d
_QW_WMASK	t/tree/include/asm-generic/qrwlock.h	/^#define	_QW_WMASK	/;"	d
_Q_LOCKED_BITS	t/tree/include/asm-generic/qspinlock_types.h	/^#define _Q_LOCKED_BITS	/;"	d
_Q_LOCKED_MASK	t/tree/include/asm-generic/qspinlock_types.h	/^#define _Q_LOCKED_MASK	/;"	d
_Q_LOCKED_OFFSET	t/tree/include/asm-generic/qspinlock_types.h	/^#define _Q_LOCKED_OFFSET	/;"	d
_Q_LOCKED_VAL	t/tree/include/asm-generic/qspinlock_types.h	/^#define _Q_LOCKED_VAL	/;"	d
_Q_PENDING_BITS	t/tree/include/asm-generic/qspinlock_types.h	/^#define _Q_PENDING_BITS	/;"	d
_Q_PENDING_MASK	t/tree/include/asm-generic/qspinlock_types.h	/^#define _Q_PENDING_MASK	/;"	d
_Q_PENDING_OFFSET	t/tree/include/asm-generic/qspinlock_types.h	/^#define _Q_PENDING_OFFSET	/;"	d
_Q_PENDING_VAL	t/tree/include/asm-generic/qspinlock_types.h	/^#define _Q_PENDING_VAL	/;"	d
_Q_SET_MASK	t/tree/include/asm-generic/qspinlock_types.h	/^#define	_Q_SET_MASK(/;"	d
_Q_TAIL_CPU_BITS	t/tree/include/asm-generic/qspinlock_types.h	/^#define _Q_TAIL_CPU_BITS	/;"	d
_Q_TAIL_CPU_MASK	t/tree/include/asm-generic/qspinlock_types.h	/^#define _Q_TAIL_CPU_MASK	/;"	d
_Q_TAIL_CPU_OFFSET	t/tree/include/asm-generic/qspinlock_types.h	/^#define _Q_TAIL_CPU_OFFSET	/;"	d
_Q_TAIL_IDX_BITS	t/tree/include/asm-generic/qspinlock_types.h	/^#define _Q_TAIL_IDX_BITS	/;"	d
_Q_TAIL_IDX_MASK	t/tree/include/asm-generic/qspinlock_types.h	/^#define _Q_TAIL_IDX_MASK	/;"	d
_Q_TAIL_IDX_OFFSET	t/tree/include/asm-generic/qspinlock_types.h	/^#define _Q_TAIL_IDX_OFFSET	/;"	d
_Q_TAIL_MASK	t/tree/include/asm-generic/qspinlock_types.h	/^#define _Q_TAIL_MASK	/;"	d
_Q_TAIL_OFFSET	t/tree/include/asm-generic/qspinlock_types.h	/^#define _Q_TAIL_OFFSET	/;"	d
_TRACE_I2C_H	t/tree/include/trace/events/i2c.h	/^#define _TRACE_I2C_H$/;"	d
_UAPI_ASM_X86_IST_H	t/tree/arch/x86/include/uapi/asm/ist.h	/^#define _UAPI_ASM_X86_IST_H$/;"	d
_UAPI_LINUX_APM_H	t/tree/include/uapi/linux/apm_bios.h	/^#define _UAPI_LINUX_APM_H$/;"	d
_UAPI_LINUX_EVENTPOLL_H	t/tree/include/uapi/linux/eventpoll.h	/^#define _UAPI_LINUX_EVENTPOLL_H$/;"	d
_UAPI_LINUX_I2C_H	t/tree/include/uapi/linux/i2c.h	/^#define _UAPI_LINUX_I2C_H$/;"	d
_UAPI_LINUX_RSEQ_H	t/tree/include/uapi/linux/rseq.h	/^#define _UAPI_LINUX_RSEQ_H$/;"	d
__ACPI_BUS_H__	t/tree/include/acpi/acpi_bus.h	/^#define __ACPI_BUS_H__$/;"	d
__ACPI_DRIVERS_H__	t/tree/include/acpi/acpi_drivers.h	/^#define __ACPI_DRIVERS_H__$/;"	d
__ARCH_SPIN_LOCK_UNLOCKED	t/tree/include/asm-generic/qspinlock_types.h	/^#define	__ARCH_SPIN_LOCK_UNLOCKED	/;"	d
__ASM_GENERIC_BARRIER_H	t/tree/include/asm-generic/barrier.h	/^#define __ASM_GENERIC_BARRIER_H$/;"	d
__ASM_GENERIC_IO_H	t/tree/include/asm-generic/io.h	/^#define __ASM_GENERIC_IO_H$/;"	d
__ASM_GENERIC_PCI_IOMAP_H	t/tree/include/asm-generic/pci_iomap.h	/^#define __ASM_GENERIC_PCI_IOMAP_H$/;"	d
__ASM_GENERIC_QRWLOCK_H	t/tree/include/asm-generic/qrwlock.h	/^#define __ASM_GENERIC_QRWLOCK_H$/;"	d
__ASM_GENERIC_QSPINLOCK_H	t/tree/include/asm-generic/qspinlock.h	/^#define __ASM_GENERIC_QSPINLOCK_H$/;"	d
__ASM_GENERIC_QSPINLOCK_TYPES_H	t/tree/include/asm-generic/qspinlock_types.h	/^#define __ASM_GENERIC_QSPINLOCK_TYPES_H$/;"	d
__DEFINE_SRCU	t/tree/include/linux/srcutree.h	/^# define __DEFINE_SRCU(/;"	d
__INCLUDE_LINUX_RCU_SEGCBLIST_H	t/tree/include/linux/rcu_segcblist.h	/^#define __INCLUDE_LINUX_RCU_SEGCBLIST_H$/;"	d
__LINUX_KMOD_H__	t/tree/include/linux/kmod.h	/^#define __LINUX_KMOD_H__$/;"	d
__LINUX_LOGIC_PIO_H	t/tree/include/linux/logic_pio.h	/^#define __LINUX_LOGIC_PIO_H$/;"	d
__LINUX_RCUPDATE_H	t/tree/include/linux/rcupdate.h	/^#define __LINUX_RCUPDATE_H$/;"	d
__LINUX_RCUTREE_H	t/tree/include/linux/rcutree.h	/^#define __LINUX_RCUTREE_H$/;"	d
__LINUX_RCU_NODE_TREE_H	t/tree/include/linux/rcu_node_tree.h	/^#define __LINUX_RCU_NODE_TREE_H$/;"	d
__RCU_SYNC_INITIALIZER	t/tree/include/linux/rcu_sync.h	/^#define __RCU_SYNC_INITIALIZER(/;"	d
__SRCU_DEP_MAP_INIT	t/tree/include/linux/srcu.h	/^#define __SRCU_DEP_MAP_INIT(/;"	d
__SRCU_STRUCT_INIT	t/tree/include/linux/srcutree.h	/^#define __SRCU_STRUCT_INIT(/;"	d
__XA_STATE	t/tree/include/linux/xarray.h	/^#define __XA_STATE(/;"	d
____cacheline_internodealigned_in_smp	t/tree/include/linux/srcutree.h	/^	spinlock_t __private lock ____cacheline_internodealigned_in_smp;$/;"	m	struct:srcu_data	typeref:typename:spinlock_t __private lock
__acpi_node_get_property_reference	t/tree/include/linux/acpi.h	/^__acpi_node_get_property_reference(const struct fwnode_handle *fwnode,$/;"	f	typeref:typename:int
__anon048c02c40103	t/tree/include/linux/radix-tree.h	/^enum {$/;"	g
__anon18223b0f010a	t/tree/include/linux/uprobes.h	/^	union {$/;"	u	struct:uprobe_task
__anon18223b0f0208	t/tree/include/linux/uprobes.h	/^		struct {$/;"	s	union:uprobe_task::__anon18223b0f010a
__anon18223b0f0308	t/tree/include/linux/uprobes.h	/^		struct {$/;"	s	union:uprobe_task::__anon18223b0f010a
__anon24fc28e8010a	t/tree/include/uapi/linux/rseq.h	/^	union {$/;"	u	struct:rseq
__anon24fc28e80208	t/tree/include/uapi/linux/rseq.h	/^		struct {$/;"	s	union:rseq::__anon24fc28e8010a
__anon323fcd42010a	t/tree/arch/x86/include/asm/uprobes.h	/^	union {$/;"	u	struct:arch_uprobe
__anon323fcd42020a	t/tree/arch/x86/include/asm/uprobes.h	/^	union {$/;"	u	struct:arch_uprobe
__anon323fcd420308	t/tree/arch/x86/include/asm/uprobes.h	/^		struct {$/;"	s	union:arch_uprobe::__anon323fcd42020a
__anon323fcd420408	t/tree/arch/x86/include/asm/uprobes.h	/^		struct {$/;"	s	union:arch_uprobe::__anon323fcd42020a
__anon323fcd420508	t/tree/arch/x86/include/asm/uprobes.h	/^		struct {$/;"	s	union:arch_uprobe::__anon323fcd42020a
__anon38d188f8010a	t/tree/include/linux/key.h	/^	union {$/;"	u	struct:keyring_index_key
__anon38d188f80208	t/tree/include/linux/key.h	/^		struct {$/;"	s	union:keyring_index_key::__anon38d188f8010a
__anon38d188f8030a	t/tree/include/linux/key.h	/^	union {$/;"	u	struct:key
__anon38d188f8040a	t/tree/include/linux/key.h	/^	union {$/;"	u	struct:key
__anon38d188f8050a	t/tree/include/linux/key.h	/^	union {$/;"	u	struct:key
__anon38d188f80608	t/tree/include/linux/key.h	/^		struct {$/;"	s	union:key::__anon38d188f8050a
__anon38d188f8070a	t/tree/include/linux/key.h	/^	union {$/;"	u	struct:key
__anon38d188f80808	t/tree/include/linux/key.h	/^		struct {$/;"	s	union:key::__anon38d188f8070a
__anon3b86e52c010a	t/tree/include/linux/acpi.h	/^	union {$/;"	u	struct:acpi_probe_entry
__anon413a888d010a	t/tree/include/linux/cred.h	/^	union {$/;"	u	struct:cred
__anona951f0040103	t/tree/include/linux/logic_pio.h	/^enum {$/;"	g
__anonbbafac820108	t/tree/include/acpi/acpi_bus.h	/^	struct {$/;"	s	struct:acpi_device_power_state
__anonbbafac820208	t/tree/include/acpi/acpi_bus.h	/^	struct {$/;"	s	struct:acpi_device_perf_state
__anond60321f2010a	t/tree/include/asm-generic/qspinlock_types.h	/^	union {$/;"	u	struct:qspinlock
__anond60321f20208	t/tree/include/asm-generic/qspinlock_types.h	/^		struct {$/;"	s	union:qspinlock::__anond60321f2010a
__anond60321f20308	t/tree/include/asm-generic/qspinlock_types.h	/^		struct {$/;"	s	union:qspinlock::__anond60321f2010a
__anond60321f20408	t/tree/include/asm-generic/qspinlock_types.h	/^		struct {$/;"	s	union:qspinlock::__anond60321f2010a
__anond60321f20508	t/tree/include/asm-generic/qspinlock_types.h	/^		struct {$/;"	s	union:qspinlock::__anond60321f2010a
__anonde33faa6010a	t/tree/include/linux/xarray.h	/^	union {$/;"	u	struct:xa_node
__anonde33faa6020a	t/tree/include/linux/xarray.h	/^	union {$/;"	u	struct:xa_node
__anonde33faa60303	t/tree/include/linux/xarray.h	/^enum {$/;"	g
__anonee402091010a	t/tree/drivers/i2c/i2c-core-acpi.c	/^	union {$/;"	u	struct:gsb_buffer	file:
__bits_per	t/tree/include/linux/log2.h	/^int __bits_per(unsigned long n)$/;"	f	typeref:typename:int
__i2c_add_numbered_adapter	t/tree/drivers/i2c/i2c-core-base.c	/^static int __i2c_add_numbered_adapter(struct i2c_adapter *adap)$/;"	f	typeref:typename:int	file:
__i2c_check_addr_busy	t/tree/drivers/i2c/i2c-core-base.c	/^static int __i2c_check_addr_busy(struct device *dev, void *addrp)$/;"	f	typeref:typename:int	file:
__i2c_check_suspended	t/tree/drivers/i2c/i2c-core.h	/^static inline int __i2c_check_suspended(struct i2c_adapter *adap)$/;"	f	typeref:typename:int
__i2c_first_dynamic_bus_num	t/tree/drivers/i2c/i2c-boardinfo.c	/^int __i2c_first_dynamic_bus_num;$/;"	v	typeref:typename:int
__i2c_lock_bus_helper	t/tree/drivers/i2c/i2c-core.h	/^static inline int __i2c_lock_bus_helper(struct i2c_adapter *adap)$/;"	f	typeref:typename:int
__i2c_smbus_xfer	t/tree/drivers/i2c/i2c-core-smbus.c	/^s32 __i2c_smbus_xfer(struct i2c_adapter *adapter, u16 addr,$/;"	f	typeref:typename:s32
__i2c_transfer	t/tree/drivers/i2c/i2c-core-base.c	/^int __i2c_transfer(struct i2c_adapter *adap, struct i2c_msg *msgs, int num)$/;"	f	typeref:typename:int
__ilog2_u32	t/tree/include/linux/log2.h	/^int __ilog2_u32(u32 n)$/;"	f	typeref:typename:int
__ilog2_u64	t/tree/include/linux/log2.h	/^int __ilog2_u64(u64 n)$/;"	f	typeref:typename:int
__init_memblock	t/tree/include/linux/memblock.h	/^#define __init_memblock /;"	d
__init_memblock	t/tree/include/linux/memblock.h	/^#define __init_memblock$/;"	d
__initdata_memblock	t/tree/include/linux/memblock.h	/^#define __initdata_memblock /;"	d
__initdata_memblock	t/tree/include/linux/memblock.h	/^#define __initdata_memblock$/;"	d
__io_ar	t/tree/include/asm-generic/io.h	/^#define __io_ar(/;"	d
__io_aw	t/tree/include/asm-generic/io.h	/^#define __io_aw(/;"	d
__io_br	t/tree/include/asm-generic/io.h	/^#define __io_br(/;"	d
__io_bw	t/tree/include/asm-generic/io.h	/^#define __io_bw(/;"	d
__io_par	t/tree/include/asm-generic/io.h	/^#define __io_par(/;"	d
__io_paw	t/tree/include/asm-generic/io.h	/^#define __io_paw(/;"	d
__io_pbr	t/tree/include/asm-generic/io.h	/^#define __io_pbr(/;"	d
__io_pbw	t/tree/include/asm-generic/io.h	/^#define __io_pbw(/;"	d
__io_virt	t/tree/include/asm-generic/io.h	/^#define __io_virt(/;"	d
__is_kfree_rcu_offset	t/tree/include/linux/rcupdate.h	/^#define __is_kfree_rcu_offset(/;"	d
__key_get	t/tree/include/linux/key.h	/^static inline struct key *__key_get(struct key *key)$/;"	f	typeref:struct:key *
__kfree_rcu	t/tree/include/linux/rcupdate.h	/^#define __kfree_rcu(/;"	d
__order_base_2	t/tree/include/linux/log2.h	/^int __order_base_2(unsigned long n)$/;"	f	typeref:typename:__attribute_const__ int
__packed	t/tree/arch/x86/include/asm/orc_types.h	/^} __packed;$/;"	v	typeref:struct:orc_entry
__packed	t/tree/drivers/i2c/i2c-core-acpi.c	/^} __packed;$/;"	v	typeref:struct:gsb_buffer
__pci_ioport_map	t/tree/include/asm-generic/pci_iomap.h	/^#define __pci_ioport_map(/;"	d
__pm_relax	t/tree/include/linux/pm_wakeup.h	/^static inline void __pm_relax(struct wakeup_source *ws) {}$/;"	f	typeref:typename:void
__pm_stay_awake	t/tree/include/linux/pm_wakeup.h	/^static inline void __pm_stay_awake(struct wakeup_source *ws) {}$/;"	f	typeref:typename:void
__pm_wakeup_event	t/tree/include/linux/pm_wakeup.h	/^static inline void __pm_wakeup_event(struct wakeup_source *ws, unsigned int msec)$/;"	f	typeref:typename:void
__process_new_adapter	t/tree/drivers/i2c/i2c-core-base.c	/^static int __process_new_adapter(struct device_driver *d, void *data)$/;"	f	typeref:typename:int	file:
__process_new_driver	t/tree/drivers/i2c/i2c-core-base.c	/^static int __process_new_driver(struct device *dev, void *data)$/;"	f	typeref:typename:int	file:
__process_removed_adapter	t/tree/drivers/i2c/i2c-core-base.c	/^static int __process_removed_adapter(struct device_driver *d, void *data)$/;"	f	typeref:typename:int	file:
__process_removed_driver	t/tree/drivers/i2c/i2c-core-base.c	/^static int __process_removed_driver(struct device *dev, void *data)$/;"	f	typeref:typename:int	file:
__radix_tree_iter_add	t/tree/include/linux/radix-tree.h	/^__radix_tree_iter_add(struct radix_tree_iter *iter, unsigned long slots)$/;"	f	typeref:typename:unsigned long
__randomize_layout	t/tree/include/linux/cred.h	/^} __randomize_layout;$/;"	v	typeref:struct:cred
__randomize_layout	t/tree/include/linux/cred.h	/^} __randomize_layout;$/;"	v	typeref:struct:group_info
__raw_readb	t/tree/include/asm-generic/io.h	/^#define __raw_readb __raw_readb$/;"	d
__raw_readb	t/tree/include/asm-generic/io.h	/^static inline u8 __raw_readb(const volatile void __iomem *addr)$/;"	f	typeref:typename:u8
__raw_readl	t/tree/include/asm-generic/io.h	/^#define __raw_readl __raw_readl$/;"	d
__raw_readl	t/tree/include/asm-generic/io.h	/^static inline u32 __raw_readl(const volatile void __iomem *addr)$/;"	f	typeref:typename:u32
__raw_readq	t/tree/include/asm-generic/io.h	/^#define __raw_readq __raw_readq$/;"	d
__raw_readq	t/tree/include/asm-generic/io.h	/^static inline u64 __raw_readq(const volatile void __iomem *addr)$/;"	f	typeref:typename:u64
__raw_readw	t/tree/include/asm-generic/io.h	/^#define __raw_readw __raw_readw$/;"	d
__raw_readw	t/tree/include/asm-generic/io.h	/^static inline u16 __raw_readw(const volatile void __iomem *addr)$/;"	f	typeref:typename:u16
__raw_writeb	t/tree/include/asm-generic/io.h	/^#define __raw_writeb __raw_writeb$/;"	d
__raw_writeb	t/tree/include/asm-generic/io.h	/^static inline void __raw_writeb(u8 value, volatile void __iomem *addr)$/;"	f	typeref:typename:void
__raw_writel	t/tree/include/asm-generic/io.h	/^#define __raw_writel __raw_writel$/;"	d
__raw_writel	t/tree/include/asm-generic/io.h	/^static inline void __raw_writel(u32 value, volatile void __iomem *addr)$/;"	f	typeref:typename:void
__raw_writeq	t/tree/include/asm-generic/io.h	/^#define __raw_writeq __raw_writeq$/;"	d
__raw_writeq	t/tree/include/asm-generic/io.h	/^static inline void __raw_writeq(u64 value, volatile void __iomem *addr)$/;"	f	typeref:typename:void
__raw_writew	t/tree/include/asm-generic/io.h	/^#define __raw_writew __raw_writew$/;"	d
__raw_writew	t/tree/include/asm-generic/io.h	/^static inline void __raw_writew(u16 value, volatile void __iomem *addr)$/;"	f	typeref:typename:void
__rb_parent_color	t/tree/include/linux/rbtree.h	/^	unsigned long  __rb_parent_color;$/;"	m	struct:rb_node	typeref:typename:unsigned long
__rcu_access_pointer	t/tree/include/linux/rcupdate.h	/^#define __rcu_access_pointer(/;"	d
__rcu_dereference_check	t/tree/include/linux/rcupdate.h	/^#define __rcu_dereference_check(/;"	d
__rcu_dereference_protected	t/tree/include/linux/rcupdate.h	/^#define __rcu_dereference_protected(/;"	d
__rcu_read_lock	t/tree/include/linux/rcupdate.h	/^static inline void __rcu_read_lock(void)$/;"	f	typeref:typename:void
__rcu_read_unlock	t/tree/include/linux/rcupdate.h	/^static inline void __rcu_read_unlock(void)$/;"	f	typeref:typename:void
__rounddown_pow_of_two	t/tree/include/linux/log2.h	/^unsigned long __rounddown_pow_of_two(unsigned long n)$/;"	f	typeref:typename:unsigned long
__roundup_pow_of_two	t/tree/include/linux/log2.h	/^unsigned long __roundup_pow_of_two(unsigned long n)$/;"	f	typeref:typename:unsigned long
__smp_load_acquire	t/tree/include/asm-generic/barrier.h	/^#define __smp_load_acquire(/;"	d
__smp_mb	t/tree/include/asm-generic/barrier.h	/^#define __smp_mb(/;"	d
__smp_mb__after_atomic	t/tree/include/asm-generic/barrier.h	/^#define __smp_mb__after_atomic(/;"	d
__smp_mb__before_atomic	t/tree/include/asm-generic/barrier.h	/^#define __smp_mb__before_atomic(/;"	d
__smp_read_barrier_depends	t/tree/include/asm-generic/barrier.h	/^#define __smp_read_barrier_depends(/;"	d
__smp_rmb	t/tree/include/asm-generic/barrier.h	/^#define __smp_rmb(/;"	d
__smp_store_mb	t/tree/include/asm-generic/barrier.h	/^#define __smp_store_mb(/;"	d
__smp_store_release	t/tree/include/asm-generic/barrier.h	/^#define __smp_store_release(/;"	d
__smp_wmb	t/tree/include/asm-generic/barrier.h	/^#define __smp_wmb(/;"	d
__task_cred	t/tree/include/linux/cred.h	/^#define __task_cred(/;"	d
__unregister_client	t/tree/drivers/i2c/i2c-core-base.c	/^static int __unregister_client(struct device *dev, void *dummy)$/;"	f	typeref:typename:int	file:
__unregister_dummy	t/tree/drivers/i2c/i2c-core-base.c	/^static int __unregister_dummy(struct device *dev, void *dummy)$/;"	f	typeref:typename:int	file:
__validate_creds	t/tree/include/linux/cred.h	/^static inline void __validate_creds(const struct cred *cred,$/;"	f	typeref:typename:void
_flags	t/tree/include/linux/of.h	/^	unsigned long _flags;$/;"	m	struct:device_node	typeref:typename:unsigned long
_flags	t/tree/include/linux/of.h	/^	unsigned long _flags;$/;"	m	struct:property	typeref:typename:unsigned long
abort_ip	t/tree/include/uapi/linux/rseq.h	/^	__u64 abort_ip;$/;"	m	struct:rseq_cs	typeref:typename:__u64
accounting_timestamp	t/tree/include/linux/pm.h	/^	u64			accounting_timestamp;$/;"	m	struct:dev_pm_info	typeref:typename:u64
acpi_add_pm_notifier	t/tree/include/acpi/acpi_bus.h	/^static inline acpi_status acpi_add_pm_notifier(struct acpi_device *adev,$/;"	f	typeref:typename:acpi_status
acpi_address_range_id	t/tree/include/linux/acpi.h	/^enum acpi_address_range_id {$/;"	g
acpi_alloc_fwnode_static	t/tree/include/linux/acpi.h	/^static inline struct fwnode_handle *acpi_alloc_fwnode_static(void)$/;"	f	typeref:struct:fwnode_handle *
acpi_arch_get_root_pointer	t/tree/arch/x86/include/asm/acpi.h	/^static inline u64 acpi_arch_get_root_pointer(void)$/;"	f	typeref:typename:u64
acpi_arch_get_root_pointer	t/tree/include/linux/acpi.h	/^static inline u64 acpi_arch_get_root_pointer(void)$/;"	f	typeref:typename:u64
acpi_arch_set_root_pointer	t/tree/arch/x86/include/asm/acpi.h	/^static inline void acpi_arch_set_root_pointer(u64 addr)$/;"	f	typeref:typename:void
acpi_arch_set_root_pointer	t/tree/include/linux/acpi.h	/^static inline void acpi_arch_set_root_pointer(u64 addr)$/;"	f	typeref:typename:void
acpi_boot_init	t/tree/include/linux/acpi.h	/^static inline int acpi_boot_init(void)$/;"	f	typeref:typename:int
acpi_boot_table_init	t/tree/include/linux/acpi.h	/^static inline void acpi_boot_table_init(void)$/;"	f	typeref:typename:void
acpi_bus_address	t/tree/include/acpi/acpi_bus.h	/^typedef u64 acpi_bus_address;$/;"	t	typeref:typename:u64
acpi_bus_can_wakeup	t/tree/include/acpi/acpi_bus.h	/^static inline bool acpi_bus_can_wakeup(acpi_handle handle) { return false; }$/;"	f	typeref:typename:bool
acpi_bus_device_type	t/tree/include/acpi/acpi_bus.h	/^enum acpi_bus_device_type {$/;"	g
acpi_bus_event	t/tree/include/acpi/acpi_bus.h	/^struct acpi_bus_event {$/;"	s
acpi_bus_id	t/tree/include/acpi/acpi_bus.h	/^typedef char acpi_bus_id[8];$/;"	t	typeref:typename:char[8]
acpi_bus_type	t/tree/include/acpi/acpi_bus.h	/^struct acpi_bus_type {$/;"	s
acpi_check_region	t/tree/include/linux/acpi.h	/^static inline int acpi_check_region(resource_size_t start, resource_size_t n,$/;"	f	typeref:typename:int
acpi_check_resource_conflict	t/tree/include/linux/acpi.h	/^static inline int acpi_check_resource_conflict(struct resource *res)$/;"	f	typeref:typename:int
acpi_data_node	t/tree/include/acpi/acpi_bus.h	/^struct acpi_data_node {$/;"	s
acpi_data_node_match	t/tree/include/acpi/acpi_bus.h	/^static inline bool acpi_data_node_match(const struct fwnode_handle *fwnode,$/;"	f	typeref:typename:bool
acpi_data_node_match	t/tree/include/linux/acpi.h	/^static inline bool acpi_data_node_match(struct fwnode_handle *fwnode,$/;"	f	typeref:typename:bool
acpi_debugger	t/tree/include/linux/acpi.h	/^struct acpi_debugger {$/;"	s
acpi_debugger_create_thread	t/tree/include/linux/acpi.h	/^static inline int acpi_debugger_create_thread(acpi_osd_exec_callback function,$/;"	f	typeref:typename:int
acpi_debugger_init	t/tree/include/linux/acpi.h	/^static inline int acpi_debugger_init(void)$/;"	f	typeref:typename:int
acpi_debugger_notify_command_complete	t/tree/include/linux/acpi.h	/^static inline int acpi_debugger_notify_command_complete(void)$/;"	f	typeref:typename:int
acpi_debugger_ops	t/tree/include/linux/acpi.h	/^struct acpi_debugger_ops {$/;"	s
acpi_debugger_read_cmd	t/tree/include/linux/acpi.h	/^static inline int acpi_debugger_read_cmd(char *buffer, u32 buffer_length)$/;"	f	typeref:typename:int
acpi_debugger_wait_command_ready	t/tree/include/linux/acpi.h	/^static inline int acpi_debugger_wait_command_ready(void)$/;"	f	typeref:typename:int
acpi_debugger_write_log	t/tree/include/linux/acpi.h	/^static inline int acpi_debugger_write_log(const char *msg)$/;"	f	typeref:typename:int
acpi_dev_filter_resource_type_cb	t/tree/include/linux/acpi.h	/^static inline int acpi_dev_filter_resource_type_cb(struct acpi_resource *ares,$/;"	f	typeref:typename:int
acpi_dev_found	t/tree/include/linux/acpi.h	/^static inline bool acpi_dev_found(const char *hid)$/;"	f	typeref:typename:bool
acpi_dev_get_first_match_dev	t/tree/include/linux/acpi.h	/^acpi_dev_get_first_match_dev(const char *hid, const char *uid, s64 hrv)$/;"	f	typeref:struct:acpi_device *
acpi_dev_get_property	t/tree/include/linux/acpi.h	/^static inline int acpi_dev_get_property(struct acpi_device *adev,$/;"	f	typeref:typename:int
acpi_dev_gpio_irq_get	t/tree/include/linux/acpi.h	/^static inline int acpi_dev_gpio_irq_get(struct acpi_device *adev, int index)$/;"	f	typeref:typename:int
acpi_dev_has_props	t/tree/include/linux/acpi.h	/^static inline bool acpi_dev_has_props(const struct acpi_device *adev)$/;"	f	typeref:typename:bool
acpi_dev_name	t/tree/include/linux/acpi.h	/^static inline const char *acpi_dev_name(struct acpi_device *adev)$/;"	f	typeref:typename:const char *
acpi_dev_pm_attach	t/tree/include/linux/acpi.h	/^static inline int acpi_dev_pm_attach(struct device *dev, bool power_on)$/;"	f	typeref:typename:int
acpi_dev_present	t/tree/include/linux/acpi.h	/^static inline bool acpi_dev_present(const char *hid, const char *uid, s64 hrv)$/;"	f	typeref:typename:bool
acpi_dev_prop_get	t/tree/include/linux/acpi.h	/^static inline int acpi_dev_prop_get(const struct acpi_device *adev,$/;"	f	typeref:typename:int
acpi_dev_prop_read	t/tree/include/linux/acpi.h	/^static inline int acpi_dev_prop_read(const struct acpi_device *adev,$/;"	f	typeref:typename:int
acpi_dev_prop_read_single	t/tree/include/linux/acpi.h	/^static inline int acpi_dev_prop_read_single(const struct acpi_device *adev,$/;"	f	typeref:typename:int
acpi_dev_put	t/tree/include/acpi/acpi_bus.h	/^static inline void acpi_dev_put(struct acpi_device *adev)$/;"	f	typeref:typename:void
acpi_dev_put	t/tree/include/linux/acpi.h	/^static inline void acpi_dev_put(struct acpi_device *adev) {}$/;"	f	typeref:typename:void
acpi_dev_runtime_resume	t/tree/include/linux/acpi.h	/^static inline int acpi_dev_runtime_resume(struct device *dev) { return 0; }$/;"	f	typeref:typename:int
acpi_dev_runtime_suspend	t/tree/include/linux/acpi.h	/^static inline int acpi_dev_runtime_suspend(struct device *dev) { return 0; }$/;"	f	typeref:typename:int
acpi_device	t/tree/include/acpi/acpi_bus.h	/^struct acpi_device {$/;"	s
acpi_device_adr	t/tree/include/acpi/acpi_bus.h	/^#define acpi_device_adr(/;"	d
acpi_device_always_present	t/tree/include/acpi/acpi_bus.h	/^static inline bool acpi_device_always_present(struct acpi_device *adev)$/;"	f	typeref:typename:bool
acpi_device_bid	t/tree/include/acpi/acpi_bus.h	/^#define acpi_device_bid(/;"	d
acpi_device_can_poweroff	t/tree/include/acpi/acpi_bus.h	/^static inline bool acpi_device_can_poweroff(struct acpi_device *adev)$/;"	f	typeref:typename:bool
acpi_device_can_wakeup	t/tree/include/acpi/acpi_bus.h	/^static inline bool acpi_device_can_wakeup(struct acpi_device *adev)$/;"	f	typeref:typename:bool
acpi_device_class	t/tree/include/acpi/acpi_bus.h	/^#define acpi_device_class(/;"	d
acpi_device_class	t/tree/include/acpi/acpi_bus.h	/^typedef char acpi_device_class[20];$/;"	t	typeref:typename:char[20]
acpi_device_clear_enumerated	t/tree/include/linux/acpi.h	/^static inline void acpi_device_clear_enumerated(struct acpi_device *adev)$/;"	f	typeref:typename:void
acpi_device_data	t/tree/include/acpi/acpi_bus.h	/^struct acpi_device_data {$/;"	s
acpi_device_dir	t/tree/include/acpi/acpi_bus.h	/^#define acpi_device_dir(/;"	d
acpi_device_dir	t/tree/include/acpi/acpi_bus.h	/^struct acpi_device_dir {$/;"	s
acpi_device_enumerated	t/tree/include/acpi/acpi_bus.h	/^static inline bool acpi_device_enumerated(struct acpi_device *adev)$/;"	f	typeref:typename:bool
acpi_device_flags	t/tree/include/acpi/acpi_bus.h	/^struct acpi_device_flags {$/;"	s
acpi_device_get_match_data	t/tree/include/linux/acpi.h	/^static inline const void *acpi_device_get_match_data(const struct device *dev)$/;"	f	typeref:typename:const void *
acpi_device_handle	t/tree/include/linux/acpi.h	/^static inline acpi_handle acpi_device_handle(struct acpi_device *adev)$/;"	f	typeref:typename:acpi_handle
acpi_device_modalias	t/tree/include/linux/acpi.h	/^static inline int acpi_device_modalias(struct device *dev,$/;"	f	typeref:typename:int
acpi_device_name	t/tree/include/acpi/acpi_bus.h	/^#define acpi_device_name(/;"	d
acpi_device_name	t/tree/include/acpi/acpi_bus.h	/^typedef char acpi_device_name[40];$/;"	t	typeref:typename:char[40]
acpi_device_ops	t/tree/include/acpi/acpi_bus.h	/^struct acpi_device_ops {$/;"	s
acpi_device_perf	t/tree/include/acpi/acpi_bus.h	/^struct acpi_device_perf {$/;"	s
acpi_device_perf_flags	t/tree/include/acpi/acpi_bus.h	/^struct acpi_device_perf_flags {$/;"	s
acpi_device_perf_state	t/tree/include/acpi/acpi_bus.h	/^struct acpi_device_perf_state {$/;"	s
acpi_device_physical_node	t/tree/include/acpi/acpi_bus.h	/^struct acpi_device_physical_node {$/;"	s
acpi_device_pnp	t/tree/include/acpi/acpi_bus.h	/^struct acpi_device_pnp {$/;"	s
acpi_device_power	t/tree/include/acpi/acpi_bus.h	/^struct acpi_device_power {$/;"	s
acpi_device_power_flags	t/tree/include/acpi/acpi_bus.h	/^struct acpi_device_power_flags {$/;"	s
acpi_device_power_manageable	t/tree/include/acpi/acpi_bus.h	/^static inline bool acpi_device_power_manageable(struct acpi_device *adev)$/;"	f	typeref:typename:bool
acpi_device_power_state	t/tree/include/acpi/acpi_bus.h	/^struct acpi_device_power_state {$/;"	s
acpi_device_properties	t/tree/include/acpi/acpi_bus.h	/^struct acpi_device_properties {$/;"	s
acpi_device_set_enumerated	t/tree/include/linux/acpi.h	/^static inline void acpi_device_set_enumerated(struct acpi_device *adev)$/;"	f	typeref:typename:void
acpi_device_status	t/tree/include/acpi/acpi_bus.h	/^struct acpi_device_status {$/;"	s
acpi_device_uevent_modalias	t/tree/include/linux/acpi.h	/^static inline int acpi_device_uevent_modalias(struct device *dev,$/;"	f	typeref:typename:int
acpi_device_uid	t/tree/include/acpi/acpi_bus.h	/^#define acpi_device_uid(/;"	d
acpi_device_wakeup	t/tree/include/acpi/acpi_bus.h	/^struct acpi_device_wakeup {$/;"	s
acpi_device_wakeup_context	t/tree/include/acpi/acpi_bus.h	/^struct acpi_device_wakeup_context {$/;"	s
acpi_device_wakeup_flags	t/tree/include/acpi/acpi_bus.h	/^struct acpi_device_wakeup_flags {$/;"	s
acpi_disable_cmcff	t/tree/arch/x86/include/asm/acpi.h	/^#define acpi_disable_cmcff /;"	d
acpi_disable_pci	t/tree/arch/x86/include/asm/acpi.h	/^static inline void acpi_disable_pci(void) { }$/;"	f	typeref:typename:void
acpi_disable_pci	t/tree/arch/x86/include/asm/acpi.h	/^static inline void acpi_disable_pci(void)$/;"	f	typeref:typename:void
acpi_disabled	t/tree/include/linux/acpi.h	/^#define acpi_disabled /;"	d
acpi_dma_configure	t/tree/include/linux/acpi.h	/^static inline int acpi_dma_configure(struct device *dev,$/;"	f	typeref:typename:int
acpi_dma_get_range	t/tree/include/linux/acpi.h	/^static inline int acpi_dma_get_range(struct device *dev, u64 *dma_addr,$/;"	f	typeref:typename:int
acpi_dma_supported	t/tree/include/linux/acpi.h	/^static inline bool acpi_dma_supported(struct acpi_device *adev)$/;"	f	typeref:typename:bool
acpi_driver	t/tree/include/acpi/acpi_bus.h	/^struct acpi_driver {$/;"	s
acpi_driver_data	t/tree/include/acpi/acpi_bus.h	/^static inline void *acpi_driver_data(struct acpi_device *d)$/;"	f	typeref:typename:void *
acpi_driver_match_device	t/tree/include/linux/acpi.h	/^static inline bool acpi_driver_match_device(struct device *dev,$/;"	f	typeref:typename:bool
acpi_early_init	t/tree/include/linux/acpi.h	/^static inline void acpi_early_init(void) { }$/;"	f	typeref:typename:void
acpi_ec_mark_gpe_for_wake	t/tree/include/linux/acpi.h	/^static inline void acpi_ec_mark_gpe_for_wake(void) {}$/;"	f	typeref:typename:void
acpi_ec_set_gpe_wake_mask	t/tree/include/linux/acpi.h	/^static inline void acpi_ec_set_gpe_wake_mask(u8 action) {}$/;"	f	typeref:typename:void
acpi_evaluate_dsm	t/tree/include/linux/acpi.h	/^static inline union acpi_object *acpi_evaluate_dsm(acpi_handle handle,$/;"	f	typeref:union:acpi_object *
acpi_evaluate_dsm_typed	t/tree/include/acpi/acpi_bus.h	/^acpi_evaluate_dsm_typed(acpi_handle handle, const guid_t *guid, u64 rev,$/;"	f	typeref:union:acpi_object *
acpi_free_fwnode_static	t/tree/include/linux/acpi.h	/^static inline void acpi_free_fwnode_static(struct fwnode_handle *fwnode)$/;"	f	typeref:typename:void
acpi_fwnode_handle	t/tree/include/acpi/acpi_bus.h	/^static inline struct fwnode_handle *acpi_fwnode_handle(struct acpi_device *adev)$/;"	f	typeref:struct:fwnode_handle *
acpi_fwnode_handle	t/tree/include/linux/acpi.h	/^static inline struct fwnode_handle *acpi_fwnode_handle(struct acpi_device *adev)$/;"	f	typeref:struct:fwnode_handle *
acpi_generic_reduced_hw_init	t/tree/arch/x86/include/asm/acpi.h	/^static inline void acpi_generic_reduced_hw_init(void) { }$/;"	f	typeref:typename:void
acpi_get_dma_attr	t/tree/include/linux/acpi.h	/^static inline enum dev_dma_attr acpi_get_dma_attr(struct acpi_device *adev)$/;"	f	typeref:enum:dev_dma_attr
acpi_get_first_physical_node	t/tree/include/linux/acpi.h	/^static inline struct device *acpi_get_first_physical_node(struct acpi_device *adev)$/;"	f	typeref:struct:device *
acpi_get_next_subnode	t/tree/include/linux/acpi.h	/^acpi_get_next_subnode(const struct fwnode_handle *fwnode,$/;"	f	typeref:struct:fwnode_handle *
acpi_get_node	t/tree/include/linux/acpi.h	/^static inline int acpi_get_node(acpi_handle handle)$/;"	f	typeref:typename:int
acpi_get_override_irq	t/tree/include/linux/acpi.h	/^static inline int acpi_get_override_irq(u32 gsi, int *trigger, int *polarity)$/;"	f	typeref:typename:int
acpi_get_pci_dev	t/tree/include/acpi/acpi_drivers.h	/^static inline struct pci_dev *acpi_get_pci_dev(acpi_handle handle)$/;"	f	typeref:struct:pci_dev *
acpi_gpio_get_irq_resource	t/tree/include/linux/acpi.h	/^static inline bool acpi_gpio_get_irq_resource(struct acpi_resource *ares,$/;"	f	typeref:typename:bool
acpi_graph_get_next_endpoint	t/tree/include/linux/acpi.h	/^acpi_graph_get_next_endpoint(const struct fwnode_handle *fwnode,$/;"	f	typeref:struct:fwnode_handle *
acpi_graph_get_remote_endpoint	t/tree/include/linux/acpi.h	/^acpi_graph_get_remote_endpoint(const struct fwnode_handle *fwnode,$/;"	f	typeref:typename:int
acpi_gsb_i2c_read_bytes	t/tree/drivers/i2c/i2c-core-acpi.c	/^static int acpi_gsb_i2c_read_bytes(struct i2c_client *client,$/;"	f	typeref:typename:int	file:
acpi_gsb_i2c_write_bytes	t/tree/drivers/i2c/i2c-core-acpi.c	/^static int acpi_gsb_i2c_write_bytes(struct i2c_client *client,$/;"	f	typeref:typename:int	file:
acpi_handle_alert	t/tree/include/linux/acpi.h	/^#define acpi_handle_alert(/;"	d
acpi_handle_crit	t/tree/include/linux/acpi.h	/^#define acpi_handle_crit(/;"	d
acpi_handle_debug	t/tree/include/linux/acpi.h	/^#define acpi_handle_debug(/;"	d
acpi_handle_emerg	t/tree/include/linux/acpi.h	/^#define acpi_handle_emerg(/;"	d
acpi_handle_err	t/tree/include/linux/acpi.h	/^#define acpi_handle_err(/;"	d
acpi_handle_info	t/tree/include/linux/acpi.h	/^#define acpi_handle_info(/;"	d
acpi_handle_list	t/tree/include/acpi/acpi_bus.h	/^struct acpi_handle_list {$/;"	s
acpi_handle_notice	t/tree/include/linux/acpi.h	/^#define acpi_handle_notice(/;"	d
acpi_handle_printk	t/tree/include/linux/acpi.h	/^acpi_handle_printk(const char *level, void *handle, const char *fmt, ...) {}$/;"	f	typeref:typename:__printf (3,4)void
acpi_handle_warn	t/tree/include/linux/acpi.h	/^#define acpi_handle_warn(/;"	d
acpi_hardware_id	t/tree/include/acpi/acpi_bus.h	/^struct acpi_hardware_id {$/;"	s
acpi_has_cpu_in_madt	t/tree/arch/x86/include/asm/acpi.h	/^static inline bool acpi_has_cpu_in_madt(void)$/;"	f	typeref:typename:bool
acpi_has_watchdog	t/tree/include/linux/acpi.h	/^static inline bool acpi_has_watchdog(void) { return false; }$/;"	f	typeref:typename:bool
acpi_hotplug_context	t/tree/include/acpi/acpi_bus.h	/^struct acpi_hotplug_context {$/;"	s
acpi_hotplug_profile	t/tree/include/acpi/acpi_bus.h	/^struct acpi_hotplug_profile {$/;"	s
acpi_interrupt_id	t/tree/include/linux/acpi.h	/^enum acpi_interrupt_id {$/;"	g
acpi_ioapic	t/tree/arch/x86/include/asm/acpi.h	/^#define acpi_ioapic /;"	d
acpi_ioapic_add	t/tree/include/linux/acpi.h	/^static inline int acpi_ioapic_add(acpi_handle root) { return 0; }$/;"	f	typeref:typename:int
acpi_irq_get	t/tree/include/linux/acpi.h	/^int acpi_irq_get(acpi_handle handle, unsigned int index, struct resource *res)$/;"	f	typeref:typename:int
acpi_irq_model_id	t/tree/include/linux/acpi.h	/^enum acpi_irq_model_id {$/;"	g
acpi_lapic	t/tree/arch/x86/include/asm/acpi.h	/^#define acpi_lapic /;"	d
acpi_map_pxm_to_node	t/tree/include/linux/acpi.h	/^static inline int acpi_map_pxm_to_node(int pxm)$/;"	f	typeref:typename:int
acpi_map_pxm_to_online_node	t/tree/include/linux/acpi.h	/^static inline int acpi_map_pxm_to_online_node(int pxm)$/;"	f	typeref:typename:int
acpi_match_device	t/tree/include/linux/acpi.h	/^static inline const struct acpi_device_id *acpi_match_device($/;"	f	typeref:typename:const struct acpi_device_id *
acpi_mps_check	t/tree/include/linux/acpi.h	/^static inline int acpi_mps_check(void)$/;"	f	typeref:typename:int
acpi_node_get_parent	t/tree/include/linux/acpi.h	/^acpi_node_get_parent(const struct fwnode_handle *fwnode)$/;"	f	typeref:struct:fwnode_handle *
acpi_node_get_property_reference	t/tree/include/linux/acpi.h	/^acpi_node_get_property_reference(const struct fwnode_handle *fwnode,$/;"	f	typeref:typename:int
acpi_node_get_property_reference	t/tree/include/linux/acpi.h	/^static inline int acpi_node_get_property_reference($/;"	f	typeref:typename:int
acpi_node_prop_get	t/tree/include/linux/acpi.h	/^static inline int acpi_node_prop_get(const struct fwnode_handle *fwnode,$/;"	f	typeref:typename:int
acpi_node_prop_read	t/tree/include/linux/acpi.h	/^static inline int acpi_node_prop_read(const struct fwnode_handle *fwnode,$/;"	f	typeref:typename:int
acpi_noirq_set	t/tree/arch/x86/include/asm/acpi.h	/^static inline void acpi_noirq_set(void) { acpi_noirq = 1; }$/;"	f	typeref:typename:void
acpi_noirq_set	t/tree/arch/x86/include/asm/acpi.h	/^static inline void acpi_noirq_set(void) { }$/;"	f	typeref:typename:void
acpi_numa_gicc_affinity_init	t/tree/include/linux/acpi.h	/^acpi_numa_gicc_affinity_init(struct acpi_srat_gicc_affinity *pa) { }$/;"	f	typeref:typename:void
acpi_numa_processor_affinity_init	t/tree/include/linux/acpi.h	/^acpi_numa_processor_affinity_init(struct acpi_srat_cpu_affinity *pa) { }$/;"	f	typeref:typename:void
acpi_nvs_for_each_region	t/tree/include/linux/acpi.h	/^static inline int acpi_nvs_for_each_region(int (*func)(__u64, __u64, void *),$/;"	f	typeref:typename:int
acpi_nvs_register	t/tree/include/linux/acpi.h	/^static inline int acpi_nvs_register(__u64 start, __u64 size)$/;"	f	typeref:typename:int
acpi_op_add	t/tree/include/acpi/acpi_bus.h	/^typedef int (*acpi_op_add) (struct acpi_device * device);$/;"	t	typeref:typename:int (*)(struct acpi_device * device)
acpi_op_notify	t/tree/include/acpi/acpi_bus.h	/^typedef void (*acpi_op_notify) (struct acpi_device * device, u32 event);$/;"	t	typeref:typename:void (*)(struct acpi_device * device,u32 event)
acpi_op_remove	t/tree/include/acpi/acpi_bus.h	/^typedef int (*acpi_op_remove) (struct acpi_device * device);$/;"	t	typeref:typename:int (*)(struct acpi_device * device)
acpi_os_set_prepare_sleep	t/tree/include/linux/acpi.h	/^#define acpi_os_set_prepare_sleep(/;"	d
acpi_osc_context	t/tree/include/linux/acpi.h	/^struct acpi_osc_context {$/;"	s
acpi_parse_spcr	t/tree/include/linux/acpi.h	/^static inline int acpi_parse_spcr(bool enable_earlycon, bool enable_console)$/;"	f	typeref:typename:int
acpi_pci_root	t/tree/include/acpi/acpi_bus.h	/^struct acpi_pci_root {$/;"	s
acpi_penalize_sci_irq	t/tree/include/linux/acpi.h	/^static inline void acpi_penalize_sci_irq(int irq, int trigger,$/;"	f	typeref:typename:void
acpi_platform_list	t/tree/include/linux/acpi.h	/^struct acpi_platform_list {$/;"	s
acpi_platform_notify	t/tree/include/linux/acpi.h	/^acpi_platform_notify(struct device *dev, enum kobject_action action)$/;"	f	typeref:typename:int
acpi_pm_device_can_wakeup	t/tree/include/acpi/acpi_bus.h	/^static inline bool acpi_pm_device_can_wakeup(struct device *dev)$/;"	f	typeref:typename:bool
acpi_pm_device_sleep_state	t/tree/include/acpi/acpi_bus.h	/^static inline int acpi_pm_device_sleep_state(struct device *d, int *p, int m)$/;"	f	typeref:typename:int
acpi_pm_set_bridge_wakeup	t/tree/include/acpi/acpi_bus.h	/^static inline int acpi_pm_set_bridge_wakeup(struct device *dev, bool enable)$/;"	f	typeref:typename:int
acpi_pm_set_device_wakeup	t/tree/include/acpi/acpi_bus.h	/^static inline int acpi_pm_set_device_wakeup(struct device *dev, bool enable)$/;"	f	typeref:typename:int
acpi_pm_wakeup_event	t/tree/include/acpi/acpi_bus.h	/^static inline void acpi_pm_wakeup_event(struct device *dev)$/;"	f	typeref:typename:void
acpi_pnp_type	t/tree/include/acpi/acpi_bus.h	/^struct acpi_pnp_type {$/;"	s
acpi_pptt_cpu_is_thread	t/tree/include/linux/acpi.h	/^static inline int acpi_pptt_cpu_is_thread(unsigned int cpu)$/;"	f	typeref:typename:int
acpi_predicate	t/tree/include/linux/acpi.h	/^enum acpi_predicate {$/;"	g
acpi_preset_companion	t/tree/include/linux/acpi.h	/^static inline void acpi_preset_companion(struct device *dev,$/;"	f	typeref:typename:void
acpi_probe_device_table	t/tree/include/linux/acpi.h	/^#define acpi_probe_device_table(/;"	d
acpi_probe_entry	t/tree/include/linux/acpi.h	/^struct acpi_probe_entry {$/;"	s
acpi_probe_entry_validate_subtbl	t/tree/include/linux/acpi.h	/^typedef bool (*acpi_probe_entry_validate_subtbl)(struct acpi_subtable_header *,$/;"	t	typeref:typename:bool (*)(struct acpi_subtable_header *,struct acpi_probe_entry *)
acpi_processor_cstate_check	t/tree/arch/x86/include/asm/acpi.h	/^static inline unsigned int acpi_processor_cstate_check(unsigned int max_cstate)$/;"	f	typeref:typename:unsigned int
acpi_reconfig_event	t/tree/include/linux/acpi.h	/^enum acpi_reconfig_event  {$/;"	g
acpi_reconfig_notifier_register	t/tree/include/linux/acpi.h	/^static inline int acpi_reconfig_notifier_register(struct notifier_block *nb)$/;"	f	typeref:typename:int
acpi_reconfig_notifier_unregister	t/tree/include/linux/acpi.h	/^static inline int acpi_reconfig_notifier_unregister(struct notifier_block *nb)$/;"	f	typeref:typename:int
acpi_register_debugger	t/tree/include/linux/acpi.h	/^static inline int acpi_register_debugger(struct module *owner,$/;"	f	typeref:typename:int
acpi_remove_pm_notifier	t/tree/include/acpi/acpi_bus.h	/^static inline acpi_status acpi_remove_pm_notifier(struct acpi_device *adev)$/;"	f	typeref:typename:acpi_status
acpi_resource_consumer	t/tree/include/linux/acpi.h	/^static inline struct acpi_device *acpi_resource_consumer(struct resource *res)$/;"	f	typeref:struct:acpi_device *
acpi_scan_handler	t/tree/include/acpi/acpi_bus.h	/^struct acpi_scan_handler {$/;"	s
acpi_sci_irq_valid	t/tree/include/linux/acpi.h	/^static inline bool acpi_sci_irq_valid(void)$/;"	f	typeref:typename:bool
acpi_set_device_status	t/tree/include/acpi/acpi_bus.h	/^static inline void acpi_set_device_status(struct acpi_device *adev, u32 sta)$/;"	f	typeref:typename:void
acpi_set_hp_context	t/tree/include/acpi/acpi_bus.h	/^static inline void acpi_set_hp_context(struct acpi_device *adev,$/;"	f	typeref:typename:void
acpi_sleep_state_supported	t/tree/include/acpi/acpi_bus.h	/^static inline bool acpi_sleep_state_supported(u8 sleep_state) { return false; }$/;"	f	typeref:typename:bool
acpi_subsys_complete	t/tree/include/linux/acpi.h	/^static inline void acpi_subsys_complete(struct device *dev) {}$/;"	f	typeref:typename:void
acpi_subsys_freeze	t/tree/include/linux/acpi.h	/^static inline int acpi_subsys_freeze(struct device *dev) { return 0; }$/;"	f	typeref:typename:int
acpi_subsys_poweroff	t/tree/include/linux/acpi.h	/^static inline int acpi_subsys_poweroff(struct device *dev) { return 0; }$/;"	f	typeref:typename:int
acpi_subsys_prepare	t/tree/include/linux/acpi.h	/^static inline int acpi_subsys_prepare(struct device *dev) { return 0; }$/;"	f	typeref:typename:int
acpi_subsys_runtime_resume	t/tree/include/linux/acpi.h	/^static inline int acpi_subsys_runtime_resume(struct device *dev) { return 0; }$/;"	f	typeref:typename:int
acpi_subsys_runtime_suspend	t/tree/include/linux/acpi.h	/^static inline int acpi_subsys_runtime_suspend(struct device *dev) { return 0; }$/;"	f	typeref:typename:int
acpi_subsys_suspend	t/tree/include/linux/acpi.h	/^static inline int acpi_subsys_suspend(struct device *dev) { return 0; }$/;"	f	typeref:typename:int
acpi_subsys_suspend_late	t/tree/include/linux/acpi.h	/^static inline int acpi_subsys_suspend_late(struct device *dev) { return 0; }$/;"	f	typeref:typename:int
acpi_subsys_suspend_noirq	t/tree/include/linux/acpi.h	/^static inline int acpi_subsys_suspend_noirq(struct device *dev) { return 0; }$/;"	f	typeref:typename:int
acpi_subsystem_init	t/tree/include/linux/acpi.h	/^static inline void acpi_subsystem_init(void) { }$/;"	f	typeref:typename:void
acpi_subtable_headers	t/tree/include/linux/acpi.h	/^union acpi_subtable_headers {$/;"	u
acpi_subtable_proc	t/tree/include/linux/acpi.h	/^struct acpi_subtable_proc {$/;"	s
acpi_table_parse	t/tree/include/linux/acpi.h	/^static inline int acpi_table_parse(char *id,$/;"	f	typeref:typename:int
acpi_table_upgrade	t/tree/include/linux/acpi.h	/^static inline void acpi_table_upgrade(void) { }$/;"	f	typeref:typename:void
acpi_target_system_state	t/tree/include/acpi/acpi_bus.h	/^static inline u32 acpi_target_system_state(void) { return ACPI_STATE_S0; }$/;"	f	typeref:typename:u32
acpi_tbl_entry_handler	t/tree/include/linux/acpi.h	/^typedef int (*acpi_tbl_entry_handler)(union acpi_subtable_headers *header,$/;"	t	typeref:typename:int (*)(union acpi_subtable_headers * header,const unsigned long end)
acpi_tbl_table_handler	t/tree/include/linux/acpi.h	/^typedef int (*acpi_tbl_table_handler)(struct acpi_table_header *table);$/;"	t	typeref:typename:int (*)(struct acpi_table_header * table)
acpi_unlazy_tlb	t/tree/arch/x86/include/asm/acpi.h	/^#define acpi_unlazy_tlb(/;"	d
acpi_unregister_debugger	t/tree/include/linux/acpi.h	/^static inline void acpi_unregister_debugger(const struct acpi_debugger_ops *ops)$/;"	f	typeref:typename:void
acpi_wakeup_address	t/tree/arch/x86/include/asm/acpi.h	/^#define acpi_wakeup_address /;"	d
action	t/tree/include/linux/of.h	/^	unsigned long action;$/;"	m	struct:of_changeset_entry	typeref:typename:unsigned long
activate	t/tree/include/linux/pm.h	/^	int (*activate)(struct device *dev);$/;"	m	struct:dev_pm_domain	typeref:typename:int (*)(struct device * dev)
active	t/tree/include/linux/pm_wakeup.h	/^	bool			active:1;$/;"	m	struct:wakeup_source	typeref:typename:bool:1
active_count	t/tree/include/linux/pm_wakeup.h	/^	unsigned long		active_count;$/;"	m	struct:wakeup_source	typeref:typename:unsigned long
active_time	t/tree/include/linux/pm.h	/^	u64			active_time;$/;"	m	struct:dev_pm_info	typeref:typename:u64
active_uprobe	t/tree/include/linux/uprobes.h	/^	struct uprobe			*active_uprobe;$/;"	m	struct:uprobe_task	typeref:struct:uprobe *
adap	t/tree/drivers/i2c/i2c-dev.c	/^	struct i2c_adapter *adap;$/;"	m	struct:i2c_dev	typeref:struct:i2c_adapter *	file:
adapter	t/tree/drivers/i2c/i2c-core-acpi.c	/^	struct i2c_adapter *adapter;$/;"	m	struct:i2c_acpi_handler_data	typeref:struct:i2c_adapter *	file:
adapter	t/tree/include/linux/i2c.h	/^	struct i2c_adapter *adapter;	\/* the adapter we sit on	*\/$/;"	m	struct:i2c_client	typeref:struct:i2c_adapter *
adapter_handle	t/tree/drivers/i2c/i2c-core-acpi.c	/^	acpi_handle adapter_handle;$/;"	m	struct:i2c_acpi_lookup	typeref:typename:acpi_handle	file:
add	t/tree/include/acpi/acpi_bus.h	/^	acpi_op_add add;$/;"	m	struct:acpi_device_ops	typeref:typename:acpi_op_add
addr	t/tree/drivers/i2c/i2c-dev.c	/^	u16 addr;$/;"	m	struct:i2c_msg32	typeref:typename:u16	file:
addr	t/tree/drivers/i2c/i2c-smbus.c	/^	unsigned short		addr;$/;"	m	struct:alert_data	typeref:typename:unsigned short	file:
addr	t/tree/include/linux/i2c.h	/^	unsigned short	addr;$/;"	m	struct:i2c_board_info	typeref:typename:unsigned short
addr	t/tree/include/linux/i2c.h	/^	unsigned short addr;		\/* chip address - NOTE: 7bit	*\/$/;"	m	struct:i2c_client	typeref:typename:unsigned short
addr	t/tree/include/uapi/linux/i2c.h	/^	__u16 addr;	\/* slave address			*\/$/;"	m	struct:i2c_msg	typeref:typename:__u16
address_list	t/tree/include/linux/i2c.h	/^	const unsigned short *address_list;$/;"	m	struct:i2c_driver	typeref:typename:const unsigned short *
alert	t/tree/drivers/i2c/i2c-smbus.c	/^	struct work_struct	alert;$/;"	m	struct:i2c_smbus_alert	typeref:struct:work_struct	file:
alert	t/tree/include/linux/i2c.h	/^	void (*alert)(struct i2c_client *client, enum i2c_alert_protocol protocol,$/;"	m	struct:i2c_driver	typeref:typename:void (*)(struct i2c_client * client,enum i2c_alert_protocol protocol,unsigned int data)
alert_data	t/tree/drivers/i2c/i2c-smbus.c	/^struct alert_data {$/;"	s	file:
algo	t/tree/include/linux/i2c.h	/^	const struct i2c_algorithm *algo; \/* the algorithm to access the bus *\/$/;"	m	struct:i2c_adapter	typeref:typename:const struct i2c_algorithm *
algo_data	t/tree/include/linux/i2c.h	/^	void *algo_data;$/;"	m	struct:i2c_adapter	typeref:typename:void *
all_versions	t/tree/include/linux/acpi.h	/^	all_versions,$/;"	e	enum:acpi_predicate
allow_ints	t/tree/include/linux/apm_bios.h	/^	int			allow_ints;$/;"	m	struct:apm_info	typeref:typename:int
apm_bios_info	t/tree/include/uapi/linux/apm_bios.h	/^struct apm_bios_info {$/;"	s
apm_event_t	t/tree/include/uapi/linux/apm_bios.h	/^typedef unsigned short	apm_event_t;$/;"	t	typeref:typename:unsigned short
apm_eventinfo_t	t/tree/include/uapi/linux/apm_bios.h	/^typedef unsigned short	apm_eventinfo_t;$/;"	t	typeref:typename:unsigned short
apm_info	t/tree/include/linux/apm_bios.h	/^struct apm_info {$/;"	s
ara	t/tree/drivers/i2c/i2c-smbus.c	/^	struct i2c_client	*ara;		\/* Alert response address *\/$/;"	m	struct:i2c_smbus_alert	typeref:struct:i2c_client *	file:
arch_acpi_set_pdc_bits	t/tree/arch/x86/include/asm/acpi.h	/^static inline void arch_acpi_set_pdc_bits(u32 *buf)$/;"	f	typeref:typename:void
arch_apei_get_mem_attribute	t/tree/arch/x86/include/asm/acpi.h	/^static inline pgprot_t arch_apei_get_mem_attribute(phys_addr_t addr)$/;"	f	typeref:typename:pgprot_t
arch_has_acpi_pdc	t/tree/arch/x86/include/asm/acpi.h	/^static inline bool arch_has_acpi_pdc(void)$/;"	f	typeref:typename:bool
arch_read_lock	t/tree/include/asm-generic/qrwlock.h	/^#define arch_read_lock(/;"	d
arch_read_trylock	t/tree/include/asm-generic/qrwlock.h	/^#define arch_read_trylock(/;"	d
arch_read_unlock	t/tree/include/asm-generic/qrwlock.h	/^#define arch_read_unlock(/;"	d
arch_reserve_mem_area	t/tree/include/linux/acpi.h	/^static inline void arch_reserve_mem_area(acpi_physical_address addr,$/;"	f	typeref:typename:void
arch_spin_is_contended	t/tree/include/asm-generic/qspinlock.h	/^#define arch_spin_is_contended(/;"	d
arch_spin_is_locked	t/tree/include/asm-generic/qspinlock.h	/^#define arch_spin_is_locked(/;"	d
arch_spin_lock	t/tree/include/asm-generic/qspinlock.h	/^#define arch_spin_lock(/;"	d
arch_spin_trylock	t/tree/include/asm-generic/qspinlock.h	/^#define arch_spin_trylock(/;"	d
arch_spin_unlock	t/tree/include/asm-generic/qspinlock.h	/^#define arch_spin_unlock(/;"	d
arch_spin_value_unlocked	t/tree/include/asm-generic/qspinlock.h	/^#define arch_spin_value_unlocked(/;"	d
arch_spinlock_t	t/tree/include/asm-generic/qspinlock_types.h	/^} arch_spinlock_t;$/;"	t	typeref:struct:qspinlock
arch_uprobe	t/tree/arch/x86/include/asm/uprobes.h	/^struct arch_uprobe {$/;"	s
arch_uprobe_task	t/tree/arch/x86/include/asm/uprobes.h	/^struct arch_uprobe_task {$/;"	s
arch_write_lock	t/tree/include/asm-generic/qrwlock.h	/^#define arch_write_lock(/;"	d
arch_write_trylock	t/tree/include/asm-generic/qrwlock.h	/^#define arch_write_trylock(/;"	d
arch_write_unlock	t/tree/include/asm-generic/qrwlock.h	/^#define arch_write_unlock(/;"	d
arg	t/tree/drivers/i2c/i2c-core-base.c	/^	void		*arg;$/;"	m	struct:i2c_cmd_arg	typeref:typename:void *	file:
args	t/tree/include/linux/of.h	/^	uint32_t args[MAX_PHANDLE_ARGS];$/;"	m	struct:of_phandle_args	typeref:typename:uint32_t[]
args_count	t/tree/include/linux/of.h	/^	int args_count;$/;"	m	struct:of_phandle_args	typeref:typename:int
array	t/tree/include/linux/xarray.h	/^	struct xarray	*array;		\/* The array we belong to *\/$/;"	m	struct:xa_node	typeref:struct:xarray *
assoc_array	t/tree/include/linux/assoc_array.h	/^struct assoc_array {$/;"	s
assoc_array_init	t/tree/include/linux/assoc_array.h	/^static inline void assoc_array_init(struct assoc_array *array)$/;"	f	typeref:typename:void
assoc_array_ops	t/tree/include/linux/assoc_array.h	/^struct assoc_array_ops {$/;"	s
async_suspend	t/tree/include/linux/pm.h	/^	unsigned int		async_suspend:1;$/;"	m	struct:dev_pm_info	typeref:typename:unsigned int:1
attach	t/tree/include/acpi/acpi_bus.h	/^	int (*attach)(struct acpi_device *dev, const struct acpi_device_id *id);$/;"	m	struct:acpi_scan_handler	typeref:typename:int (*)(struct acpi_device * dev,const struct acpi_device_id * id)
attr	t/tree/include/linux/of.h	/^	struct bin_attribute attr;$/;"	m	struct:property	typeref:struct:bin_attribute
autask	t/tree/include/linux/uprobes.h	/^			struct arch_uprobe_task	autask;$/;"	m	struct:uprobe_task::__anon18223b0f010a::__anon18223b0f0208	typeref:struct:arch_uprobe_task
autosleep_enabled	t/tree/include/linux/pm_wakeup.h	/^	bool			autosleep_enabled:1;$/;"	m	struct:wakeup_source	typeref:typename:bool:1
autosuspend_delay	t/tree/include/linux/pm.h	/^	int			autosuspend_delay;$/;"	m	struct:dev_pm_info	typeref:typename:int
bank_end	t/tree/drivers/i2c/i2c-stub.c	/^	u8 bank_end;$/;"	m	struct:stub_chip	typeref:typename:u8	file:
bank_end	t/tree/drivers/i2c/i2c-stub.c	/^static u8 bank_end[MAX_CHIPS];$/;"	v	typeref:typename:u8[]	file:
bank_mask	t/tree/drivers/i2c/i2c-stub.c	/^	u8 bank_mask;$/;"	m	struct:stub_chip	typeref:typename:u8	file:
bank_mask	t/tree/drivers/i2c/i2c-stub.c	/^static u8 bank_mask[MAX_CHIPS];$/;"	v	typeref:typename:u8[]	file:
bank_reg	t/tree/drivers/i2c/i2c-stub.c	/^	u8 bank_reg;$/;"	m	struct:stub_chip	typeref:typename:u8	file:
bank_reg	t/tree/drivers/i2c/i2c-stub.c	/^static u8 bank_reg[MAX_CHIPS];$/;"	v	typeref:typename:u8[]	file:
bank_sel	t/tree/drivers/i2c/i2c-stub.c	/^	u8 bank_sel;		\/* Currently selected bank *\/$/;"	m	struct:stub_chip	typeref:typename:u8	file:
bank_shift	t/tree/drivers/i2c/i2c-stub.c	/^	u8 bank_shift;$/;"	m	struct:stub_chip	typeref:typename:u8	file:
bank_size	t/tree/drivers/i2c/i2c-stub.c	/^	u16 bank_size;$/;"	m	struct:stub_chip	typeref:typename:u16	file:
bank_start	t/tree/drivers/i2c/i2c-stub.c	/^	u8 bank_start;$/;"	m	struct:stub_chip	typeref:typename:u8	file:
bank_start	t/tree/drivers/i2c/i2c-stub.c	/^static u8 bank_start[MAX_CHIPS];$/;"	v	typeref:typename:u8[]	file:
bank_words	t/tree/drivers/i2c/i2c-stub.c	/^	u16 *bank_words;	\/* Room for bank_mask * bank_size registers *\/$/;"	m	struct:stub_chip	typeref:typename:u16 *	file:
base	t/tree/include/linux/memblock.h	/^	phys_addr_t base;$/;"	m	struct:memblock_region	typeref:typename:phys_addr_t
battery_present	t/tree/include/acpi/acpi_bus.h	/^	u32 battery_present:1;$/;"	m	struct:acpi_device_status	typeref:typename:u32:1
bcm47xx_fill_board_data	t/tree/drivers/firmware/broadcom/bcm74xx_sprom.c	/^static void bcm47xx_fill_board_data(struct ssb_sprom *sprom, const char *prefix,$/;"	f	typeref:typename:void	file:
bcm47xx_fill_sprom	t/tree/drivers/firmware/broadcom/bcm74xx_sprom.c	/^void bcm47xx_fill_sprom(struct ssb_sprom *sprom, const char *prefix,$/;"	f	typeref:typename:void
bcm47xx_fill_sprom_ethernet	t/tree/drivers/firmware/broadcom/bcm74xx_sprom.c	/^static void bcm47xx_fill_sprom_ethernet(struct ssb_sprom *sprom,$/;"	f	typeref:typename:void	file:
bcm47xx_fill_sprom_path_r45	t/tree/drivers/firmware/broadcom/bcm74xx_sprom.c	/^static void bcm47xx_fill_sprom_path_r45(struct ssb_sprom *sprom,$/;"	f	typeref:typename:void	file:
bcm47xx_fill_sprom_path_r4589	t/tree/drivers/firmware/broadcom/bcm74xx_sprom.c	/^static void bcm47xx_fill_sprom_path_r4589(struct ssb_sprom *sprom,$/;"	f	typeref:typename:void	file:
bcm47xx_get_sprom_bcma	t/tree/drivers/firmware/broadcom/bcm74xx_sprom.c	/^static int bcm47xx_get_sprom_bcma(struct bcma_bus *bus, struct ssb_sprom *out)$/;"	f	typeref:typename:int	file:
bcm47xx_get_sprom_ssb	t/tree/drivers/firmware/broadcom/bcm74xx_sprom.c	/^static int bcm47xx_get_sprom_ssb(struct ssb_bus *bus, struct ssb_sprom *out)$/;"	f	typeref:typename:int	file:
bcm47xx_increase_mac_addr	t/tree/drivers/firmware/broadcom/bcm74xx_sprom.c	/^static int bcm47xx_increase_mac_addr(u8 *mac, u8 num)$/;"	f	typeref:typename:int	file:
bcm47xx_is_valid_mac	t/tree/drivers/firmware/broadcom/bcm74xx_sprom.c	/^static bool bcm47xx_is_valid_mac(u8 *mac)$/;"	f	typeref:typename:bool	file:
bcm47xx_sprom_apply_prefix_alias	t/tree/drivers/firmware/broadcom/bcm74xx_sprom.c	/^static void bcm47xx_sprom_apply_prefix_alias(char *prefix, size_t prefix_size)$/;"	f	typeref:typename:void	file:
bcm47xx_sprom_fill_auto	t/tree/drivers/firmware/broadcom/bcm74xx_sprom.c	/^static void bcm47xx_sprom_fill_auto(struct ssb_sprom *sprom,$/;"	f	typeref:typename:void	file:
bcm47xx_sprom_register_fallbacks	t/tree/drivers/firmware/broadcom/bcm74xx_sprom.c	/^int bcm47xx_sprom_register_fallbacks(void)$/;"	f	typeref:typename:int
bcm47xx_sprom_registered	t/tree/drivers/firmware/broadcom/bcm74xx_sprom.c	/^static unsigned int bcm47xx_sprom_registered;$/;"	v	typeref:typename:unsigned int	file:
bdata	t/tree/drivers/i2c/i2c-core-acpi.c	/^		u8	bdata;$/;"	m	union:gsb_buffer::__anonee402091010a	typeref:typename:u8	file:
bind	t/tree/include/acpi/acpi_bus.h	/^	void (*bind)(struct device *phys_dev);$/;"	m	struct:acpi_scan_handler	typeref:typename:void (*)(struct device * phys_dev)
bios	t/tree/include/linux/apm_bios.h	/^	struct apm_bios_info	bios;$/;"	m	struct:apm_info	typeref:struct:apm_bios_info
bits_per	t/tree/include/linux/log2.h	/^#define bits_per(/;"	d
block	t/tree/drivers/i2c/i2c-stub.c	/^	u8 block[I2C_SMBUS_BLOCK_MAX];$/;"	m	struct:smbus_block_data	typeref:typename:u8[]	file:
block	t/tree/include/uapi/linux/i2c.h	/^	__u8 block[I2C_SMBUS_BLOCK_MAX + 2]; \/* block[0] is used for length *\/$/;"	m	union:i2c_smbus_data	typeref:typename:__u8[]
board_info	t/tree/drivers/i2c/i2c-core.h	/^	struct i2c_board_info	board_info;$/;"	m	struct:i2c_devinfo	typeref:struct:i2c_board_info
bottom_up	t/tree/include/linux/memblock.h	/^	bool bottom_up;  \/* is bottom up direction? *\/$/;"	m	struct:memblock	typeref:typename:bool
bp_offset	t/tree/arch/x86/include/asm/orc_types.h	/^	s16		bp_offset;$/;"	m	struct:orc_entry	typeref:typename:s16
bp_reg	t/tree/arch/x86/include/asm/orc_types.h	/^	unsigned	bp_reg:4;$/;"	m	struct:orc_entry	typeref:typename:unsigned:4
branch	t/tree/arch/x86/include/asm/uprobes.h	/^		}			branch;$/;"	m	union:arch_uprobe::__anon323fcd42020a	typeref:struct:arch_uprobe::__anon323fcd42020a::__anon323fcd420308
buf	t/tree/drivers/i2c/i2c-dev.c	/^	compat_caddr_t buf;$/;"	m	struct:i2c_msg32	typeref:typename:compat_caddr_t	file:
buf	t/tree/include/uapi/linux/i2c.h	/^	__u8 *buf;		\/* pointer to msg data			*\/$/;"	m	struct:i2c_msg	typeref:typename:__u8 *
builtin_i2c_driver	t/tree/include/linux/i2c.h	/^#define builtin_i2c_driver(/;"	d
bus	t/tree/include/acpi/acpi_bus.h	/^	struct pci_bus *bus;$/;"	m	struct:acpi_pci_root	typeref:struct:pci_bus *
bus_address	t/tree/include/acpi/acpi_bus.h	/^	acpi_bus_address bus_address;	\/* _ADR *\/$/;"	m	struct:acpi_device_pnp	typeref:typename:acpi_bus_address
bus_address	t/tree/include/acpi/acpi_bus.h	/^	u32 bus_address:1;$/;"	m	struct:acpi_pnp_type	typeref:typename:u32:1
bus_freq_hz	t/tree/include/linux/i2c.h	/^	u32 bus_freq_hz;$/;"	m	struct:i2c_timings	typeref:typename:u32
bus_id	t/tree/include/acpi/acpi_bus.h	/^	acpi_bus_id bus_id;		\/* Object name *\/$/;"	m	struct:acpi_device_pnp	typeref:typename:acpi_bus_id
bus_id	t/tree/include/acpi/acpi_bus.h	/^	acpi_bus_id bus_id;$/;"	m	struct:acpi_bus_event	typeref:typename:acpi_bus_id
bus_lock	t/tree/include/linux/i2c.h	/^	struct rt_mutex bus_lock;$/;"	m	struct:i2c_adapter	typeref:struct:rt_mutex
bus_recovery_info	t/tree/include/linux/i2c.h	/^	struct i2c_bus_recovery_info *bus_recovery_info;$/;"	m	struct:i2c_adapter	typeref:struct:i2c_bus_recovery_info *
bus_to_virt	t/tree/include/asm-generic/io.h	/^static inline void *bus_to_virt(unsigned long address)$/;"	f	typeref:typename:void *
busnum	t/tree/drivers/i2c/i2c-core.h	/^	int			busnum;$/;"	m	struct:i2c_devinfo	typeref:typename:int
byte	t/tree/include/uapi/linux/i2c.h	/^	__u8 byte;$/;"	m	union:i2c_smbus_data	typeref:typename:__u8
call_rcu_tasks	t/tree/include/linux/rcupdate.h	/^#define call_rcu_tasks /;"	d
can_wakeup	t/tree/include/linux/pm.h	/^	unsigned int		can_wakeup:1;$/;"	m	struct:dev_pm_info	typeref:typename:unsigned int:1
cap	t/tree/include/linux/acpi.h	/^	struct acpi_buffer cap;		\/* list of DWORD capabilities *\/$/;"	m	struct:acpi_osc_context	typeref:struct:acpi_buffer
cap_ambient	t/tree/include/linux/cred.h	/^	kernel_cap_t	cap_ambient;	\/* Ambient capability set *\/$/;"	m	struct:cred	typeref:typename:kernel_cap_t
cap_ambient_invariant_ok	t/tree/include/linux/cred.h	/^static inline bool cap_ambient_invariant_ok(const struct cred *cred)$/;"	f	typeref:typename:bool
cap_bset	t/tree/include/linux/cred.h	/^	kernel_cap_t	cap_bset;	\/* capability bounding set *\/$/;"	m	struct:cred	typeref:typename:kernel_cap_t
cap_effective	t/tree/include/linux/cred.h	/^	kernel_cap_t	cap_effective;	\/* caps we can actually use *\/$/;"	m	struct:cred	typeref:typename:kernel_cap_t
cap_inheritable	t/tree/include/linux/cred.h	/^	kernel_cap_t	cap_inheritable; \/* caps our children can inherit *\/$/;"	m	struct:cred	typeref:typename:kernel_cap_t
cap_permitted	t/tree/include/linux/cred.h	/^	kernel_cap_t	cap_permitted;	\/* caps we're permitted *\/$/;"	m	struct:cred	typeref:typename:kernel_cap_t
cb_head	t/tree/include/linux/rcu_sync.h	/^	struct rcu_head		cb_head;$/;"	m	struct:rcu_sync	typeref:struct:rcu_head
cca_seen	t/tree/include/acpi/acpi_bus.h	/^	u32 cca_seen:1;$/;"	m	struct:acpi_device_flags	typeref:typename:u32:1
cdev	t/tree/drivers/i2c/i2c-dev.c	/^	struct cdev cdev;$/;"	m	struct:i2c_dev	typeref:struct:cdev	file:
cell_count	t/tree/include/linux/of.h	/^	int cell_count;$/;"	m	struct:of_phandle_iterator	typeref:typename:int
cells_name	t/tree/include/linux/of.h	/^	const char *cells_name;$/;"	m	struct:of_phandle_iterator	typeref:typename:const char *
chained	t/tree/include/linux/uprobes.h	/^	bool			chained;	\/* true, if instance is nested *\/$/;"	m	struct:return_instance	typeref:typename:bool
check	t/tree/include/linux/key.h	/^	key_restrict_link_func_t check;$/;"	m	struct:key_restriction	typeref:typename:key_restrict_link_func_t
child	t/tree/include/linux/of.h	/^	struct	device_node *child;$/;"	m	struct:device_node	typeref:struct:device_node *
child_count	t/tree/include/linux/pm.h	/^	atomic_t		child_count;$/;"	m	struct:dev_pm_info	typeref:typename:atomic_t
children	t/tree/include/acpi/acpi_bus.h	/^	struct list_head children;$/;"	m	struct:acpi_device	typeref:struct:list_head
chip_addr	t/tree/drivers/i2c/i2c-stub.c	/^static unsigned short chip_addr[MAX_CHIPS];$/;"	v	typeref:typename:unsigned short[]	file:
class	t/tree/issue131.h	/^struct class {$/;"	s
cleanup	t/tree/include/acpi/acpi_bus.h	/^	void (*cleanup)(struct device *);$/;"	m	struct:acpi_bus_type	typeref:typename:void (*)(struct device *)
client	t/tree/drivers/i2c/i2c-core-base.c	/^	struct i2c_client *client;$/;"	m	struct:i2c_dummy_devres	typeref:struct:i2c_client *	file:
clients	t/tree/include/linux/i2c.h	/^	struct list_head clients;$/;"	m	struct:i2c_driver	typeref:struct:list_head
clock_list	t/tree/include/linux/pm.h	/^	struct list_head clock_list;$/;"	m	struct:pm_subsys_data	typeref:struct:list_head
cmd	t/tree/drivers/i2c/i2c-core-base.c	/^	unsigned	cmd;$/;"	m	struct:i2c_cmd_arg	typeref:typename:unsigned	file:
cnt	t/tree/include/linux/memblock.h	/^	unsigned long cnt;$/;"	m	struct:memblock_type	typeref:typename:unsigned long
coherent_dma	t/tree/include/acpi/acpi_bus.h	/^	u32 coherent_dma:1;$/;"	m	struct:acpi_device_flags	typeref:typename:u32:1
command	t/tree/arch/x86/include/uapi/asm/ist.h	/^	__u32 command;$/;"	m	struct:ist_info	typeref:typename:__u32
command	t/tree/drivers/i2c/i2c-dev.c	/^	u8 command;$/;"	m	struct:i2c_smbus_ioctl_data32	typeref:typename:u8	file:
command	t/tree/drivers/i2c/i2c-stub.c	/^	u8 command;$/;"	m	struct:smbus_block_data	typeref:typename:u8	file:
command	t/tree/include/linux/i2c.h	/^	int (*command)(struct i2c_client *client, unsigned int cmd, void *arg);$/;"	m	struct:i2c_driver	typeref:typename:int (*)(struct i2c_client * client,unsigned int cmd,void * arg)
common	t/tree/include/linux/acpi.h	/^	struct acpi_subtable_header common;$/;"	m	union:acpi_subtable_headers	typeref:struct:acpi_subtable_header
compare_object	t/tree/include/linux/assoc_array.h	/^	bool (*compare_object)(const void *object, const void *index_key);$/;"	m	struct:assoc_array_ops	typeref:typename:bool (*)(const void * object,const void * index_key)
compat_i2cdev_ioctl	t/tree/drivers/i2c/i2c-dev.c	/^#define compat_i2cdev_ioctl /;"	d	file:
compat_i2cdev_ioctl	t/tree/drivers/i2c/i2c-dev.c	/^static long compat_i2cdev_ioctl(struct file *file, unsigned int cmd, unsigned long arg)$/;"	f	typeref:typename:long	file:
compatible	t/tree/include/linux/of_platform.h	/^	char *compatible;$/;"	m	struct:of_dev_auxdata	typeref:typename:char *
complete	t/tree/include/linux/pm.h	/^	void (*complete)(struct device *dev);$/;"	m	struct:dev_pm_ops	typeref:typename:void (*)(struct device * dev)
completion	t/tree/include/linux/pm.h	/^	struct completion	completion;$/;"	m	struct:dev_pm_info	typeref:struct:completion
cond_resched_tasks_rcu_qs	t/tree/include/linux/rcupdate.h	/^#define cond_resched_tasks_rcu_qs(/;"	d
connection_version	t/tree/include/linux/apm_bios.h	/^	unsigned short		connection_version;$/;"	m	struct:apm_info	typeref:typename:unsigned short
const_ilog2	t/tree/include/linux/log2.h	/^#define const_ilog2(/;"	d
context	t/tree/include/acpi/acpi_bus.h	/^	struct acpi_device_wakeup_context context;$/;"	m	struct:acpi_device_wakeup	typeref:struct:acpi_device_wakeup_context
count	t/tree/include/acpi/acpi_bus.h	/^	u32 count;$/;"	m	struct:acpi_handle_list	typeref:typename:u32
count	t/tree/include/linux/acpi.h	/^	int count;$/;"	m	struct:acpi_subtable_proc	typeref:typename:int
count	t/tree/include/linux/xarray.h	/^	unsigned char	count;		\/* Total entry count *\/$/;"	m	struct:xa_node	typeref:typename:unsigned char
cpu	t/tree/include/linux/srcutree.h	/^	int cpu;$/;"	m	struct:srcu_data	typeref:typename:int
cpu_id	t/tree/include/uapi/linux/rseq.h	/^	__u32 cpu_id;$/;"	m	struct:rseq	typeref:typename:__u32
cpu_id_start	t/tree/include/uapi/linux/rseq.h	/^	__u32 cpu_id_start;$/;"	m	struct:rseq	typeref:typename:__u32
crc8	t/tree/drivers/i2c/i2c-core-smbus.c	/^static u8 crc8(u16 data)$/;"	f	typeref:typename:u8	file:
create_key	t/tree/drivers/firmware/broadcom/bcm74xx_sprom.c	/^static void create_key(const char *prefix, const char *postfix,$/;"	f	typeref:typename:void	file:
create_thread	t/tree/include/linux/acpi.h	/^	int (*create_thread)(acpi_osd_exec_callback function, void *context);$/;"	m	struct:acpi_debugger_ops	typeref:typename:int (*)(acpi_osd_exec_callback function,void * context)
cred	t/tree/include/linux/cred.h	/^struct cred {$/;"	s
cseg	t/tree/include/uapi/linux/apm_bios.h	/^	__u16	cseg;$/;"	m	struct:apm_bios_info	typeref:typename:__u16
cseg_16	t/tree/include/uapi/linux/apm_bios.h	/^	__u16	cseg_16;$/;"	m	struct:apm_bios_info	typeref:typename:__u16
cseg_16_len	t/tree/include/uapi/linux/apm_bios.h	/^	__u16	cseg_16_len;$/;"	m	struct:apm_bios_info	typeref:typename:__u16
cseg_len	t/tree/include/uapi/linux/apm_bios.h	/^	__u16	cseg_len;$/;"	m	struct:apm_bios_info	typeref:typename:__u16
cur	t/tree/include/linux/of.h	/^	const __be32 *cur;$/;"	m	struct:of_phandle_iterator	typeref:typename:const __be32 *
cur_count	t/tree/include/linux/of.h	/^	uint32_t cur_count;$/;"	m	struct:of_phandle_iterator	typeref:typename:uint32_t
current_cap	t/tree/include/linux/cred.h	/^#define current_cap(/;"	d
current_cred	t/tree/include/linux/cred.h	/^#define current_cred(/;"	d
current_cred_xxx	t/tree/include/linux/cred.h	/^#define current_cred_xxx(/;"	d
current_egid	t/tree/include/linux/cred.h	/^#define current_egid(/;"	d
current_euid	t/tree/include/linux/cred.h	/^#define current_euid(/;"	d
current_euid_egid	t/tree/include/linux/cred.h	/^#define current_euid_egid(/;"	d
current_fsgid	t/tree/include/linux/cred.h	/^#define current_fsgid(/;"	d
current_fsuid	t/tree/include/linux/cred.h	/^#define current_fsuid(/;"	d
current_fsuid_fsgid	t/tree/include/linux/cred.h	/^#define current_fsuid_fsgid(/;"	d
current_gid	t/tree/include/linux/cred.h	/^#define current_gid(/;"	d
current_limit	t/tree/include/linux/memblock.h	/^	phys_addr_t current_limit;$/;"	m	struct:memblock	typeref:typename:phys_addr_t
current_real_cred	t/tree/include/linux/cred.h	/^#define current_real_cred(/;"	d
current_sgid	t/tree/include/linux/cred.h	/^#define current_sgid(/;"	d
current_suid	t/tree/include/linux/cred.h	/^#define current_suid(/;"	d
current_uid	t/tree/include/linux/cred.h	/^#define current_uid(/;"	d
current_uid_gid	t/tree/include/linux/cred.h	/^#define current_uid_gid(/;"	d
current_user	t/tree/include/linux/cred.h	/^#define current_user(/;"	d
current_user_ns	t/tree/include/linux/cred.h	/^#define current_user_ns(/;"	d
current_user_ns	t/tree/include/linux/cred.h	/^static inline struct user_namespace *current_user_ns(void)$/;"	f	typeref:struct:user_namespace *
data	t/tree/drivers/i2c/i2c-core-acpi.c	/^		u8	data[0];$/;"	m	union:gsb_buffer::__anonee402091010a	typeref:typename:u8[0]	file:
data	t/tree/drivers/i2c/i2c-dev.c	/^	compat_caddr_t data; \/* union i2c_smbus_data *data *\/$/;"	m	struct:i2c_smbus_ioctl_data32	typeref:typename:compat_caddr_t	file:
data	t/tree/drivers/i2c/i2c-smbus.c	/^	unsigned int		data;$/;"	m	struct:alert_data	typeref:typename:unsigned int	file:
data	t/tree/include/acpi/acpi_bus.h	/^	struct acpi_device_data data;$/;"	m	struct:acpi_data_node	typeref:struct:acpi_device_data
data	t/tree/include/acpi/acpi_bus.h	/^	struct acpi_device_data data;$/;"	m	struct:acpi_device	typeref:struct:acpi_device_data
data	t/tree/include/acpi/acpi_bus.h	/^	u32 data;$/;"	m	struct:acpi_bus_event	typeref:typename:u32
data	t/tree/include/linux/acpi.h	/^	u32	data;$/;"	m	struct:acpi_platform_list	typeref:typename:u32
data	t/tree/include/linux/key.h	/^	void			*data[4];$/;"	m	union:key_payload	typeref:typename:void * [4]
data	t/tree/include/linux/of.h	/^	void	*data;$/;"	m	struct:device_node	typeref:typename:void *
data	t/tree/include/uapi/linux/eventpoll.h	/^	__u64 data;$/;"	m	struct:epoll_event	typeref:typename:__u64
datalen	t/tree/include/linux/key.h	/^	unsigned short		datalen;	\/* payload data length$/;"	m	struct:key	typeref:typename:unsigned short
deadprops	t/tree/include/linux/of.h	/^	struct	property *deadprops;	\/* removed properties *\/$/;"	m	struct:device_node	typeref:struct:property *
deferred_resume	t/tree/include/linux/pm.h	/^	unsigned int		deferred_resume:1;$/;"	m	struct:dev_pm_info	typeref:typename:unsigned int:1
defparam	t/tree/arch/x86/include/asm/uprobes.h	/^		} 			defparam;$/;"	m	union:arch_uprobe::__anon323fcd42020a	typeref:struct:arch_uprobe::__anon323fcd42020a::__anon323fcd420408
del_list	t/tree/include/acpi/acpi_bus.h	/^	struct list_head del_list;$/;"	m	struct:acpi_device	typeref:struct:list_head
delay_work	t/tree/include/linux/srcutree.h	/^	struct timer_list delay_work;		\/* Delay for CB invoking *\/$/;"	m	struct:srcu_data	typeref:struct:timer_list
demand_offline	t/tree/include/acpi/acpi_bus.h	/^	bool demand_offline:1;$/;"	m	struct:acpi_hotplug_profile	typeref:typename:bool:1
dep_map	t/tree/include/linux/srcutree.h	/^	struct lockdep_map dep_map;$/;"	m	struct:srcu_struct	typeref:struct:lockdep_map
dep_unmet	t/tree/include/acpi/acpi_bus.h	/^	unsigned int dep_unmet;$/;"	m	struct:acpi_device	typeref:typename:unsigned int
depot_stack_handle_t	t/tree/include/linux/stackdepot.h	/^typedef u32 depot_stack_handle_t;$/;"	t	typeref:typename:u32
depth	t/tree/include/linux/uprobes.h	/^	unsigned int			depth;$/;"	m	struct:uprobe_task	typeref:typename:unsigned int
dereference_key_locked	t/tree/include/linux/key.h	/^#define dereference_key_locked(/;"	d
dereference_key_rcu	t/tree/include/linux/key.h	/^#define dereference_key_rcu(/;"	d
desc	t/tree/include/linux/key.h	/^			char	desc[sizeof(long) - 2];	\/* First few chars of description *\/$/;"	m	struct:keyring_index_key::__anon38d188f8010a::__anon38d188f80208	typeref:typename:char[]
desc_len	t/tree/include/linux/key.h	/^			u16	desc_len;$/;"	m	struct:keyring_index_key::__anon38d188f8010a::__anon38d188f80208	typeref:typename:u16
description	t/tree/include/linux/key.h	/^			char		*description;$/;"	m	struct:key::__anon38d188f8050a::__anon38d188f80608	typeref:typename:char *
description	t/tree/include/linux/key.h	/^	const char		*description;$/;"	m	struct:keyring_index_key	typeref:typename:const char *
destroy_rcu_head	t/tree/include/linux/rcupdate.h	/^static inline void destroy_rcu_head(struct rcu_head *head) { }$/;"	f	typeref:typename:void
destroy_rcu_head_on_stack	t/tree/include/linux/rcupdate.h	/^static inline void destroy_rcu_head_on_stack(struct rcu_head *head) { }$/;"	f	typeref:typename:void
detach	t/tree/include/acpi/acpi_bus.h	/^	void (*detach)(struct acpi_device *dev);$/;"	m	struct:acpi_scan_handler	typeref:typename:void (*)(struct acpi_device * dev)
detach	t/tree/include/linux/pm.h	/^	void (*detach)(struct device *dev, bool power_off);$/;"	m	struct:dev_pm_domain	typeref:typename:void (*)(struct device * dev,bool power_off)
detect	t/tree/include/linux/i2c.h	/^	int (*detect)(struct i2c_client *client, struct i2c_board_info *info);$/;"	m	struct:i2c_driver	typeref:typename:int (*)(struct i2c_client * client,struct i2c_board_info * info)
detected	t/tree/include/linux/i2c.h	/^	struct list_head detected;$/;"	m	struct:i2c_client	typeref:struct:list_head
dev	t/tree/drivers/i2c/i2c-dev.c	/^	struct device *dev;$/;"	m	struct:i2c_dev	typeref:struct:device *	file:
dev	t/tree/include/acpi/acpi_bus.h	/^	struct device *dev;$/;"	m	struct:acpi_device_physical_node	typeref:struct:device *
dev	t/tree/include/acpi/acpi_bus.h	/^	struct device *dev;$/;"	m	struct:acpi_device_wakeup_context	typeref:struct:device *
dev	t/tree/include/acpi/acpi_bus.h	/^	struct device dev;$/;"	m	struct:acpi_device	typeref:struct:device
dev	t/tree/include/linux/i2c.h	/^	struct device dev;		\/* the adapter device *\/$/;"	m	struct:i2c_adapter	typeref:struct:device
dev	t/tree/include/linux/i2c.h	/^	struct device dev;		\/* the device structure		*\/$/;"	m	struct:i2c_client	typeref:struct:device
dev	t/tree/include/linux/pm_wakeup.h	/^	struct device		*dev;$/;"	m	struct:wakeup_source	typeref:struct:device *
dev_name	t/tree/include/linux/i2c.h	/^	const char	*dev_name;$/;"	m	struct:i2c_board_info	typeref:typename:const char *
dev_pm_domain	t/tree/include/linux/pm.h	/^struct dev_pm_domain {$/;"	s
dev_pm_info	t/tree/include/linux/pm.h	/^struct dev_pm_info {$/;"	s
dev_pm_ops	t/tree/include/linux/pm.h	/^struct dev_pm_ops {$/;"	s
dev_released	t/tree/include/linux/i2c.h	/^	struct completion dev_released;$/;"	m	struct:i2c_adapter	typeref:struct:completion
device	t/tree/include/acpi/acpi_bus.h	/^	struct acpi_device * device;$/;"	m	struct:acpi_pci_root	typeref:struct:acpi_device *
device_can_wakeup	t/tree/include/linux/pm_wakeup.h	/^static inline bool device_can_wakeup(struct device *dev)$/;"	f	typeref:typename:bool
device_class	t/tree/include/acpi/acpi_bus.h	/^	acpi_device_class device_class;	\/*        "          *\/$/;"	m	struct:acpi_device_pnp	typeref:typename:acpi_device_class
device_class	t/tree/include/acpi/acpi_bus.h	/^	acpi_device_class device_class;$/;"	m	struct:acpi_bus_event	typeref:typename:acpi_device_class
device_handle	t/tree/drivers/i2c/i2c-core-acpi.c	/^	acpi_handle device_handle;$/;"	m	struct:i2c_acpi_lookup	typeref:typename:acpi_handle	file:
device_init_wakeup	t/tree/include/linux/pm_wakeup.h	/^static inline int device_init_wakeup(struct device *dev, bool val)$/;"	f	typeref:typename:int
device_may_wakeup	t/tree/include/linux/pm_wakeup.h	/^static inline bool device_may_wakeup(struct device *dev)$/;"	f	typeref:typename:bool
device_name	t/tree/include/acpi/acpi_bus.h	/^	acpi_device_name device_name;	\/* Driver-determined *\/$/;"	m	struct:acpi_device_pnp	typeref:typename:acpi_device_name
device_node	t/tree/include/linux/of.h	/^struct device_node {$/;"	s
device_pm_lock	t/tree/include/linux/pm.h	/^#define device_pm_lock(/;"	d
device_pm_unlock	t/tree/include/linux/pm.h	/^#define device_pm_unlock(/;"	d
device_pm_wait_for_dev	t/tree/include/linux/pm.h	/^static inline int device_pm_wait_for_dev(struct device *a, struct device *b)$/;"	f	typeref:typename:int
device_set_wakeup_capable	t/tree/include/linux/pm_wakeup.h	/^static inline void device_set_wakeup_capable(struct device *dev, bool capable)$/;"	f	typeref:typename:void
device_set_wakeup_enable	t/tree/include/linux/pm_wakeup.h	/^static inline int device_set_wakeup_enable(struct device *dev, bool enable)$/;"	f	typeref:typename:int
device_set_wakeup_path	t/tree/include/linux/pm_wakeup.h	/^static inline void device_set_wakeup_path(struct device *dev) {}$/;"	f	typeref:typename:void
device_set_wakeup_path	t/tree/include/linux/pm_wakeup.h	/^static inline void device_set_wakeup_path(struct device *dev)$/;"	f	typeref:typename:void
device_type	t/tree/include/acpi/acpi_bus.h	/^	int device_type;$/;"	m	struct:acpi_device	typeref:typename:int
device_wakeup_disable	t/tree/include/linux/pm_wakeup.h	/^static inline int device_wakeup_disable(struct device *dev)$/;"	f	typeref:typename:int
device_wakeup_enable	t/tree/include/linux/pm_wakeup.h	/^static inline int device_wakeup_enable(struct device *dev)$/;"	f	typeref:typename:int
devm_i2c_new_dummy_device	t/tree/drivers/i2c/i2c-core-base.c	/^struct i2c_client *devm_i2c_new_dummy_device(struct device *dev,$/;"	f	typeref:struct:i2c_client *
devm_i2c_release_dummy	t/tree/drivers/i2c/i2c-core-base.c	/^static void devm_i2c_release_dummy(struct device *dev, void *res)$/;"	f	typeref:typename:void	file:
devm_of_platform_depopulate	t/tree/include/linux/of_platform.h	/^static inline void devm_of_platform_depopulate(struct device *dev) { }$/;"	f	typeref:typename:void
devm_of_platform_populate	t/tree/include/linux/of_platform.h	/^static inline int devm_of_platform_populate(struct device *dev)$/;"	f	typeref:typename:int
die_revision	t/tree/include/linux/i2c.h	/^	u8 die_revision;$/;"	m	struct:i2c_device_identity	typeref:typename:u8
diff_objects	t/tree/include/linux/assoc_array.h	/^	int (*diff_objects)(const void *object, const void *index_key);$/;"	m	struct:assoc_array_ops	typeref:typename:int (*)(const void * object,const void * index_key)
dir	t/tree/include/acpi/acpi_bus.h	/^	struct acpi_device_dir dir;$/;"	m	struct:acpi_device	typeref:struct:acpi_device_dir
direct_complete	t/tree/include/linux/pm.h	/^	bool			direct_complete:1;	\/* Owned by the PM core *\/$/;"	m	struct:dev_pm_info	typeref:typename:bool:1
disable_acpi	t/tree/arch/x86/include/asm/acpi.h	/^static inline void disable_acpi(void) { }$/;"	f	typeref:typename:void
disable_acpi	t/tree/arch/x86/include/asm/acpi.h	/^static inline void disable_acpi(void)$/;"	f	typeref:typename:void
disable_depth	t/tree/include/linux/pm.h	/^	unsigned int		disable_depth:3;$/;"	m	struct:dev_pm_info	typeref:typename:unsigned int:3
disable_i2c_core_irq_mapping	t/tree/include/linux/i2c.h	/^	bool disable_i2c_core_irq_mapping;$/;"	m	struct:i2c_driver	typeref:typename:bool
disabled	t/tree/include/linux/apm_bios.h	/^	int			disabled;$/;"	m	struct:apm_info	typeref:typename:int
dismiss	t/tree/include/linux/pm.h	/^	void (*dismiss)(struct device *dev);$/;"	m	struct:dev_pm_domain	typeref:typename:void (*)(struct device * dev)
dma_rmb	t/tree/include/asm-generic/barrier.h	/^#define dma_rmb(/;"	d
dma_wmb	t/tree/include/asm-generic/barrier.h	/^#define dma_wmb(/;"	d
dn	t/tree/include/linux/of.h	/^	struct device_node	*dn;$/;"	m	struct:of_reconfig_data	typeref:struct:device_node *
documented_function_XYZZY	t/tree/issue102.c	/^void documented_function_XYZZY(void)$/;"	f	typeref:typename:void
domain_data	t/tree/include/linux/pm.h	/^	struct pm_domain_data *domain_data;$/;"	m	struct:pm_subsys_data	typeref:struct:pm_domain_data *
domain_tag	t/tree/include/linux/key.h	/^			struct key_tag	*domain_tag;	\/* Domain of operation *\/$/;"	m	struct:key::__anon38d188f8050a::__anon38d188f80608	typeref:struct:key_tag *
domain_tag	t/tree/include/linux/key.h	/^	struct key_tag		*domain_tag;	\/* Domain of operation *\/$/;"	m	struct:keyring_index_key	typeref:struct:key_tag *
dpm_for_each_dev	t/tree/include/linux/pm.h	/^static inline void dpm_for_each_dev(void *data, void (*fn)(struct device *, void *))$/;"	f	typeref:typename:void
dpm_order	t/tree/include/linux/pm.h	/^enum dpm_order {$/;"	g
dpm_suspend_start	t/tree/include/linux/pm.h	/^static inline int dpm_suspend_start(pm_message_t state)$/;"	f	typeref:typename:int
driver	t/tree/include/acpi/acpi_bus.h	/^	struct acpi_driver *driver;$/;"	m	struct:acpi_device	typeref:struct:acpi_driver *
driver	t/tree/include/linux/i2c.h	/^	struct device_driver driver;$/;"	m	struct:i2c_driver	typeref:struct:device_driver
driver_data	t/tree/include/acpi/acpi_bus.h	/^	void *driver_data;$/;"	m	struct:acpi_device	typeref:typename:void *
driver_data	t/tree/include/linux/acpi.h	/^	kernel_ulong_t driver_data;$/;"	m	struct:acpi_probe_entry	typeref:typename:kernel_ulong_t
driver_flags	t/tree/include/linux/pm.h	/^	u32			driver_flags;$/;"	m	struct:dev_pm_info	typeref:typename:u32
driver_gpios	t/tree/include/acpi/acpi_bus.h	/^	const struct acpi_gpio_mapping *driver_gpios;$/;"	m	struct:acpi_device	typeref:typename:const struct acpi_gpio_mapping *
drv	t/tree/include/acpi/acpi_bus.h	/^	struct device_driver drv;$/;"	m	struct:acpi_driver	typeref:struct:device_driver
dseg	t/tree/include/uapi/linux/apm_bios.h	/^	__u16	dseg;$/;"	m	struct:apm_bios_info	typeref:typename:__u16
dseg_len	t/tree/include/uapi/linux/apm_bios.h	/^	__u16	dseg_len;$/;"	m	struct:apm_bios_info	typeref:typename:__u16
dsw_present	t/tree/include/acpi/acpi_bus.h	/^	u32 dsw_present:1;	\/* _DSW present? *\/$/;"	m	struct:acpi_device_power_flags	typeref:typename:u32:1
dummy_driver	t/tree/drivers/i2c/i2c-core-base.c	/^static struct i2c_driver dummy_driver = {$/;"	v	typeref:struct:i2c_driver	file:
dummy_id	t/tree/drivers/i2c/i2c-core-base.c	/^static const struct i2c_device_id dummy_id[] = {$/;"	v	typeref:typename:const struct i2c_device_id[]	file:
dummy_probe	t/tree/drivers/i2c/i2c-core-base.c	/^static int dummy_probe(struct i2c_client *client,$/;"	f	typeref:typename:int	file:
dummy_remove	t/tree/drivers/i2c/i2c-core-base.c	/^static int dummy_remove(struct i2c_client *client)$/;"	f	typeref:typename:int	file:
dup_xol_addr	t/tree/include/linux/uprobes.h	/^			unsigned long		dup_xol_addr;$/;"	m	struct:uprobe_task::__anon18223b0f010a::__anon18223b0f0308	typeref:typename:unsigned long
dup_xol_work	t/tree/include/linux/uprobes.h	/^			struct callback_head	dup_xol_work;$/;"	m	struct:uprobe_task::__anon18223b0f010a::__anon18223b0f0308	typeref:struct:callback_head
dynamic_status	t/tree/include/acpi/acpi_bus.h	/^	u32 dynamic_status:1;$/;"	m	struct:acpi_device_flags	typeref:typename:u32:1
early_acpi_boot_init	t/tree/include/linux/acpi.h	/^static inline int early_acpi_boot_init(void)$/;"	f	typeref:typename:int
early_init	t/tree/include/linux/pm.h	/^	bool			early_init:1;	\/* Owned by the PM core *\/$/;"	m	struct:dev_pm_info	typeref:typename:bool:1
early_memtest	t/tree/include/linux/memblock.h	/^static inline void early_memtest(phys_addr_t start, phys_addr_t end)$/;"	f	typeref:typename:void
egid	t/tree/include/linux/cred.h	/^	kgid_t		egid;		\/* effective GID of the task *\/$/;"	m	struct:cred	typeref:typename:kgid_t
ejectable	t/tree/include/acpi/acpi_bus.h	/^	u32 ejectable:1;$/;"	m	struct:acpi_device_flags	typeref:typename:u32:1
enable_count	t/tree/include/acpi/acpi_bus.h	/^	int enable_count;$/;"	m	struct:acpi_device_wakeup	typeref:typename:int
enabled	t/tree/include/acpi/acpi_bus.h	/^	bool enabled:1;$/;"	m	struct:acpi_hotplug_profile	typeref:typename:bool:1
enabled	t/tree/include/acpi/acpi_bus.h	/^	u32 enabled:1;$/;"	m	struct:acpi_device_status	typeref:typename:u32:1
enabled	t/tree/include/linux/rcu_segcblist.h	/^	u8 enabled;$/;"	m	struct:rcu_segcblist	typeref:typename:u8
end	t/tree/arch/x86/include/asm/orc_types.h	/^	u8		end;$/;"	m	struct:unwind_hint	typeref:typename:u8
end	t/tree/arch/x86/include/asm/orc_types.h	/^	unsigned	end:1;$/;"	m	struct:orc_entry	typeref:typename:unsigned:1
entries	t/tree/include/linux/of.h	/^	struct list_head entries;$/;"	m	struct:of_changeset	typeref:struct:list_head
entry	t/tree/include/acpi/acpi_bus.h	/^	struct proc_dir_entry *entry;$/;"	m	struct:acpi_device_dir	typeref:struct:proc_dir_entry *
entry	t/tree/include/linux/pm.h	/^	struct list_head	entry;$/;"	m	struct:dev_pm_info	typeref:struct:list_head
entry	t/tree/include/linux/pm_wakeup.h	/^	struct list_head	entry;$/;"	m	struct:wakeup_source	typeref:struct:list_head
enumeration_by_parent	t/tree/include/acpi/acpi_bus.h	/^	u32 enumeration_by_parent:1;$/;"	m	struct:acpi_device_flags	typeref:typename:u32:1
ep_take_care_of_epollwakeup	t/tree/include/uapi/linux/eventpoll.h	/^static inline void ep_take_care_of_epollwakeup(struct epoll_event *epev)$/;"	f	typeref:typename:void
epoll_event	t/tree/include/uapi/linux/eventpoll.h	/^struct epoll_event {$/;"	s
equal	t/tree/include/linux/acpi.h	/^	equal,$/;"	e	enum:acpi_predicate
euid	t/tree/include/linux/cred.h	/^	kuid_t		euid;		\/* effective UID of the task *\/$/;"	m	struct:cred	typeref:typename:kuid_t
event	t/tree/arch/x86/include/uapi/asm/ist.h	/^	__u32 event;$/;"	m	struct:ist_info	typeref:typename:__u32
event	t/tree/include/linux/pm.h	/^	int event;$/;"	m	struct:pm_message	typeref:typename:int
event_count	t/tree/include/linux/pm_wakeup.h	/^	unsigned long		event_count;$/;"	m	struct:wakeup_source	typeref:typename:unsigned long
events	t/tree/include/uapi/linux/eventpoll.h	/^	__poll_t events;$/;"	m	struct:epoll_event	typeref:typename:__poll_t
exit_tasks_rcu_finish	t/tree/include/linux/rcupdate.h	/^static inline void exit_tasks_rcu_finish(void) { }$/;"	f	typeref:typename:void
exit_tasks_rcu_start	t/tree/include/linux/rcupdate.h	/^static inline void exit_tasks_rcu_start(void) { }$/;"	f	typeref:typename:void
expire_count	t/tree/include/linux/pm_wakeup.h	/^	unsigned long		expire_count;$/;"	m	struct:wakeup_source	typeref:typename:unsigned long
expiry	t/tree/include/linux/key.h	/^		time64_t	expiry;		\/* time at which key expires (or 0) *\/$/;"	m	union:key::__anon38d188f8040a	typeref:typename:time64_t
explicit_get	t/tree/include/acpi/acpi_bus.h	/^	u32 explicit_get:1;	\/* _PSC present? *\/$/;"	m	struct:acpi_device_power_flags	typeref:typename:u32:1
explicit_set	t/tree/include/acpi/acpi_bus.h	/^		u8 explicit_set:1;	\/* _PSx present? *\/$/;"	m	struct:acpi_device_power_state::__anonbbafac820108	typeref:typename:u8:1
filter	t/tree/include/linux/uprobes.h	/^	bool (*filter)(struct uprobe_consumer *self,$/;"	m	struct:uprobe_consumer	typeref:typename:bool (*)(struct uprobe_consumer * self,enum uprobe_filter_ctx ctx,struct mm_struct * mm)
find_acpi_cpu_cache_topology	t/tree/include/linux/acpi.h	/^static inline int find_acpi_cpu_cache_topology(unsigned int cpu, int level)$/;"	f	typeref:typename:int
find_acpi_cpu_topology	t/tree/include/linux/acpi.h	/^static inline int find_acpi_cpu_topology(unsigned int cpu, int level)$/;"	f	typeref:typename:int
find_acpi_cpu_topology_hetero_id	t/tree/include/linux/acpi.h	/^static inline int find_acpi_cpu_topology_hetero_id(unsigned int cpu)$/;"	f	typeref:typename:int
find_acpi_cpu_topology_package	t/tree/include/linux/acpi.h	/^static inline int find_acpi_cpu_topology_package(unsigned int cpu)$/;"	f	typeref:typename:int
find_companion	t/tree/include/acpi/acpi_bus.h	/^	struct acpi_device * (*find_companion)(struct device *);$/;"	m	struct:acpi_bus_type	typeref:struct:acpi_device * (*)(struct device *)
fixup	t/tree/include/acpi/acpi_bus.h	/^	void (*fixup)(struct acpi_device *);$/;"	m	struct:acpi_hotplug_context	typeref:typename:void (*)(struct acpi_device *)
fixups	t/tree/arch/x86/include/asm/uprobes.h	/^			u8	fixups;$/;"	m	struct:arch_uprobe::__anon323fcd42020a::__anon323fcd420408	typeref:typename:u8
flags	t/tree/drivers/i2c/i2c-dev.c	/^	u16 flags;$/;"	m	struct:i2c_msg32	typeref:typename:u16	file:
flags	t/tree/include/acpi/acpi_bus.h	/^	struct acpi_device_flags flags;$/;"	m	struct:acpi_device	typeref:struct:acpi_device_flags
flags	t/tree/include/acpi/acpi_bus.h	/^	struct acpi_device_perf_flags flags;$/;"	m	struct:acpi_device_perf	typeref:struct:acpi_device_perf_flags
flags	t/tree/include/acpi/acpi_bus.h	/^	struct acpi_device_power_flags flags;$/;"	m	struct:acpi_device_power	typeref:struct:acpi_device_power_flags
flags	t/tree/include/acpi/acpi_bus.h	/^	struct acpi_device_wakeup_flags flags;$/;"	m	struct:acpi_device_wakeup	typeref:struct:acpi_device_wakeup_flags
flags	t/tree/include/acpi/acpi_bus.h	/^	unsigned int flags;$/;"	m	struct:acpi_driver	typeref:typename:unsigned int
flags	t/tree/include/acpi/acpi_bus.h	/^	} flags;$/;"	m	struct:acpi_device_perf_state	typeref:struct:acpi_device_perf_state::__anonbbafac820208
flags	t/tree/include/acpi/acpi_bus.h	/^	} flags;$/;"	m	struct:acpi_device_power_state	typeref:struct:acpi_device_power_state::__anonbbafac820108
flags	t/tree/include/linux/i2c.h	/^	u64 flags;$/;"	m	struct:i2c_adapter_quirks	typeref:typename:u64
flags	t/tree/include/linux/i2c.h	/^	unsigned short	flags;$/;"	m	struct:i2c_board_info	typeref:typename:unsigned short
flags	t/tree/include/linux/i2c.h	/^	unsigned short flags;		\/* div., see below		*\/$/;"	m	struct:i2c_client	typeref:typename:unsigned short
flags	t/tree/include/linux/key.h	/^	unsigned long		flags;		\/* status flags (change with bitops) *\/$/;"	m	struct:key	typeref:typename:unsigned long
flags	t/tree/include/linux/logic_pio.h	/^	unsigned long flags;$/;"	m	struct:logic_pio_hwaddr	typeref:typename:unsigned long
flags	t/tree/include/linux/memblock.h	/^	enum memblock_flags flags;$/;"	m	struct:memblock_region	typeref:enum:memblock_flags
flags	t/tree/include/uapi/linux/apm_bios.h	/^	__u16	flags;$/;"	m	struct:apm_bios_info	typeref:typename:__u16
flags	t/tree/include/uapi/linux/i2c.h	/^	__u16 flags;$/;"	m	struct:i2c_msg	typeref:typename:__u16
flags	t/tree/include/uapi/linux/rseq.h	/^	__u32 flags;$/;"	m	struct:rseq	typeref:typename:__u32
flags	t/tree/include/uapi/linux/rseq.h	/^	__u32 flags;$/;"	m	struct:rseq_cs	typeref:typename:__u32
foo	t/tree/issue102.c	/^void foo(void)$/;"	f	typeref:typename:void
foo	t/tree/issue131.h	/^void foo(struct class *klass)$/;"	f	typeref:typename:void
for_each_available_child_of_node	t/tree/include/linux/of.h	/^#define for_each_available_child_of_node(/;"	d
for_each_child_of_node	t/tree/include/linux/of.h	/^#define for_each_child_of_node(/;"	d
for_each_compatible_node	t/tree/include/linux/of.h	/^#define for_each_compatible_node(/;"	d
for_each_free_mem_pfn_range_in_zone	t/tree/include/linux/memblock.h	/^#define for_each_free_mem_pfn_range_in_zone(/;"	d
for_each_free_mem_pfn_range_in_zone_from	t/tree/include/linux/memblock.h	/^#define for_each_free_mem_pfn_range_in_zone_from(/;"	d
for_each_free_mem_range	t/tree/include/linux/memblock.h	/^#define for_each_free_mem_range(/;"	d
for_each_free_mem_range_reverse	t/tree/include/linux/memblock.h	/^#define for_each_free_mem_range_reverse(/;"	d
for_each_matching_node	t/tree/include/linux/of.h	/^#define for_each_matching_node(/;"	d
for_each_matching_node_and_match	t/tree/include/linux/of.h	/^#define for_each_matching_node_and_match(/;"	d
for_each_mem_pfn_range	t/tree/include/linux/memblock.h	/^#define for_each_mem_pfn_range(/;"	d
for_each_mem_range	t/tree/include/linux/memblock.h	/^#define for_each_mem_range(/;"	d
for_each_mem_range_rev	t/tree/include/linux/memblock.h	/^#define for_each_mem_range_rev(/;"	d
for_each_memblock	t/tree/include/linux/memblock.h	/^#define for_each_memblock(/;"	d
for_each_memblock_type	t/tree/include/linux/memblock.h	/^#define for_each_memblock_type(/;"	d
for_each_node_by_name	t/tree/include/linux/of.h	/^#define for_each_node_by_name(/;"	d
for_each_node_by_type	t/tree/include/linux/of.h	/^#define for_each_node_by_type(/;"	d
for_each_node_with_property	t/tree/include/linux/of.h	/^#define for_each_node_with_property(/;"	d
for_each_of_allnodes	t/tree/include/linux/of.h	/^#define for_each_of_allnodes(dn) for_each_of_allnodes_/;"	d
for_each_of_allnodes_from	t/tree/include/linux/of.h	/^#define for_each_of_allnodes_from(/;"	d
for_each_of_cpu_node	t/tree/include/linux/of.h	/^#define for_each_of_cpu_node(/;"	d
for_each_property_of_node	t/tree/include/linux/of.h	/^#define for_each_property_of_node(/;"	d
for_each_reserved_mem_region	t/tree/include/linux/memblock.h	/^#define for_each_reserved_mem_region(/;"	d
forbid_idle	t/tree/include/linux/apm_bios.h	/^	int			forbid_idle;$/;"	m	struct:apm_info	typeref:typename:int
force_speed	t/tree/drivers/i2c/i2c-core-acpi.c	/^	u32 force_speed;$/;"	m	struct:i2c_acpi_lookup	typeref:typename:u32	file:
free_object	t/tree/include/linux/assoc_array.h	/^	void (*free_object)(void *object);$/;"	m	struct:assoc_array_ops	typeref:typename:void (*)(void * object)
freeze	t/tree/include/linux/pm.h	/^	int (*freeze)(struct device *dev);$/;"	m	struct:dev_pm_ops	typeref:typename:int (*)(struct device * dev)
freeze_late	t/tree/include/linux/pm.h	/^	int (*freeze_late)(struct device *dev);$/;"	m	struct:dev_pm_ops	typeref:typename:int (*)(struct device * dev)
freeze_noirq	t/tree/include/linux/pm.h	/^	int (*freeze_noirq)(struct device *dev);$/;"	m	struct:dev_pm_ops	typeref:typename:int (*)(struct device * dev)
fsgid	t/tree/include/linux/cred.h	/^	kgid_t		fsgid;		\/* GID for VFS ops *\/$/;"	m	struct:cred	typeref:typename:kgid_t
fsuid	t/tree/include/linux/cred.h	/^	kuid_t		fsuid;		\/* UID for VFS ops *\/$/;"	m	struct:cred	typeref:typename:kuid_t
full_name	t/tree/include/linux/of.h	/^	const char *full_name;$/;"	m	struct:device_node	typeref:typename:const char *
func	t/tree/include/acpi/acpi_bus.h	/^	void (*func)(struct acpi_device_wakeup_context *context);$/;"	m	struct:acpi_device_wakeup_context	typeref:typename:void (*)(struct acpi_device_wakeup_context * context)
func	t/tree/include/linux/uprobes.h	/^	unsigned long		func;$/;"	m	struct:return_instance	typeref:typename:unsigned long
functional	t/tree/include/acpi/acpi_bus.h	/^	u32 functional:1;$/;"	m	struct:acpi_device_status	typeref:typename:u32:1
functionality	t/tree/drivers/i2c/i2c-stub.c	/^static unsigned long functionality = STUB_FUNC_DEFAULT;$/;"	v	typeref:typename:unsigned long	file:
functionality	t/tree/include/linux/i2c.h	/^	u32 (*functionality)(struct i2c_adapter *adap);$/;"	m	struct:i2c_algorithm	typeref:typename:u32 (*)(struct i2c_adapter * adap)
fwnode	t/tree/include/acpi/acpi_bus.h	/^	struct fwnode_handle fwnode;$/;"	m	struct:acpi_data_node	typeref:struct:fwnode_handle
fwnode	t/tree/include/acpi/acpi_bus.h	/^	struct fwnode_handle fwnode;$/;"	m	struct:acpi_device	typeref:struct:fwnode_handle
fwnode	t/tree/include/linux/i2c.h	/^	struct fwnode_handle *fwnode;$/;"	m	struct:i2c_board_info	typeref:struct:fwnode_handle *
fwnode	t/tree/include/linux/logic_pio.h	/^	struct fwnode_handle *fwnode;$/;"	m	struct:logic_pio_hwaddr	typeref:struct:fwnode_handle *
fwnode	t/tree/include/linux/of.h	/^	struct fwnode_handle fwnode;$/;"	m	struct:device_node	typeref:struct:fwnode_handle
get_bus_free	t/tree/include/linux/i2c.h	/^	int (*get_bus_free)(struct i2c_adapter *adap);$/;"	m	struct:i2c_bus_recovery_info	typeref:typename:int (*)(struct i2c_adapter * adap)
get_cred	t/tree/include/linux/cred.h	/^static inline const struct cred *get_cred(const struct cred *cred)$/;"	f	typeref:typename:const struct cred *
get_cred_rcu	t/tree/include/linux/cred.h	/^static inline const struct cred *get_cred_rcu(const struct cred *cred)$/;"	f	typeref:typename:const struct cred *
get_current_cred	t/tree/include/linux/cred.h	/^#define get_current_cred(/;"	d
get_current_groups	t/tree/include/linux/cred.h	/^#define get_current_groups(/;"	d
get_current_user	t/tree/include/linux/cred.h	/^#define get_current_user(/;"	d
get_free_i2c_dev	t/tree/drivers/i2c/i2c-dev.c	/^static struct i2c_dev *get_free_i2c_dev(struct i2c_adapter *adap)$/;"	f	typeref:struct:i2c_dev *	file:
get_group_info	t/tree/include/linux/cred.h	/^static inline struct group_info *get_group_info(struct group_info *gi)$/;"	f	typeref:struct:group_info *
get_key_chunk	t/tree/include/linux/assoc_array.h	/^	unsigned long (*get_key_chunk)(const void *index_key, int level);$/;"	m	struct:assoc_array_ops	typeref:typename:unsigned long (*)(const void * index_key,int level)
get_new_cred	t/tree/include/linux/cred.h	/^static inline struct cred *get_new_cred(struct cred *cred)$/;"	f	typeref:struct:cred *
get_nvram_var	t/tree/drivers/firmware/broadcom/bcm74xx_sprom.c	/^static int get_nvram_var(const char *prefix, const char *postfix,$/;"	f	typeref:typename:int	file:
get_object_key_chunk	t/tree/include/linux/assoc_array.h	/^	unsigned long (*get_object_key_chunk)(const void *object, int level);$/;"	m	struct:assoc_array_ops	typeref:typename:unsigned long (*)(const void * object,int level)
get_power_status_broken	t/tree/include/linux/apm_bios.h	/^	int			get_power_status_broken;$/;"	m	struct:apm_info	typeref:typename:int
get_power_status_swabinminutes	t/tree/include/linux/apm_bios.h	/^	int			get_power_status_swabinminutes;$/;"	m	struct:apm_info	typeref:typename:int
get_scl	t/tree/include/linux/i2c.h	/^	int (*get_scl)(struct i2c_adapter *adap);$/;"	m	struct:i2c_bus_recovery_info	typeref:typename:int (*)(struct i2c_adapter * adap)
get_scl_gpio_value	t/tree/drivers/i2c/i2c-core-base.c	/^static int get_scl_gpio_value(struct i2c_adapter *adap)$/;"	f	typeref:typename:int	file:
get_sda	t/tree/include/linux/i2c.h	/^	int (*get_sda)(struct i2c_adapter *adap);$/;"	m	struct:i2c_bus_recovery_info	typeref:typename:int (*)(struct i2c_adapter * adap)
get_sda_gpio_value	t/tree/drivers/i2c/i2c-core-base.c	/^static int get_sda_gpio_value(struct i2c_adapter *adap)$/;"	f	typeref:typename:int	file:
gid	t/tree/include/linux/cred.h	/^	kgid_t		gid;		\/* real GID of the task *\/$/;"	m	struct:cred	typeref:typename:kgid_t
gid	t/tree/include/linux/cred.h	/^	kgid_t		gid[0];$/;"	m	struct:group_info	typeref:typename:kgid_t[0]
gid	t/tree/include/linux/key.h	/^	kgid_t			gid;$/;"	m	struct:key	typeref:typename:kgid_t
gp_count	t/tree/include/linux/rcu_sync.h	/^	int			gp_count;$/;"	m	struct:rcu_sync	typeref:typename:int
gp_seq	t/tree/include/linux/rcu_segcblist.h	/^	unsigned long gp_seq[RCU_CBLIST_NSEGS];$/;"	m	struct:rcu_segcblist	typeref:typename:unsigned long[]
gp_state	t/tree/include/linux/rcu_sync.h	/^	int			gp_state;$/;"	m	struct:rcu_sync	typeref:typename:int
gp_wait	t/tree/include/linux/rcu_sync.h	/^	wait_queue_head_t	gp_wait;$/;"	m	struct:rcu_sync	typeref:typename:wait_queue_head_t
gpe_device	t/tree/include/acpi/acpi_bus.h	/^	acpi_handle gpe_device;$/;"	m	struct:acpi_device_wakeup	typeref:typename:acpi_handle
gpe_number	t/tree/include/acpi/acpi_bus.h	/^	u64 gpe_number;$/;"	m	struct:acpi_device_wakeup	typeref:typename:u64
graveyard_link	t/tree/include/linux/key.h	/^		struct list_head graveyard_link;$/;"	m	union:key::__anon38d188f8030a	typeref:struct:list_head
greater_than_or_equal	t/tree/include/linux/acpi.h	/^	greater_than_or_equal,$/;"	e	enum:acpi_predicate
group_info	t/tree/include/linux/cred.h	/^	struct group_info *group_info;	\/* supplementary groups for euid\/fsgid *\/$/;"	m	struct:cred	typeref:struct:group_info *
group_info	t/tree/include/linux/cred.h	/^struct group_info {$/;"	s
groups_free	t/tree/include/linux/cred.h	/^static inline void groups_free(struct group_info *group_info)$/;"	f	typeref:typename:void
groups_search	t/tree/include/linux/cred.h	/^static inline int groups_search(const struct group_info *group_info, kgid_t grp)$/;"	f	typeref:typename:int
grphi	t/tree/include/linux/srcutree.h	/^	int grphi;				\/* Biggest CPU for node. *\/$/;"	m	struct:srcu_node	typeref:typename:int
grplo	t/tree/include/linux/srcutree.h	/^	int grplo;				\/* Least CPU for node. *\/$/;"	m	struct:srcu_node	typeref:typename:int
grpmask	t/tree/include/linux/srcutree.h	/^	unsigned long grpmask;			\/* Mask for leaf srcu_node *\/$/;"	m	struct:srcu_data	typeref:typename:unsigned long
gsb_buffer	t/tree/drivers/i2c/i2c-core-acpi.c	/^struct gsb_buffer {$/;"	s	file:
guid	t/tree/include/acpi/acpi_bus.h	/^	const guid_t *guid;$/;"	m	struct:acpi_device_properties	typeref:typename:const guid_t *
handle	t/tree/include/acpi/acpi_bus.h	/^	acpi_handle handle;		\/* no handle for fixed hardware *\/$/;"	m	struct:acpi_device	typeref:typename:acpi_handle
handle	t/tree/include/acpi/acpi_bus.h	/^	acpi_handle handle;$/;"	m	struct:acpi_data_node	typeref:typename:acpi_handle
handler	t/tree/include/acpi/acpi_bus.h	/^	struct acpi_scan_handler *handler;$/;"	m	struct:acpi_device	typeref:struct:acpi_scan_handler *
handler	t/tree/include/linux/acpi.h	/^	acpi_tbl_entry_handler handler;$/;"	m	struct:acpi_subtable_proc	typeref:typename:acpi_tbl_entry_handler
handler	t/tree/include/linux/uprobes.h	/^	int (*handler)(struct uprobe_consumer *self, struct pt_regs *regs);$/;"	m	struct:uprobe_consumer	typeref:typename:int (*)(struct uprobe_consumer * self,struct pt_regs * regs)
handles	t/tree/include/acpi/acpi_bus.h	/^	acpi_handle handles[ACPI_MAX_HANDLES];$/;"	m	struct:acpi_handle_list	typeref:typename:acpi_handle[]
hardware_id	t/tree/include/acpi/acpi_bus.h	/^	u32 hardware_id:1;$/;"	m	struct:acpi_pnp_type	typeref:typename:u32:1
has_acpi_companion	t/tree/include/linux/acpi.h	/^static inline bool has_acpi_companion(struct device *dev)$/;"	f	typeref:typename:bool
hash	t/tree/include/linux/key.h	/^			unsigned long	hash;$/;"	m	struct:key::__anon38d188f8050a::__anon38d188f80608	typeref:typename:unsigned long
hash	t/tree/include/linux/key.h	/^	unsigned long		hash;			\/* Hash value *\/$/;"	m	struct:keyring_index_key	typeref:typename:unsigned long
hashdist	t/tree/include/linux/memblock.h	/^#define hashdist /;"	d
head	t/tree/include/linux/rcu_segcblist.h	/^	struct rcu_head *head;$/;"	m	struct:rcu_cblist	typeref:struct:rcu_head *
head	t/tree/include/linux/rcu_segcblist.h	/^	struct rcu_head *head;$/;"	m	struct:rcu_segcblist	typeref:struct:rcu_head *
hmat	t/tree/include/linux/acpi.h	/^	struct acpi_hmat_structure hmat;$/;"	m	union:acpi_subtable_headers	typeref:struct:acpi_hmat_structure
host_notify_domain	t/tree/include/linux/i2c.h	/^	struct irq_domain *host_notify_domain;$/;"	m	struct:i2c_adapter	typeref:struct:irq_domain *
hostdata	t/tree/include/linux/logic_pio.h	/^	void *hostdata;$/;"	m	struct:logic_pio_hwaddr	typeref:typename:void *
hotplug	t/tree/include/acpi/acpi_bus.h	/^	struct acpi_hotplug_profile hotplug;$/;"	m	struct:acpi_scan_handler	typeref:struct:acpi_hotplug_profile
hotplug_notify	t/tree/include/acpi/acpi_bus.h	/^	u32 hotplug_notify:1;$/;"	m	struct:acpi_device_flags	typeref:typename:u32:1
hp	t/tree/include/acpi/acpi_bus.h	/^	struct acpi_hotplug_context *hp;$/;"	m	struct:acpi_device	typeref:struct:acpi_hotplug_context *
hw_start	t/tree/include/linux/logic_pio.h	/^	resource_size_t hw_start;$/;"	m	struct:logic_pio_hwaddr	typeref:typename:resource_size_t
i186c_fn1	t/tree/issue186-counterexamples.c	/^#define i186c_fn1	/;"	d	file:
i186c_fn1	t/tree/issue186-counterexamples.c	/^static int i186c_fn1(struct platform_device *pdev)$/;"	f	typeref:typename:int	file:
i186c_fn2	t/tree/issue186-counterexamples.c	/^#define i186c_fn2	/;"	d	file:
i186c_fn2	t/tree/issue186-counterexamples.c	/^static int i186c_fn2(struct platform_device *pdev)$/;"	f	typeref:typename:int	file:
i2c_8bit_addr_from_msg	t/tree/include/linux/i2c.h	/^static inline u8 i2c_8bit_addr_from_msg(const struct i2c_msg *msg)$/;"	f	typeref:typename:u8
i2c_acpi_add_device	t/tree/drivers/i2c/i2c-core-acpi.c	/^static acpi_status i2c_acpi_add_device(acpi_handle handle, u32 level,$/;"	f	typeref:typename:acpi_status	file:
i2c_acpi_add_resource	t/tree/drivers/i2c/i2c-core-acpi.c	/^static int i2c_acpi_add_resource(struct acpi_resource *ares, void *data)$/;"	f	typeref:typename:int	file:
i2c_acpi_do_lookup	t/tree/drivers/i2c/i2c-core-acpi.c	/^static int i2c_acpi_do_lookup(struct acpi_device *adev,$/;"	f	typeref:typename:int	file:
i2c_acpi_fill_info	t/tree/drivers/i2c/i2c-core-acpi.c	/^static int i2c_acpi_fill_info(struct acpi_resource *ares, void *data)$/;"	f	typeref:typename:int	file:
i2c_acpi_find_adapter_by_handle	t/tree/drivers/i2c/i2c-core-acpi.c	/^struct i2c_adapter *i2c_acpi_find_adapter_by_handle(acpi_handle handle)$/;"	f	typeref:struct:i2c_adapter *
i2c_acpi_find_adapter_by_handle	t/tree/include/linux/i2c.h	/^static inline struct i2c_adapter *i2c_acpi_find_adapter_by_handle(acpi_handle handle)$/;"	f	typeref:struct:i2c_adapter *
i2c_acpi_find_bus_speed	t/tree/drivers/i2c/i2c-core-acpi.c	/^u32 i2c_acpi_find_bus_speed(struct device *dev)$/;"	f	typeref:typename:u32
i2c_acpi_find_bus_speed	t/tree/include/linux/i2c.h	/^static inline u32 i2c_acpi_find_bus_speed(struct device *dev)$/;"	f	typeref:typename:u32
i2c_acpi_find_client_by_adev	t/tree/drivers/i2c/i2c-core-acpi.c	/^static struct i2c_client *i2c_acpi_find_client_by_adev(struct acpi_device *adev)$/;"	f	typeref:struct:i2c_client *	file:
i2c_acpi_find_match_adapter	t/tree/drivers/i2c/i2c-core-acpi.c	/^static int i2c_acpi_find_match_adapter(struct device *dev, const void *data)$/;"	f	typeref:typename:int	file:
i2c_acpi_force_400khz_device_ids	t/tree/drivers/i2c/i2c-core-acpi.c	/^static const struct acpi_device_id i2c_acpi_force_400khz_device_ids[] = {$/;"	v	typeref:typename:const struct acpi_device_id[]	file:
i2c_acpi_get_i2c_resource	t/tree/drivers/i2c/i2c-core-acpi.c	/^bool i2c_acpi_get_i2c_resource(struct acpi_resource *ares,$/;"	f	typeref:typename:bool
i2c_acpi_get_i2c_resource	t/tree/include/linux/i2c.h	/^static inline bool i2c_acpi_get_i2c_resource(struct acpi_resource *ares,$/;"	f	typeref:typename:bool
i2c_acpi_get_info	t/tree/drivers/i2c/i2c-core-acpi.c	/^static int i2c_acpi_get_info(struct acpi_device *adev,$/;"	f	typeref:typename:int	file:
i2c_acpi_get_irq	t/tree/drivers/i2c/i2c-core-acpi.c	/^int i2c_acpi_get_irq(struct i2c_client *client)$/;"	f	typeref:typename:int
i2c_acpi_get_irq	t/tree/drivers/i2c/i2c-core.h	/^static inline int i2c_acpi_get_irq(struct i2c_client *client)$/;"	f	typeref:typename:int
i2c_acpi_handler_data	t/tree/drivers/i2c/i2c-core-acpi.c	/^struct i2c_acpi_handler_data {$/;"	s	file:
i2c_acpi_ignored_device_ids	t/tree/drivers/i2c/i2c-core-acpi.c	/^static const struct acpi_device_id i2c_acpi_ignored_device_ids[] = {$/;"	v	typeref:typename:const struct acpi_device_id[]	file:
i2c_acpi_install_space_handler	t/tree/drivers/i2c/i2c-core-acpi.c	/^int i2c_acpi_install_space_handler(struct i2c_adapter *adapter)$/;"	f	typeref:typename:int
i2c_acpi_install_space_handler	t/tree/drivers/i2c/i2c-core.h	/^static inline int i2c_acpi_install_space_handler(struct i2c_adapter *adapter) { return 0; }$/;"	f	typeref:typename:int
i2c_acpi_lookup	t/tree/drivers/i2c/i2c-core-acpi.c	/^struct i2c_acpi_lookup {$/;"	s	file:
i2c_acpi_lookup_speed	t/tree/drivers/i2c/i2c-core-acpi.c	/^static acpi_status i2c_acpi_lookup_speed(acpi_handle handle, u32 level,$/;"	f	typeref:typename:acpi_status	file:
i2c_acpi_match_device	t/tree/drivers/i2c/i2c-core-acpi.c	/^i2c_acpi_match_device(const struct acpi_device_id *matches,$/;"	f	typeref:typename:const struct acpi_device_id *
i2c_acpi_match_device	t/tree/drivers/i2c/i2c-core.h	/^i2c_acpi_match_device(const struct acpi_device_id *matches,$/;"	f	typeref:typename:const struct acpi_device_id *
i2c_acpi_new_device	t/tree/drivers/i2c/i2c-core-acpi.c	/^struct i2c_client *i2c_acpi_new_device(struct device *dev, int index,$/;"	f	typeref:struct:i2c_client *
i2c_acpi_new_device	t/tree/include/linux/i2c.h	/^static inline struct i2c_client *i2c_acpi_new_device(struct device *dev,$/;"	f	typeref:struct:i2c_client *
i2c_acpi_notifier	t/tree/drivers/i2c/i2c-core-acpi.c	/^struct notifier_block i2c_acpi_notifier = {$/;"	v	typeref:struct:notifier_block
i2c_acpi_notify	t/tree/drivers/i2c/i2c-core-acpi.c	/^static int i2c_acpi_notify(struct notifier_block *nb, unsigned long value,$/;"	f	typeref:typename:int	file:
i2c_acpi_register_device	t/tree/drivers/i2c/i2c-core-acpi.c	/^static void i2c_acpi_register_device(struct i2c_adapter *adapter,$/;"	f	typeref:typename:void	file:
i2c_acpi_register_devices	t/tree/drivers/i2c/i2c-core-acpi.c	/^void i2c_acpi_register_devices(struct i2c_adapter *adap)$/;"	f	typeref:typename:void
i2c_acpi_register_devices	t/tree/drivers/i2c/i2c-core.h	/^static inline void i2c_acpi_register_devices(struct i2c_adapter *adap) { }$/;"	f	typeref:typename:void
i2c_acpi_remove_space_handler	t/tree/drivers/i2c/i2c-core-acpi.c	/^void i2c_acpi_remove_space_handler(struct i2c_adapter *adapter)$/;"	f	typeref:typename:void
i2c_acpi_remove_space_handler	t/tree/drivers/i2c/i2c-core.h	/^static inline void i2c_acpi_remove_space_handler(struct i2c_adapter *adapter) { }$/;"	f	typeref:typename:void
i2c_acpi_space_handler	t/tree/drivers/i2c/i2c-core-acpi.c	/^i2c_acpi_space_handler(u32 function, acpi_physical_address command,$/;"	f	typeref:typename:acpi_status	file:
i2c_adapter	t/tree/include/linux/i2c.h	/^struct i2c_adapter {$/;"	s
i2c_adapter_attrs	t/tree/drivers/i2c/i2c-core-base.c	/^static struct attribute *i2c_adapter_attrs[] = {$/;"	v	typeref:struct:attribute * []	file:
i2c_adapter_compat_class	t/tree/drivers/i2c/i2c-core-base.c	/^static struct class_compat *i2c_adapter_compat_class;$/;"	v	typeref:struct:class_compat *	file:
i2c_adapter_depth	t/tree/drivers/i2c/i2c-core-base.c	/^unsigned int i2c_adapter_depth(struct i2c_adapter *adapter)$/;"	f	typeref:typename:unsigned int
i2c_adapter_dev_release	t/tree/drivers/i2c/i2c-core-base.c	/^static void i2c_adapter_dev_release(struct device *dev)$/;"	f	typeref:typename:void	file:
i2c_adapter_id	t/tree/include/linux/i2c.h	/^static inline int i2c_adapter_id(struct i2c_adapter *adap)$/;"	f	typeref:typename:int
i2c_adapter_lock_bus	t/tree/drivers/i2c/i2c-core-base.c	/^static void i2c_adapter_lock_bus(struct i2c_adapter *adapter,$/;"	f	typeref:typename:void	file:
i2c_adapter_lock_ops	t/tree/drivers/i2c/i2c-core-base.c	/^static const struct i2c_lock_operations i2c_adapter_lock_ops = {$/;"	v	typeref:typename:const struct i2c_lock_operations	file:
i2c_adapter_quirks	t/tree/include/linux/i2c.h	/^struct i2c_adapter_quirks {$/;"	s
i2c_adapter_trylock_bus	t/tree/drivers/i2c/i2c-core-base.c	/^static int i2c_adapter_trylock_bus(struct i2c_adapter *adapter,$/;"	f	typeref:typename:int	file:
i2c_adapter_type	t/tree/drivers/i2c/i2c-core-base.c	/^struct device_type i2c_adapter_type = {$/;"	v	typeref:struct:device_type
i2c_adapter_unlock_bus	t/tree/drivers/i2c/i2c-core-base.c	/^static void i2c_adapter_unlock_bus(struct i2c_adapter *adapter,$/;"	f	typeref:typename:void	file:
i2c_add_adapter	t/tree/drivers/i2c/i2c-core-base.c	/^int i2c_add_adapter(struct i2c_adapter *adapter)$/;"	f	typeref:typename:int
i2c_add_driver	t/tree/include/linux/i2c.h	/^#define i2c_add_driver(/;"	d
i2c_add_numbered_adapter	t/tree/drivers/i2c/i2c-core-base.c	/^int i2c_add_numbered_adapter(struct i2c_adapter *adap)$/;"	f	typeref:typename:int
i2c_alert_protocol	t/tree/include/linux/i2c.h	/^enum i2c_alert_protocol {$/;"	g
i2c_algorithm	t/tree/include/linux/i2c.h	/^struct i2c_algorithm {$/;"	s
i2c_attrs	t/tree/drivers/i2c/i2c-dev.c	/^static struct attribute *i2c_attrs[] = {$/;"	v	typeref:struct:attribute * []	file:
i2c_board_info	t/tree/include/linux/i2c.h	/^struct i2c_board_info {$/;"	s
i2c_bus_recovery_info	t/tree/include/linux/i2c.h	/^struct i2c_bus_recovery_info {$/;"	s
i2c_bus_type	t/tree/drivers/i2c/i2c-core-base.c	/^struct bus_type i2c_bus_type = {$/;"	v	typeref:struct:bus_type
i2c_check_7bit_addr_validity_strict	t/tree/drivers/i2c/i2c-core-base.c	/^int i2c_check_7bit_addr_validity_strict(unsigned short addr)$/;"	f	typeref:typename:int
i2c_check_addr_busy	t/tree/drivers/i2c/i2c-core-base.c	/^static int i2c_check_addr_busy(struct i2c_adapter *adapter, int addr)$/;"	f	typeref:typename:int	file:
i2c_check_addr_validity	t/tree/drivers/i2c/i2c-core-base.c	/^static int i2c_check_addr_validity(unsigned int addr, unsigned short flags)$/;"	f	typeref:typename:int	file:
i2c_check_for_quirks	t/tree/drivers/i2c/i2c-core-base.c	/^static int i2c_check_for_quirks(struct i2c_adapter *adap, struct i2c_msg *msgs, int num)$/;"	f	typeref:typename:int	file:
i2c_check_functionality	t/tree/include/linux/i2c.h	/^static inline int i2c_check_functionality(struct i2c_adapter *adap, u32 func)$/;"	f	typeref:typename:int
i2c_check_mux_children	t/tree/drivers/i2c/i2c-core-base.c	/^static int i2c_check_mux_children(struct device *dev, void *addrp)$/;"	f	typeref:typename:int	file:
i2c_check_mux_parents	t/tree/drivers/i2c/i2c-core-base.c	/^static int i2c_check_mux_parents(struct i2c_adapter *adapter, int addr)$/;"	f	typeref:typename:int	file:
i2c_check_quirks	t/tree/include/linux/i2c.h	/^static inline bool i2c_check_quirks(struct i2c_adapter *adap, u64 quirks)$/;"	f	typeref:typename:bool
i2c_client	t/tree/include/linux/i2c.h	/^struct i2c_client {$/;"	s
i2c_client_dev_release	t/tree/drivers/i2c/i2c-core-base.c	/^static void i2c_client_dev_release(struct device *dev)$/;"	f	typeref:typename:void	file:
i2c_client_type	t/tree/drivers/i2c/i2c-core-base.c	/^struct device_type i2c_client_type = {$/;"	v	typeref:struct:device_type
i2c_clients_command	t/tree/drivers/i2c/i2c-core-base.c	/^void i2c_clients_command(struct i2c_adapter *adap, unsigned int cmd, void *arg)$/;"	f	typeref:typename:void
i2c_cmd	t/tree/drivers/i2c/i2c-core-base.c	/^static int i2c_cmd(struct device *dev, void *_arg)$/;"	f	typeref:typename:int	file:
i2c_cmd_arg	t/tree/drivers/i2c/i2c-core-base.c	/^struct i2c_cmd_arg {$/;"	s	file:
i2c_default_probe	t/tree/drivers/i2c/i2c-core-base.c	/^static int i2c_default_probe(struct i2c_adapter *adap, unsigned short addr)$/;"	f	typeref:typename:int	file:
i2c_del_adapter	t/tree/drivers/i2c/i2c-core-base.c	/^void i2c_del_adapter(struct i2c_adapter *adap)$/;"	f	typeref:typename:void
i2c_del_driver	t/tree/drivers/i2c/i2c-core-base.c	/^void i2c_del_driver(struct i2c_driver *driver)$/;"	f	typeref:typename:void
i2c_detect	t/tree/drivers/i2c/i2c-core-base.c	/^static int i2c_detect(struct i2c_adapter *adapter, struct i2c_driver *driver)$/;"	f	typeref:typename:int	file:
i2c_detect_address	t/tree/drivers/i2c/i2c-core-base.c	/^static int i2c_detect_address(struct i2c_client *temp_client,$/;"	f	typeref:typename:int	file:
i2c_detect_slave_mode	t/tree/drivers/i2c/i2c-core-slave.c	/^bool i2c_detect_slave_mode(struct device *dev)$/;"	f	typeref:typename:bool
i2c_detect_slave_mode	t/tree/include/linux/i2c.h	/^static inline bool i2c_detect_slave_mode(struct device *dev) { return false; }$/;"	f	typeref:typename:bool
i2c_dev	t/tree/drivers/i2c/i2c-dev.c	/^struct i2c_dev {$/;"	s	file:
i2c_dev_attrs	t/tree/drivers/i2c/i2c-core-base.c	/^static struct attribute *i2c_dev_attrs[] = {$/;"	v	typeref:struct:attribute * []	file:
i2c_dev_class	t/tree/drivers/i2c/i2c-dev.c	/^static struct class *i2c_dev_class;$/;"	v	typeref:struct:class *	file:
i2c_dev_exit	t/tree/drivers/i2c/i2c-dev.c	/^static void __exit i2c_dev_exit(void)$/;"	f	typeref:typename:void __exit	file:
i2c_dev_get_by_minor	t/tree/drivers/i2c/i2c-dev.c	/^static struct i2c_dev *i2c_dev_get_by_minor(unsigned index)$/;"	f	typeref:struct:i2c_dev *	file:
i2c_dev_init	t/tree/drivers/i2c/i2c-dev.c	/^static int __init i2c_dev_init(void)$/;"	f	typeref:typename:int __init	file:
i2c_dev_irq_from_resources	t/tree/drivers/i2c/i2c-core-base.c	/^int i2c_dev_irq_from_resources(const struct resource *resources,$/;"	f	typeref:typename:int
i2c_dev_set_name	t/tree/drivers/i2c/i2c-core-base.c	/^static void i2c_dev_set_name(struct i2c_adapter *adap,$/;"	f	typeref:typename:void	file:
i2c_device_identity	t/tree/include/linux/i2c.h	/^struct i2c_device_identity {$/;"	s
i2c_device_match	t/tree/drivers/i2c/i2c-core-base.c	/^static int i2c_device_match(struct device *dev, struct device_driver *drv)$/;"	f	typeref:typename:int	file:
i2c_device_probe	t/tree/drivers/i2c/i2c-core-base.c	/^static int i2c_device_probe(struct device *dev)$/;"	f	typeref:typename:int	file:
i2c_device_remove	t/tree/drivers/i2c/i2c-core-base.c	/^static int i2c_device_remove(struct device *dev)$/;"	f	typeref:typename:int	file:
i2c_device_shutdown	t/tree/drivers/i2c/i2c-core-base.c	/^static void i2c_device_shutdown(struct device *dev)$/;"	f	typeref:typename:void	file:
i2c_device_uevent	t/tree/drivers/i2c/i2c-core-base.c	/^static int i2c_device_uevent(struct device *dev, struct kobj_uevent_env *env)$/;"	f	typeref:typename:int	file:
i2c_devinfo	t/tree/drivers/i2c/i2c-core.h	/^struct i2c_devinfo {$/;"	s
i2c_do_add_adapter	t/tree/drivers/i2c/i2c-core-base.c	/^static int i2c_do_add_adapter(struct i2c_driver *driver,$/;"	f	typeref:typename:int	file:
i2c_do_del_adapter	t/tree/drivers/i2c/i2c-core-base.c	/^static void i2c_do_del_adapter(struct i2c_driver *driver,$/;"	f	typeref:typename:void	file:
i2c_driver	t/tree/include/linux/i2c.h	/^struct i2c_driver {$/;"	s
i2c_dummy_devres	t/tree/drivers/i2c/i2c-core-base.c	/^struct i2c_dummy_devres {$/;"	s	file:
i2c_encode_flags_to_addr	t/tree/drivers/i2c/i2c-core-base.c	/^static unsigned short i2c_encode_flags_to_addr(struct i2c_client *client)$/;"	f	typeref:typename:unsigned short	file:
i2c_exit	t/tree/drivers/i2c/i2c-core-base.c	/^static void __exit i2c_exit(void)$/;"	f	typeref:typename:void __exit	file:
i2c_for_each_dev	t/tree/drivers/i2c/i2c-core-base.c	/^int i2c_for_each_dev(void *data, int (*fn)(struct device *dev, void *data))$/;"	f	typeref:typename:int
i2c_generic_bus_free	t/tree/drivers/i2c/i2c-core-base.c	/^static int i2c_generic_bus_free(struct i2c_adapter *adap)$/;"	f	typeref:typename:int	file:
i2c_generic_scl_recovery	t/tree/drivers/i2c/i2c-core-base.c	/^int i2c_generic_scl_recovery(struct i2c_adapter *adap)$/;"	f	typeref:typename:int
i2c_get_adapdata	t/tree/include/linux/i2c.h	/^static inline void *i2c_get_adapdata(const struct i2c_adapter *adap)$/;"	f	typeref:typename:void *
i2c_get_adapter	t/tree/drivers/i2c/i2c-core-base.c	/^struct i2c_adapter *i2c_get_adapter(int nr)$/;"	f	typeref:struct:i2c_adapter *
i2c_get_clientdata	t/tree/include/linux/i2c.h	/^static inline void *i2c_get_clientdata(const struct i2c_client *dev)$/;"	f	typeref:typename:void *
i2c_get_device_id	t/tree/drivers/i2c/i2c-core-base.c	/^int i2c_get_device_id(const struct i2c_client *client,$/;"	f	typeref:typename:int
i2c_get_dma_safe_msg_buf	t/tree/drivers/i2c/i2c-core-base.c	/^u8 *i2c_get_dma_safe_msg_buf(struct i2c_msg *msg, unsigned int threshold)$/;"	f	typeref:typename:u8 *
i2c_get_functionality	t/tree/include/linux/i2c.h	/^static inline u32 i2c_get_functionality(struct i2c_adapter *adap)$/;"	f	typeref:typename:u32
i2c_handle_smbus_alert	t/tree/drivers/i2c/i2c-smbus.c	/^int i2c_handle_smbus_alert(struct i2c_client *ara)$/;"	f	typeref:typename:int
i2c_handle_smbus_host_notify	t/tree/drivers/i2c/i2c-core-base.c	/^int i2c_handle_smbus_host_notify(struct i2c_adapter *adap, unsigned short addr)$/;"	f	typeref:typename:int
i2c_host_notify_irq_map	t/tree/drivers/i2c/i2c-core-base.c	/^static int i2c_host_notify_irq_map(struct irq_domain *h,$/;"	f	typeref:typename:int	file:
i2c_host_notify_irq_ops	t/tree/drivers/i2c/i2c-core-base.c	/^static const struct irq_domain_ops i2c_host_notify_irq_ops = {$/;"	v	typeref:typename:const struct irq_domain_ops	file:
i2c_host_notify_irq_teardown	t/tree/drivers/i2c/i2c-core-base.c	/^static void i2c_host_notify_irq_teardown(struct i2c_adapter *adap)$/;"	f	typeref:typename:void	file:
i2c_in_atomic_xfer_mode	t/tree/drivers/i2c/i2c-core.h	/^static inline bool i2c_in_atomic_xfer_mode(void)$/;"	f	typeref:typename:bool
i2c_init	t/tree/drivers/i2c/i2c-core-base.c	/^static int __init i2c_init(void)$/;"	f	typeref:typename:int __init	file:
i2c_init_recovery	t/tree/drivers/i2c/i2c-core-base.c	/^static void i2c_init_recovery(struct i2c_adapter *adap)$/;"	f	typeref:typename:void	file:
i2c_lock_bus	t/tree/include/linux/i2c.h	/^i2c_lock_bus(struct i2c_adapter *adapter, unsigned int flags)$/;"	f	typeref:typename:void
i2c_lock_operations	t/tree/include/linux/i2c.h	/^struct i2c_lock_operations {$/;"	s
i2c_mark_adapter_resumed	t/tree/include/linux/i2c.h	/^static inline void i2c_mark_adapter_resumed(struct i2c_adapter *adap)$/;"	f	typeref:typename:void
i2c_mark_adapter_suspended	t/tree/include/linux/i2c.h	/^static inline void i2c_mark_adapter_suspended(struct i2c_adapter *adap)$/;"	f	typeref:typename:void
i2c_master_recv	t/tree/include/linux/i2c.h	/^static inline int i2c_master_recv(const struct i2c_client *client,$/;"	f	typeref:typename:int
i2c_master_recv_dmasafe	t/tree/include/linux/i2c.h	/^static inline int i2c_master_recv_dmasafe(const struct i2c_client *client,$/;"	f	typeref:typename:int
i2c_master_send	t/tree/include/linux/i2c.h	/^static inline int i2c_master_send(const struct i2c_client *client,$/;"	f	typeref:typename:int
i2c_master_send_dmasafe	t/tree/include/linux/i2c.h	/^static inline int i2c_master_send_dmasafe(const struct i2c_client *client,$/;"	f	typeref:typename:int
i2c_match_id	t/tree/drivers/i2c/i2c-core-base.c	/^const struct i2c_device_id *i2c_match_id(const struct i2c_device_id *id,$/;"	f	typeref:typename:const struct i2c_device_id *
i2c_msg	t/tree/include/uapi/linux/i2c.h	/^struct i2c_msg {$/;"	s
i2c_msg32	t/tree/drivers/i2c/i2c-dev.c	/^struct i2c_msg32 {$/;"	s	file:
i2c_new_ancillary_device	t/tree/drivers/i2c/i2c-core-base.c	/^struct i2c_client *i2c_new_ancillary_device(struct i2c_client *client,$/;"	f	typeref:struct:i2c_client *
i2c_new_client_device	t/tree/drivers/i2c/i2c-core-base.c	/^i2c_new_client_device(struct i2c_adapter *adap, struct i2c_board_info const *info)$/;"	f	typeref:struct:i2c_client *
i2c_new_device	t/tree/drivers/i2c/i2c-core-base.c	/^i2c_new_device(struct i2c_adapter *adap, struct i2c_board_info const *info)$/;"	f	typeref:struct:i2c_client *
i2c_new_dummy	t/tree/drivers/i2c/i2c-core-base.c	/^struct i2c_client *i2c_new_dummy(struct i2c_adapter *adapter, u16 address)$/;"	f	typeref:struct:i2c_client *
i2c_new_dummy_device	t/tree/drivers/i2c/i2c-core-base.c	/^struct i2c_client *i2c_new_dummy_device(struct i2c_adapter *adapter, u16 address)$/;"	f	typeref:struct:i2c_client *
i2c_new_probed_device	t/tree/drivers/i2c/i2c-core-base.c	/^i2c_new_probed_device(struct i2c_adapter *adap,$/;"	f	typeref:struct:i2c_client *
i2c_of_match_device	t/tree/drivers/i2c/i2c-core-of.c	/^*i2c_of_match_device(const struct of_device_id *matches,$/;"	f	typeref:typename:const struct of_device_id *
i2c_of_match_device	t/tree/include/linux/i2c.h	/^*i2c_of_match_device(const struct of_device_id *matches,$/;"	f	typeref:typename:const struct of_device_id *
i2c_of_match_device_sysfs	t/tree/drivers/i2c/i2c-core-of.c	/^i2c_of_match_device_sysfs(const struct of_device_id *matches,$/;"	f	typeref:typename:const struct of_device_id *	file:
i2c_of_notifier	t/tree/drivers/i2c/i2c-core-of.c	/^struct notifier_block i2c_of_notifier = {$/;"	v	typeref:struct:notifier_block
i2c_parent_is_i2c_adapter	t/tree/include/linux/i2c.h	/^i2c_parent_is_i2c_adapter(const struct i2c_adapter *adapter)$/;"	f	typeref:struct:i2c_adapter *
i2c_parse_fw_timings	t/tree/drivers/i2c/i2c-core-base.c	/^void i2c_parse_fw_timings(struct device *dev, struct i2c_timings *t, bool use_defaults)$/;"	f	typeref:typename:void
i2c_probe_func_quick_read	t/tree/drivers/i2c/i2c-core-base.c	/^int i2c_probe_func_quick_read(struct i2c_adapter *adap, unsigned short addr)$/;"	f	typeref:typename:int
i2c_put_adapter	t/tree/drivers/i2c/i2c-core-base.c	/^void i2c_put_adapter(struct i2c_adapter *adap)$/;"	f	typeref:typename:void
i2c_put_dma_safe_msg_buf	t/tree/drivers/i2c/i2c-core-base.c	/^void i2c_put_dma_safe_msg_buf(u8 *buf, struct i2c_msg *msg, bool xferred)$/;"	f	typeref:typename:void
i2c_quirk_error	t/tree/drivers/i2c/i2c-core-base.c	/^static int i2c_quirk_error(struct i2c_adapter *adap, struct i2c_msg *msg, char *err_msg)$/;"	f	typeref:typename:int	file:
i2c_quirk_exceeded	t/tree/drivers/i2c/i2c-core-base.c	/^#define i2c_quirk_exceeded(/;"	d	file:
i2c_rdwr_ioctl_data32	t/tree/drivers/i2c/i2c-dev.c	/^struct i2c_rdwr_ioctl_data32 {$/;"	s	file:
i2c_recover_bus	t/tree/drivers/i2c/i2c-core-base.c	/^int i2c_recover_bus(struct i2c_adapter *adap)$/;"	f	typeref:typename:int
i2c_register_adapter	t/tree/drivers/i2c/i2c-core-base.c	/^static int i2c_register_adapter(struct i2c_adapter *adap)$/;"	f	typeref:typename:int	file:
i2c_register_board_info	t/tree/drivers/i2c/i2c-boardinfo.c	/^int i2c_register_board_info(int busnum, struct i2c_board_info const *info, unsigned len)$/;"	f	typeref:typename:int
i2c_register_board_info	t/tree/include/linux/i2c.h	/^i2c_register_board_info(int busnum, struct i2c_board_info const *info,$/;"	f	typeref:typename:int
i2c_register_driver	t/tree/drivers/i2c/i2c-core-base.c	/^int i2c_register_driver(struct module *owner, struct i2c_driver *driver)$/;"	f	typeref:typename:int
i2c_release_client	t/tree/drivers/i2c/i2c-core-base.c	/^void i2c_release_client(struct i2c_client *client)$/;"	f	typeref:typename:void
i2c_scan_static_board_info	t/tree/drivers/i2c/i2c-core-base.c	/^static void i2c_scan_static_board_info(struct i2c_adapter *adapter)$/;"	f	typeref:typename:void	file:
i2c_set_adapdata	t/tree/include/linux/i2c.h	/^static inline void i2c_set_adapdata(struct i2c_adapter *adap, void *data)$/;"	f	typeref:typename:void
i2c_set_clientdata	t/tree/include/linux/i2c.h	/^static inline void i2c_set_clientdata(struct i2c_client *dev, void *data)$/;"	f	typeref:typename:void
i2c_setup_host_notify_irq_domain	t/tree/drivers/i2c/i2c-core-base.c	/^static int i2c_setup_host_notify_irq_domain(struct i2c_adapter *adap)$/;"	f	typeref:typename:int	file:
i2c_setup_smbus_alert	t/tree/drivers/i2c/i2c-core-smbus.c	/^struct i2c_client *i2c_setup_smbus_alert(struct i2c_adapter *adapter,$/;"	f	typeref:struct:i2c_client *
i2c_slave_cb_t	t/tree/include/linux/i2c.h	/^typedef int (*i2c_slave_cb_t)(struct i2c_client *client,$/;"	t	typeref:typename:int (*)(struct i2c_client * client,enum i2c_slave_event event,u8 * val)
i2c_slave_event	t/tree/include/linux/i2c.h	/^enum i2c_slave_event {$/;"	g
i2c_slave_event	t/tree/include/linux/i2c.h	/^static inline int i2c_slave_event(struct i2c_client *client,$/;"	f	typeref:typename:int
i2c_slave_register	t/tree/drivers/i2c/i2c-core-slave.c	/^int i2c_slave_register(struct i2c_client *client, i2c_slave_cb_t slave_cb)$/;"	f	typeref:typename:int
i2c_slave_unregister	t/tree/drivers/i2c/i2c-core-slave.c	/^int i2c_slave_unregister(struct i2c_client *client)$/;"	f	typeref:typename:int
i2c_smbus_add_pec	t/tree/drivers/i2c/i2c-core-smbus.c	/^static inline void i2c_smbus_add_pec(struct i2c_msg *msg)$/;"	f	typeref:typename:void	file:
i2c_smbus_alert	t/tree/drivers/i2c/i2c-smbus.c	/^struct i2c_smbus_alert {$/;"	s	file:
i2c_smbus_alert_setup	t/tree/include/linux/i2c-smbus.h	/^struct i2c_smbus_alert_setup {$/;"	s
i2c_smbus_check_pec	t/tree/drivers/i2c/i2c-core-smbus.c	/^static int i2c_smbus_check_pec(u8 cpec, struct i2c_msg *msg)$/;"	f	typeref:typename:int	file:
i2c_smbus_data	t/tree/include/uapi/linux/i2c.h	/^union i2c_smbus_data {$/;"	u
i2c_smbus_host_notify_to_irq	t/tree/drivers/i2c/i2c-core-base.c	/^static int i2c_smbus_host_notify_to_irq(const struct i2c_client *client)$/;"	f	typeref:typename:int	file:
i2c_smbus_ioctl_data32	t/tree/drivers/i2c/i2c-dev.c	/^struct i2c_smbus_ioctl_data32 {$/;"	s	file:
i2c_smbus_msg_pec	t/tree/drivers/i2c/i2c-core-smbus.c	/^static u8 i2c_smbus_msg_pec(u8 pec, struct i2c_msg *msg)$/;"	f	typeref:typename:u8	file:
i2c_smbus_pec	t/tree/drivers/i2c/i2c-core-smbus.c	/^static u8 i2c_smbus_pec(u8 crc, u8 *p, size_t count)$/;"	f	typeref:typename:u8	file:
i2c_smbus_read_block_data	t/tree/drivers/i2c/i2c-core-smbus.c	/^s32 i2c_smbus_read_block_data(const struct i2c_client *client, u8 command,$/;"	f	typeref:typename:s32
i2c_smbus_read_byte	t/tree/drivers/i2c/i2c-core-smbus.c	/^s32 i2c_smbus_read_byte(const struct i2c_client *client)$/;"	f	typeref:typename:s32
i2c_smbus_read_byte_data	t/tree/drivers/i2c/i2c-core-smbus.c	/^s32 i2c_smbus_read_byte_data(const struct i2c_client *client, u8 command)$/;"	f	typeref:typename:s32
i2c_smbus_read_i2c_block_data	t/tree/drivers/i2c/i2c-core-smbus.c	/^s32 i2c_smbus_read_i2c_block_data(const struct i2c_client *client, u8 command,$/;"	f	typeref:typename:s32
i2c_smbus_read_i2c_block_data_or_emulated	t/tree/drivers/i2c/i2c-core-smbus.c	/^s32 i2c_smbus_read_i2c_block_data_or_emulated(const struct i2c_client *client,$/;"	f	typeref:typename:s32
i2c_smbus_read_word_data	t/tree/drivers/i2c/i2c-core-smbus.c	/^s32 i2c_smbus_read_word_data(const struct i2c_client *client, u8 command)$/;"	f	typeref:typename:s32
i2c_smbus_read_word_swapped	t/tree/include/linux/i2c.h	/^i2c_smbus_read_word_swapped(const struct i2c_client *client, u8 command)$/;"	f	typeref:typename:s32
i2c_smbus_try_get_dmabuf	t/tree/drivers/i2c/i2c-core-smbus.c	/^static void i2c_smbus_try_get_dmabuf(struct i2c_msg *msg, u8 init_val)$/;"	f	typeref:typename:void	file:
i2c_smbus_write_block_data	t/tree/drivers/i2c/i2c-core-smbus.c	/^s32 i2c_smbus_write_block_data(const struct i2c_client *client, u8 command,$/;"	f	typeref:typename:s32
i2c_smbus_write_byte	t/tree/drivers/i2c/i2c-core-smbus.c	/^s32 i2c_smbus_write_byte(const struct i2c_client *client, u8 value)$/;"	f	typeref:typename:s32
i2c_smbus_write_byte_data	t/tree/drivers/i2c/i2c-core-smbus.c	/^s32 i2c_smbus_write_byte_data(const struct i2c_client *client, u8 command,$/;"	f	typeref:typename:s32
i2c_smbus_write_i2c_block_data	t/tree/drivers/i2c/i2c-core-smbus.c	/^s32 i2c_smbus_write_i2c_block_data(const struct i2c_client *client, u8 command,$/;"	f	typeref:typename:s32
i2c_smbus_write_word_data	t/tree/drivers/i2c/i2c-core-smbus.c	/^s32 i2c_smbus_write_word_data(const struct i2c_client *client, u8 command,$/;"	f	typeref:typename:s32
i2c_smbus_write_word_swapped	t/tree/include/linux/i2c.h	/^i2c_smbus_write_word_swapped(const struct i2c_client *client,$/;"	f	typeref:typename:s32
i2c_smbus_xfer	t/tree/drivers/i2c/i2c-core-smbus.c	/^s32 i2c_smbus_xfer(struct i2c_adapter *adapter, u16 addr,$/;"	f	typeref:typename:s32
i2c_smbus_xfer_emulated	t/tree/drivers/i2c/i2c-core-smbus.c	/^static s32 i2c_smbus_xfer_emulated(struct i2c_adapter *adapter, u16 addr,$/;"	f	typeref:typename:s32	file:
i2c_stub_allocate_banks	t/tree/drivers/i2c/i2c-stub.c	/^static int __init i2c_stub_allocate_banks(int i)$/;"	f	typeref:typename:int __init	file:
i2c_stub_exit	t/tree/drivers/i2c/i2c-stub.c	/^static void __exit i2c_stub_exit(void)$/;"	f	typeref:typename:void __exit	file:
i2c_stub_free	t/tree/drivers/i2c/i2c-stub.c	/^static void i2c_stub_free(void)$/;"	f	typeref:typename:void	file:
i2c_stub_init	t/tree/drivers/i2c/i2c-stub.c	/^static int __init i2c_stub_init(void)$/;"	f	typeref:typename:int __init	file:
i2c_sysfs_delete_device	t/tree/drivers/i2c/i2c-core-base.c	/^i2c_sysfs_delete_device(struct device *dev, struct device_attribute *attr,$/;"	f	typeref:typename:ssize_t	file:
i2c_sysfs_new_device	t/tree/drivers/i2c/i2c-core-base.c	/^i2c_sysfs_new_device(struct device *dev, struct device_attribute *attr,$/;"	f	typeref:typename:ssize_t	file:
i2c_timings	t/tree/include/linux/i2c.h	/^struct i2c_timings {$/;"	s
i2c_transfer	t/tree/drivers/i2c/i2c-core-base.c	/^int i2c_transfer(struct i2c_adapter *adap, struct i2c_msg *msgs, int num)$/;"	f	typeref:typename:int
i2c_transfer_buffer_flags	t/tree/drivers/i2c/i2c-core-base.c	/^int i2c_transfer_buffer_flags(const struct i2c_client *client, char *buf,$/;"	f	typeref:typename:int
i2c_transfer_trace_reg	t/tree/drivers/i2c/i2c-core-base.c	/^int i2c_transfer_trace_reg(void)$/;"	f	typeref:typename:int
i2c_transfer_trace_unreg	t/tree/drivers/i2c/i2c-core-base.c	/^void i2c_transfer_trace_unreg(void)$/;"	f	typeref:typename:void
i2c_trylock_bus	t/tree/include/linux/i2c.h	/^i2c_trylock_bus(struct i2c_adapter *adapter, unsigned int flags)$/;"	f	typeref:typename:int
i2c_unlock_bus	t/tree/include/linux/i2c.h	/^i2c_unlock_bus(struct i2c_adapter *adapter, unsigned int flags)$/;"	f	typeref:typename:void
i2c_unregister_device	t/tree/drivers/i2c/i2c-core-base.c	/^void i2c_unregister_device(struct i2c_client *client)$/;"	f	typeref:typename:void
i2c_use_client	t/tree/drivers/i2c/i2c-core-base.c	/^struct i2c_client *i2c_use_client(struct i2c_client *client)$/;"	f	typeref:struct:i2c_client *
i2c_verify_adapter	t/tree/drivers/i2c/i2c-core-base.c	/^struct i2c_adapter *i2c_verify_adapter(struct device *dev)$/;"	f	typeref:struct:i2c_adapter *
i2c_verify_client	t/tree/drivers/i2c/i2c-core-base.c	/^struct i2c_client *i2c_verify_client(struct device *dev)$/;"	f	typeref:struct:i2c_client *
i2cdev_attach_adapter	t/tree/drivers/i2c/i2c-dev.c	/^static int i2cdev_attach_adapter(struct device *dev, void *dummy)$/;"	f	typeref:typename:int	file:
i2cdev_check	t/tree/drivers/i2c/i2c-dev.c	/^static int i2cdev_check(struct device *dev, void *addrp)$/;"	f	typeref:typename:int	file:
i2cdev_check_addr	t/tree/drivers/i2c/i2c-dev.c	/^static int i2cdev_check_addr(struct i2c_adapter *adapter, unsigned int addr)$/;"	f	typeref:typename:int	file:
i2cdev_check_mux_children	t/tree/drivers/i2c/i2c-dev.c	/^static int i2cdev_check_mux_children(struct device *dev, void *addrp)$/;"	f	typeref:typename:int	file:
i2cdev_check_mux_parents	t/tree/drivers/i2c/i2c-dev.c	/^static int i2cdev_check_mux_parents(struct i2c_adapter *adapter, int addr)$/;"	f	typeref:typename:int	file:
i2cdev_detach_adapter	t/tree/drivers/i2c/i2c-dev.c	/^static int i2cdev_detach_adapter(struct device *dev, void *dummy)$/;"	f	typeref:typename:int	file:
i2cdev_fops	t/tree/drivers/i2c/i2c-dev.c	/^static const struct file_operations i2cdev_fops = {$/;"	v	typeref:typename:const struct file_operations	file:
i2cdev_ioctl	t/tree/drivers/i2c/i2c-dev.c	/^static long i2cdev_ioctl(struct file *file, unsigned int cmd, unsigned long arg)$/;"	f	typeref:typename:long	file:
i2cdev_ioctl_rdwr	t/tree/drivers/i2c/i2c-dev.c	/^static noinline int i2cdev_ioctl_rdwr(struct i2c_client *client,$/;"	f	typeref:typename:noinline int	file:
i2cdev_ioctl_smbus	t/tree/drivers/i2c/i2c-dev.c	/^static noinline int i2cdev_ioctl_smbus(struct i2c_client *client,$/;"	f	typeref:typename:noinline int	file:
i2cdev_notifier	t/tree/drivers/i2c/i2c-dev.c	/^static struct notifier_block i2cdev_notifier = {$/;"	v	typeref:struct:notifier_block	file:
i2cdev_notifier_call	t/tree/drivers/i2c/i2c-dev.c	/^static int i2cdev_notifier_call(struct notifier_block *nb, unsigned long action,$/;"	f	typeref:typename:int	file:
i2cdev_open	t/tree/drivers/i2c/i2c-dev.c	/^static int i2cdev_open(struct inode *inode, struct file *file)$/;"	f	typeref:typename:int	file:
i2cdev_read	t/tree/drivers/i2c/i2c-dev.c	/^static ssize_t i2cdev_read(struct file *file, char __user *buf, size_t count,$/;"	f	typeref:typename:ssize_t	file:
i2cdev_release	t/tree/drivers/i2c/i2c-dev.c	/^static int i2cdev_release(struct inode *inode, struct file *file)$/;"	f	typeref:typename:int	file:
i2cdev_write	t/tree/drivers/i2c/i2c-dev.c	/^static ssize_t i2cdev_write(struct file *file, const char __user *buf,$/;"	f	typeref:typename:ssize_t	file:
id	t/tree/include/acpi/acpi_bus.h	/^	const char *id;$/;"	m	struct:acpi_hardware_id	typeref:typename:const char *
id	t/tree/include/linux/acpi.h	/^	__u8 id[ACPI_TABLE_ID_LEN];$/;"	m	struct:acpi_probe_entry	typeref:typename:__u8[]
id	t/tree/include/linux/acpi.h	/^	int id;$/;"	m	struct:acpi_subtable_proc	typeref:typename:int
id	t/tree/include/linux/pm_wakeup.h	/^	int			id;$/;"	m	struct:wakeup_source	typeref:typename:int
id_table	t/tree/include/linux/i2c.h	/^	const struct i2c_device_id *id_table;$/;"	m	struct:i2c_driver	typeref:typename:const struct i2c_device_id *
idle_notification	t/tree/include/linux/pm.h	/^	unsigned int		idle_notification:1;$/;"	m	struct:dev_pm_info	typeref:typename:unsigned int:1
ids	t/tree/include/acpi/acpi_bus.h	/^	const struct acpi_device_id *ids; \/* Supported Hardware IDs *\/$/;"	m	struct:acpi_driver	typeref:typename:const struct acpi_device_id *
ids	t/tree/include/acpi/acpi_bus.h	/^	const struct acpi_device_id *ids;$/;"	m	struct:acpi_scan_handler	typeref:typename:const struct acpi_device_id *
ids	t/tree/include/acpi/acpi_bus.h	/^	struct list_head ids;		\/* _HID and _CIDs *\/$/;"	m	struct:acpi_device_pnp	typeref:struct:list_head
ignore_children	t/tree/include/linux/pm.h	/^	bool			ignore_children:1;$/;"	m	struct:dev_pm_info	typeref:typename:bool:1
ignore_parent	t/tree/include/acpi/acpi_bus.h	/^	u32 ignore_parent:1;	\/* Power is independent of parent power state *\/$/;"	m	struct:acpi_device_power_flags	typeref:typename:u32:1
ihandle	t/tree/include/linux/of.h	/^typedef u32 ihandle;$/;"	t	typeref:typename:u32
ilen	t/tree/arch/x86/include/asm/uprobes.h	/^			u8	ilen;$/;"	m	struct:arch_uprobe::__anon323fcd42020a::__anon323fcd420308	typeref:typename:u8
ilen	t/tree/arch/x86/include/asm/uprobes.h	/^			u8	ilen;$/;"	m	struct:arch_uprobe::__anon323fcd42020a::__anon323fcd420408	typeref:typename:u8
ilen	t/tree/arch/x86/include/asm/uprobes.h	/^			u8	ilen;$/;"	m	struct:arch_uprobe::__anon323fcd42020a::__anon323fcd420508	typeref:typename:u8
ilog2	t/tree/include/linux/log2.h	/^#define ilog2(/;"	d
in	t/tree/include/linux/logic_pio.h	/^	u32 (*in)(void *hostdata, unsigned long addr, size_t dwidth);$/;"	m	struct:logic_pio_host_ops	typeref:typename:u32 (*)(void * hostdata,unsigned long addr,size_t dwidth)
in_dpm_list	t/tree/include/linux/pm.h	/^	bool			in_dpm_list:1;	\/* Owned by the PM core *\/$/;"	m	struct:dev_pm_info	typeref:typename:bool:1
in_egroup_p	t/tree/include/linux/cred.h	/^static inline int in_egroup_p(kgid_t grp)$/;"	f	typeref:typename:int
in_group_p	t/tree/include/linux/cred.h	/^static inline int in_group_p(kgid_t grp)$/;"	f	typeref:typename:int
inb	t/tree/include/asm-generic/io.h	/^#define inb inb$/;"	d
inb	t/tree/include/asm-generic/io.h	/^static inline u8 inb(unsigned long addr)$/;"	f	typeref:typename:u8
inb	t/tree/include/linux/logic_pio.h	/^#define inb logic_inb$/;"	d
inb_p	t/tree/include/asm-generic/io.h	/^#define inb_p inb_p$/;"	d
inb_p	t/tree/include/asm-generic/io.h	/^static inline u8 inb_p(unsigned long addr)$/;"	f	typeref:typename:u8
index	t/tree/drivers/i2c/i2c-core-acpi.c	/^	int index;$/;"	m	struct:i2c_acpi_lookup	typeref:typename:int	file:
index	t/tree/include/linux/radix-tree.h	/^	unsigned long	index;$/;"	m	struct:radix_tree_iter	typeref:typename:unsigned long
index_key	t/tree/include/linux/key.h	/^		struct keyring_index_key index_key;$/;"	m	union:key::__anon38d188f8050a	typeref:struct:keyring_index_key
info	t/tree/drivers/i2c/i2c-core-acpi.c	/^	struct acpi_connection_info info;$/;"	m	struct:i2c_acpi_handler_data	typeref:struct:acpi_connection_info	file:
info	t/tree/drivers/i2c/i2c-core-acpi.c	/^	struct i2c_board_info *info;$/;"	m	struct:i2c_acpi_lookup	typeref:struct:i2c_board_info *	file:
init_irq	t/tree/include/linux/i2c.h	/^	int init_irq;			\/* irq set at initialization	*\/$/;"	m	struct:i2c_client	typeref:typename:int
init_rcu_head	t/tree/include/linux/rcupdate.h	/^static inline void init_rcu_head(struct rcu_head *head) { }$/;"	f	typeref:typename:void
init_rcu_head_on_stack	t/tree/include/linux/rcupdate.h	/^static inline void init_rcu_head_on_stack(struct rcu_head *head) { }$/;"	f	typeref:typename:void
init_srcu_struct	t/tree/include/linux/srcu.h	/^#define init_srcu_struct(/;"	d
initialized	t/tree/include/acpi/acpi_bus.h	/^	u32 initialized:1;$/;"	m	struct:acpi_device_flags	typeref:typename:u32:1
inl	t/tree/include/asm-generic/io.h	/^#define inl inl$/;"	d
inl	t/tree/include/asm-generic/io.h	/^static inline u32 inl(unsigned long addr)$/;"	f	typeref:typename:u32
inl	t/tree/include/linux/logic_pio.h	/^#define inl logic_inl$/;"	d
inl_p	t/tree/include/asm-generic/io.h	/^#define inl_p inl_p$/;"	d
inl_p	t/tree/include/asm-generic/io.h	/^static inline u32 inl_p(unsigned long addr)$/;"	f	typeref:typename:u32
inrush_current	t/tree/include/acpi/acpi_bus.h	/^	u32 inrush_current:1;	\/* Serialize Dx->D0 *\/$/;"	m	struct:acpi_device_power_flags	typeref:typename:u32:1
ins	t/tree/include/linux/logic_pio.h	/^	u32 (*ins)(void *hostdata, unsigned long addr, void *buffer,$/;"	m	struct:logic_pio_host_ops	typeref:typename:u32 (*)(void * hostdata,unsigned long addr,void * buffer,size_t dwidth,unsigned int count)
insb	t/tree/include/asm-generic/io.h	/^#define insb insb$/;"	d
insb	t/tree/include/asm-generic/io.h	/^static inline void insb(unsigned long addr, void *buffer, unsigned int count)$/;"	f	typeref:typename:void
insb	t/tree/include/linux/logic_pio.h	/^#define insb logic_insb$/;"	d
insb_p	t/tree/include/asm-generic/io.h	/^#define insb_p insb_p$/;"	d
insb_p	t/tree/include/asm-generic/io.h	/^static inline void insb_p(unsigned long addr, void *buffer, unsigned int count)$/;"	f	typeref:typename:void
insl	t/tree/include/asm-generic/io.h	/^#define insl insl$/;"	d
insl	t/tree/include/asm-generic/io.h	/^static inline void insl(unsigned long addr, void *buffer, unsigned int count)$/;"	f	typeref:typename:void
insl	t/tree/include/linux/logic_pio.h	/^#define insl logic_insl$/;"	d
insl_p	t/tree/include/asm-generic/io.h	/^#define insl_p insl_p$/;"	d
insl_p	t/tree/include/asm-generic/io.h	/^static inline void insl_p(unsigned long addr, void *buffer, unsigned int count)$/;"	f	typeref:typename:void
insn	t/tree/arch/x86/include/asm/uprobes.h	/^		u8			insn[MAX_UINSN_BYTES];$/;"	m	union:arch_uprobe::__anon323fcd42010a	typeref:typename:u8[]
insw	t/tree/include/asm-generic/io.h	/^#define insw insw$/;"	d
insw	t/tree/include/asm-generic/io.h	/^static inline void insw(unsigned long addr, void *buffer, unsigned int count)$/;"	f	typeref:typename:void
insw	t/tree/include/linux/logic_pio.h	/^#define insw logic_insw$/;"	d
insw_p	t/tree/include/asm-generic/io.h	/^#define insw_p insw_p$/;"	d
insw_p	t/tree/include/asm-generic/io.h	/^static inline void insw_p(unsigned long addr, void *buffer, unsigned int count)$/;"	f	typeref:typename:void
invalid_logical_cpuid	t/tree/include/linux/acpi.h	/^static inline bool invalid_logical_cpuid(u32 cpuid)$/;"	f	typeref:typename:bool
invalid_phys_cpuid	t/tree/include/linux/acpi.h	/^static inline bool invalid_phys_cpuid(phys_cpuid_t phys_id)$/;"	f	typeref:typename:bool
inw	t/tree/include/asm-generic/io.h	/^#define inw inw$/;"	d
inw	t/tree/include/asm-generic/io.h	/^static inline u16 inw(unsigned long addr)$/;"	f	typeref:typename:u16
inw	t/tree/include/linux/logic_pio.h	/^#define inw logic_inw$/;"	d
inw_p	t/tree/include/asm-generic/io.h	/^#define inw_p inw_p$/;"	d
inw_p	t/tree/include/asm-generic/io.h	/^static inline u16 inw_p(unsigned long addr)$/;"	f	typeref:typename:u16
io_start	t/tree/include/linux/logic_pio.h	/^	resource_size_t io_start;$/;"	m	struct:logic_pio_hwaddr	typeref:typename:resource_size_t
ioport_map	t/tree/include/asm-generic/io.h	/^#define ioport_map ioport_map$/;"	d
ioport_map	t/tree/include/asm-generic/io.h	/^static inline void __iomem *ioport_map(unsigned long port, unsigned int nr)$/;"	f	typeref:typename:void __iomem *
ioport_unmap	t/tree/include/asm-generic/io.h	/^#define ioport_unmap ioport_unmap$/;"	d
ioport_unmap	t/tree/include/asm-generic/io.h	/^static inline void ioport_unmap(void __iomem *p)$/;"	f	typeref:typename:void
ioread16	t/tree/include/asm-generic/io.h	/^#define ioread16 ioread16$/;"	d
ioread16	t/tree/include/asm-generic/io.h	/^static inline u16 ioread16(const volatile void __iomem *addr)$/;"	f	typeref:typename:u16
ioread16_rep	t/tree/include/asm-generic/io.h	/^#define ioread16_rep ioread16_rep$/;"	d
ioread16_rep	t/tree/include/asm-generic/io.h	/^static inline void ioread16_rep(const volatile void __iomem *addr,$/;"	f	typeref:typename:void
ioread16be	t/tree/include/asm-generic/io.h	/^#define ioread16be ioread16be$/;"	d
ioread16be	t/tree/include/asm-generic/io.h	/^static inline u16 ioread16be(const volatile void __iomem *addr)$/;"	f	typeref:typename:u16
ioread32	t/tree/include/asm-generic/io.h	/^#define ioread32 ioread32$/;"	d
ioread32	t/tree/include/asm-generic/io.h	/^static inline u32 ioread32(const volatile void __iomem *addr)$/;"	f	typeref:typename:u32
ioread32_rep	t/tree/include/asm-generic/io.h	/^#define ioread32_rep ioread32_rep$/;"	d
ioread32_rep	t/tree/include/asm-generic/io.h	/^static inline void ioread32_rep(const volatile void __iomem *addr,$/;"	f	typeref:typename:void
ioread32be	t/tree/include/asm-generic/io.h	/^#define ioread32be ioread32be$/;"	d
ioread32be	t/tree/include/asm-generic/io.h	/^static inline u32 ioread32be(const volatile void __iomem *addr)$/;"	f	typeref:typename:u32
ioread64	t/tree/include/asm-generic/io.h	/^#define ioread64 ioread64$/;"	d
ioread64	t/tree/include/asm-generic/io.h	/^static inline u64 ioread64(const volatile void __iomem *addr)$/;"	f	typeref:typename:u64
ioread64_rep	t/tree/include/asm-generic/io.h	/^#define ioread64_rep ioread64_rep$/;"	d
ioread64_rep	t/tree/include/asm-generic/io.h	/^static inline void ioread64_rep(const volatile void __iomem *addr,$/;"	f	typeref:typename:void
ioread64be	t/tree/include/asm-generic/io.h	/^#define ioread64be ioread64be$/;"	d
ioread64be	t/tree/include/asm-generic/io.h	/^static inline u64 ioread64be(const volatile void __iomem *addr)$/;"	f	typeref:typename:u64
ioread8	t/tree/include/asm-generic/io.h	/^#define ioread8 ioread8$/;"	d
ioread8	t/tree/include/asm-generic/io.h	/^static inline u8 ioread8(const volatile void __iomem *addr)$/;"	f	typeref:typename:u8
ioread8_rep	t/tree/include/asm-generic/io.h	/^#define ioread8_rep ioread8_rep$/;"	d
ioread8_rep	t/tree/include/asm-generic/io.h	/^static inline void ioread8_rep(const volatile void __iomem *addr, void *buffer,$/;"	f	typeref:typename:void
ioremap	t/tree/include/asm-generic/io.h	/^#define ioremap ioremap$/;"	d
ioremap	t/tree/include/asm-generic/io.h	/^static inline void __iomem *ioremap(phys_addr_t offset, size_t size)$/;"	f	typeref:typename:void __iomem *
ioremap_nocache	t/tree/include/asm-generic/io.h	/^#define ioremap_nocache ioremap_nocache$/;"	d
ioremap_nocache	t/tree/include/asm-generic/io.h	/^static inline void __iomem *ioremap_nocache(phys_addr_t offset, size_t size)$/;"	f	typeref:typename:void __iomem *
ioremap_uc	t/tree/include/asm-generic/io.h	/^#define ioremap_uc ioremap_uc$/;"	d
ioremap_uc	t/tree/include/asm-generic/io.h	/^static inline void __iomem *ioremap_uc(phys_addr_t offset, size_t size)$/;"	f	typeref:typename:void __iomem *
ioremap_wc	t/tree/include/asm-generic/io.h	/^#define ioremap_wc ioremap_wc$/;"	d
ioremap_wc	t/tree/include/asm-generic/io.h	/^static inline void __iomem *ioremap_wc(phys_addr_t offset, size_t size)$/;"	f	typeref:typename:void __iomem *
ioremap_wt	t/tree/include/asm-generic/io.h	/^#define ioremap_wt ioremap_wt$/;"	d
ioremap_wt	t/tree/include/asm-generic/io.h	/^static inline void __iomem *ioremap_wt(phys_addr_t offset, size_t size)$/;"	f	typeref:typename:void __iomem *
iounmap	t/tree/include/asm-generic/io.h	/^#define iounmap iounmap$/;"	d
iounmap	t/tree/include/asm-generic/io.h	/^static inline void iounmap(void __iomem *addr)$/;"	f	typeref:typename:void
iowrite16	t/tree/include/asm-generic/io.h	/^#define iowrite16 iowrite16$/;"	d
iowrite16	t/tree/include/asm-generic/io.h	/^static inline void iowrite16(u16 value, volatile void __iomem *addr)$/;"	f	typeref:typename:void
iowrite16_rep	t/tree/include/asm-generic/io.h	/^#define iowrite16_rep iowrite16_rep$/;"	d
iowrite16_rep	t/tree/include/asm-generic/io.h	/^static inline void iowrite16_rep(volatile void __iomem *addr,$/;"	f	typeref:typename:void
iowrite16be	t/tree/include/asm-generic/io.h	/^#define iowrite16be iowrite16be$/;"	d
iowrite16be	t/tree/include/asm-generic/io.h	/^static inline void iowrite16be(u16 value, void volatile __iomem *addr)$/;"	f	typeref:typename:void
iowrite32	t/tree/include/asm-generic/io.h	/^#define iowrite32 iowrite32$/;"	d
iowrite32	t/tree/include/asm-generic/io.h	/^static inline void iowrite32(u32 value, volatile void __iomem *addr)$/;"	f	typeref:typename:void
iowrite32_rep	t/tree/include/asm-generic/io.h	/^#define iowrite32_rep iowrite32_rep$/;"	d
iowrite32_rep	t/tree/include/asm-generic/io.h	/^static inline void iowrite32_rep(volatile void __iomem *addr,$/;"	f	typeref:typename:void
iowrite32be	t/tree/include/asm-generic/io.h	/^#define iowrite32be iowrite32be$/;"	d
iowrite32be	t/tree/include/asm-generic/io.h	/^static inline void iowrite32be(u32 value, volatile void __iomem *addr)$/;"	f	typeref:typename:void
iowrite64	t/tree/include/asm-generic/io.h	/^#define iowrite64 iowrite64$/;"	d
iowrite64	t/tree/include/asm-generic/io.h	/^static inline void iowrite64(u64 value, volatile void __iomem *addr)$/;"	f	typeref:typename:void
iowrite64_rep	t/tree/include/asm-generic/io.h	/^#define iowrite64_rep iowrite64_rep$/;"	d
iowrite64_rep	t/tree/include/asm-generic/io.h	/^static inline void iowrite64_rep(volatile void __iomem *addr,$/;"	f	typeref:typename:void
iowrite64be	t/tree/include/asm-generic/io.h	/^#define iowrite64be iowrite64be$/;"	d
iowrite64be	t/tree/include/asm-generic/io.h	/^static inline void iowrite64be(u64 value, volatile void __iomem *addr)$/;"	f	typeref:typename:void
iowrite8	t/tree/include/asm-generic/io.h	/^#define iowrite8 iowrite8$/;"	d
iowrite8	t/tree/include/asm-generic/io.h	/^static inline void iowrite8(u8 value, volatile void __iomem *addr)$/;"	f	typeref:typename:void
iowrite8_rep	t/tree/include/asm-generic/io.h	/^#define iowrite8_rep iowrite8_rep$/;"	d
iowrite8_rep	t/tree/include/asm-generic/io.h	/^static inline void iowrite8_rep(volatile void __iomem *addr,$/;"	f	typeref:typename:void
ip	t/tree/arch/x86/include/asm/orc_types.h	/^	u32		ip;$/;"	m	struct:unwind_hint	typeref:typename:u32
irq	t/tree/include/linux/i2c-smbus.h	/^	int			irq;$/;"	m	struct:i2c_smbus_alert_setup	typeref:typename:int
irq	t/tree/include/linux/i2c.h	/^	int		irq;$/;"	m	struct:i2c_board_info	typeref:typename:int
irq	t/tree/include/linux/i2c.h	/^	int irq;			\/* irq issued by device		*\/$/;"	m	struct:i2c_client	typeref:typename:int
irq_safe	t/tree/include/linux/pm.h	/^	unsigned int		irq_safe:1;$/;"	m	struct:dev_pm_info	typeref:typename:unsigned int:1
irq_trans	t/tree/include/linux/of.h	/^	struct of_irq_controller *irq_trans;$/;"	m	struct:device_node	typeref:struct:of_irq_controller *
is_acpi_data_node	t/tree/include/linux/acpi.h	/^static inline bool is_acpi_data_node(struct fwnode_handle *fwnode)$/;"	f	typeref:typename:bool
is_acpi_device_node	t/tree/include/linux/acpi.h	/^static inline bool is_acpi_device_node(struct fwnode_handle *fwnode)$/;"	f	typeref:typename:bool
is_acpi_node	t/tree/include/acpi/acpi_bus.h	/^static inline bool is_acpi_node(const struct fwnode_handle *fwnode)$/;"	f	typeref:typename:bool
is_acpi_node	t/tree/include/linux/acpi.h	/^static inline bool is_acpi_node(struct fwnode_handle *fwnode)$/;"	f	typeref:typename:bool
is_acpi_static_node	t/tree/include/acpi/acpi_bus.h	/^static inline bool is_acpi_static_node(const struct fwnode_handle *fwnode)$/;"	f	typeref:typename:bool
is_dock_device	t/tree/include/acpi/acpi_drivers.h	/^static inline int is_dock_device(struct acpi_device *adev)$/;"	f	typeref:typename:int
is_dock_station	t/tree/include/acpi/acpi_bus.h	/^	u32 is_dock_station:1;$/;"	m	struct:acpi_device_flags	typeref:typename:u32:1
is_key_possessed	t/tree/include/linux/key.h	/^#define is_key_possessed(/;"	d
is_key_possessed	t/tree/include/linux/key.h	/^static inline bool is_key_possessed(const key_ref_t key_ref)$/;"	f	typeref:typename:bool
is_late_suspended	t/tree/include/linux/pm.h	/^	bool			is_late_suspended:1;$/;"	m	struct:dev_pm_info	typeref:typename:bool:1
is_noirq_suspended	t/tree/include/linux/pm.h	/^	bool			is_noirq_suspended:1;$/;"	m	struct:dev_pm_info	typeref:typename:bool:1
is_of_node	t/tree/include/linux/of.h	/^static inline bool is_of_node(const struct fwnode_handle *fwnode)$/;"	f	typeref:typename:bool
is_power_of_2	t/tree/include/linux/log2.h	/^bool is_power_of_2(unsigned long n)$/;"	f	typeref:typename:bool
is_prepared	t/tree/include/linux/pm.h	/^	bool			is_prepared:1;	\/* Owned by the PM core *\/$/;"	m	struct:dev_pm_info	typeref:typename:bool:1
is_registered	t/tree/drivers/i2c/i2c-core-base.c	/^static bool is_registered;$/;"	v	typeref:typename:bool	file:
is_suspended	t/tree/include/linux/pm.h	/^	bool			is_suspended:1;	\/* Ditto *\/$/;"	m	struct:dev_pm_info	typeref:typename:bool:1
issue134_function1	t/tree/issue134.c	/^int issue134_function1(int p1)$/;"	f	typeref:typename:int
issue134_function2	t/tree/issue134.c	/^void __sched issue134_function2(struct completion *x)$/;"	f	typeref:typename:void __sched
issue192a	t/tree/issue192.c	/^issue192a(const struct foo **bar, const char *bat,$/;"	f	typeref:typename:int
issue192b	t/tree/issue192.c	/^issue192b(void *parameter)$/;"	f	typeref:typename:AMAZING_RETURN_TYPE
ist_info	t/tree/arch/x86/include/uapi/asm/ist.h	/^struct ist_info {$/;"	s
ixol	t/tree/arch/x86/include/asm/uprobes.h	/^		u8			ixol[MAX_UINSN_BYTES];$/;"	m	union:arch_uprobe::__anon323fcd42010a	typeref:typename:u8[]
jit_keyring	t/tree/include/linux/cred.h	/^	unsigned char	jit_keyring;	\/* default keyring to attach requested$/;"	m	struct:cred	typeref:typename:unsigned char
key	t/tree/include/linux/key.h	/^	struct key *key;$/;"	m	struct:key_restriction	typeref:struct:key *
key	t/tree/include/linux/key.h	/^struct key {$/;"	s
key_free_user_ns	t/tree/include/linux/key.h	/^#define key_free_user_ns(/;"	d
key_fsgid_changed	t/tree/include/linux/key.h	/^#define key_fsgid_changed(/;"	d
key_fsuid_changed	t/tree/include/linux/key.h	/^#define key_fsuid_changed(/;"	d
key_get	t/tree/include/linux/key.h	/^#define key_get(/;"	d
key_get	t/tree/include/linux/key.h	/^static inline struct key *key_get(struct key *key)$/;"	f	typeref:struct:key *
key_init	t/tree/include/linux/key.h	/^#define key_init(/;"	d
key_invalidate	t/tree/include/linux/key.h	/^#define key_invalidate(/;"	d
key_is_negative	t/tree/include/linux/key.h	/^static inline bool key_is_negative(const struct key *key)$/;"	f	typeref:typename:bool
key_is_positive	t/tree/include/linux/key.h	/^static inline bool key_is_positive(const struct key *key)$/;"	f	typeref:typename:bool
key_payload	t/tree/include/linux/key.h	/^union key_payload {$/;"	u
key_perm_t	t/tree/include/linux/key.h	/^typedef uint32_t key_perm_t;$/;"	t	typeref:typename:uint32_t
key_put	t/tree/include/linux/key.h	/^#define key_put(/;"	d
key_read_state	t/tree/include/linux/key.h	/^static inline short key_read_state(const struct key *key)$/;"	f	typeref:typename:short
key_ref_put	t/tree/include/linux/key.h	/^#define key_ref_put(/;"	d
key_ref_put	t/tree/include/linux/key.h	/^static inline void key_ref_put(key_ref_t key_ref)$/;"	f	typeref:typename:void
key_ref_t	t/tree/include/linux/key.h	/^typedef struct __key_reference_with_attributes *key_ref_t;$/;"	t	typeref:struct:__key_reference_with_attributes *
key_ref_to_ptr	t/tree/include/linux/key.h	/^#define key_ref_to_ptr(/;"	d
key_ref_to_ptr	t/tree/include/linux/key.h	/^static inline struct key *key_ref_to_ptr(const key_ref_t key_ref)$/;"	f	typeref:struct:key *
key_remove_domain	t/tree/include/linux/key.h	/^#define key_remove_domain(/;"	d
key_restrict_link_func_t	t/tree/include/linux/key.h	/^typedef int (*key_restrict_link_func_t)(struct key *dest_keyring,$/;"	t	typeref:typename:int (*)(struct key * dest_keyring,const struct key_type * type,const union key_payload * payload,struct key * restriction_key)
key_restriction	t/tree/include/linux/key.h	/^struct key_restriction {$/;"	s
key_revoke	t/tree/include/linux/key.h	/^#define key_revoke(/;"	d
key_serial	t/tree/include/linux/key.h	/^#define key_serial(/;"	d
key_serial	t/tree/include/linux/key.h	/^static inline key_serial_t key_serial(const struct key *key)$/;"	f	typeref:typename:key_serial_t
key_serial_t	t/tree/include/linux/key.h	/^typedef int32_t key_serial_t;$/;"	t	typeref:typename:int32_t
key_state	t/tree/include/linux/key.h	/^enum key_state {$/;"	g
key_tag	t/tree/include/linux/key.h	/^struct key_tag {$/;"	s
key_validate	t/tree/include/linux/key.h	/^#define key_validate(/;"	d
keyring_index_key	t/tree/include/linux/key.h	/^struct keyring_index_key {$/;"	s
keys	t/tree/include/linux/key.h	/^			struct assoc_array keys;$/;"	m	struct:key::__anon38d188f8070a::__anon38d188f80808	typeref:struct:assoc_array
keytype	t/tree/include/linux/key.h	/^	struct key_type *keytype;$/;"	m	struct:key_restriction	typeref:struct:key_type *
kfree_rcu	t/tree/include/linux/rcupdate.h	/^#define kfree_rcu(/;"	d
kobj	t/tree/include/acpi/acpi_bus.h	/^	struct kobject kobj;$/;"	m	struct:acpi_data_node	typeref:struct:kobject
kobj	t/tree/include/acpi/acpi_bus.h	/^	struct kobject kobj;$/;"	m	struct:acpi_hotplug_profile	typeref:struct:kobject
kobj	t/tree/include/linux/of.h	/^	struct	kobject kobj;$/;"	m	struct:device_node	typeref:struct:kobject
kobj_done	t/tree/include/acpi/acpi_bus.h	/^	struct completion kobj_done;$/;"	m	struct:acpi_data_node	typeref:struct:completion
kobj_to_i2c_client	t/tree/include/linux/i2c.h	/^static inline struct i2c_client *kobj_to_i2c_client(struct kobject *kobj)$/;"	f	typeref:struct:i2c_client *
last_busy	t/tree/include/linux/pm.h	/^	u64			last_busy;$/;"	m	struct:dev_pm_info	typeref:typename:u64
last_time	t/tree/include/linux/pm_wakeup.h	/^	ktime_t last_time;$/;"	m	struct:wakeup_source	typeref:typename:ktime_t
last_used_at	t/tree/include/linux/key.h	/^	time64_t		last_used_at;	\/* last time used for LRU keyring discard *\/$/;"	m	struct:key	typeref:typename:time64_t
latency	t/tree/include/acpi/acpi_bus.h	/^	int latency;		\/* Dx->D0 time (microseconds) *\/$/;"	m	struct:acpi_device_power_state	typeref:typename:int
latency	t/tree/include/acpi/acpi_bus.h	/^	int latency;		\/* Px->P0 time (microseconds) *\/$/;"	m	struct:acpi_device_perf_state	typeref:typename:int
len	t/tree/drivers/i2c/i2c-core-acpi.c	/^	u8	len;$/;"	m	struct:gsb_buffer	typeref:typename:u8	file:
len	t/tree/drivers/i2c/i2c-dev.c	/^	u16 len;$/;"	m	struct:i2c_msg32	typeref:typename:u16	file:
len	t/tree/drivers/i2c/i2c-stub.c	/^	u8 len;$/;"	m	struct:smbus_block_data	typeref:typename:u8	file:
len	t/tree/include/linux/rcu_segcblist.h	/^	atomic_long_t len;$/;"	m	struct:rcu_segcblist	typeref:typename:atomic_long_t
len	t/tree/include/linux/rcu_segcblist.h	/^	long len;$/;"	m	struct:rcu_cblist	typeref:typename:long
len	t/tree/include/linux/rcu_segcblist.h	/^	long len;$/;"	m	struct:rcu_segcblist	typeref:typename:long
len	t/tree/include/uapi/linux/i2c.h	/^	__u16 len;		\/* msg length				*\/$/;"	m	struct:i2c_msg	typeref:typename:__u16
len_desc	t/tree/include/linux/key.h	/^			unsigned long	len_desc;$/;"	m	struct:key::__anon38d188f8050a::__anon38d188f80608	typeref:typename:unsigned long
len_lazy	t/tree/include/linux/rcu_segcblist.h	/^	long len_lazy;$/;"	m	struct:rcu_cblist	typeref:typename:long
len_lazy	t/tree/include/linux/rcu_segcblist.h	/^	long len_lazy;$/;"	m	struct:rcu_segcblist	typeref:typename:long
length	t/tree/include/linux/of.h	/^	int	length;$/;"	m	struct:property	typeref:typename:int
less_than_or_equal	t/tree/include/linux/acpi.h	/^	less_than_or_equal,$/;"	e	enum:acpi_predicate
level	t/tree/include/linux/srcutree.h	/^	struct srcu_node *level[RCU_NUM_LVLS + 1];$/;"	m	struct:srcu_struct	typeref:struct:srcu_node * []
links_count	t/tree/include/linux/pm.h	/^	unsigned int		links_count;$/;"	m	struct:dev_pm_info	typeref:typename:unsigned int
list	t/tree/drivers/i2c/i2c-core.h	/^	struct list_head	list;$/;"	m	struct:i2c_devinfo	typeref:struct:list_head
list	t/tree/drivers/i2c/i2c-dev.c	/^	struct list_head list;$/;"	m	struct:i2c_dev	typeref:struct:list_head	file:
list	t/tree/include/acpi/acpi_bus.h	/^	struct list_head list;$/;"	m	struct:acpi_bus_type	typeref:struct:list_head
list	t/tree/include/acpi/acpi_bus.h	/^	struct list_head list;$/;"	m	struct:acpi_device_properties	typeref:struct:list_head
list	t/tree/include/acpi/acpi_bus.h	/^	struct list_head list;$/;"	m	struct:acpi_hardware_id	typeref:struct:list_head
list	t/tree/include/linux/logic_pio.h	/^	struct list_head list;$/;"	m	struct:logic_pio_hwaddr	typeref:struct:list_head
list_end	t/tree/include/linux/of.h	/^	const __be32 *list_end;$/;"	m	struct:of_phandle_iterator	typeref:typename:const __be32 *
list_node	t/tree/include/acpi/acpi_bus.h	/^	struct list_head list_node;$/;"	m	struct:acpi_scan_handler	typeref:struct:list_head
lock	t/tree/include/linux/acpi.h	/^	struct mutex lock;$/;"	m	struct:acpi_debugger	typeref:struct:mutex
lock	t/tree/include/linux/pm.h	/^	spinlock_t		lock;$/;"	m	struct:dev_pm_info	typeref:typename:spinlock_t
lock	t/tree/include/linux/pm.h	/^	spinlock_t lock;$/;"	m	struct:pm_subsys_data	typeref:typename:spinlock_t
lock	t/tree/include/linux/pm_wakeup.h	/^	spinlock_t		lock;$/;"	m	struct:wakeup_source	typeref:typename:spinlock_t
lock	t/tree/include/linux/srcutree.h	/^	spinlock_t __private lock;		\/* Protect counters *\/$/;"	m	struct:srcu_struct	typeref:typename:spinlock_t __private
lock	t/tree/include/linux/srcutree.h	/^	spinlock_t __private lock;$/;"	m	struct:srcu_node	typeref:typename:spinlock_t __private
lock_bus	t/tree/include/linux/i2c.h	/^	void (*lock_bus)(struct i2c_adapter *adapter, unsigned int flags);$/;"	m	struct:i2c_lock_operations	typeref:typename:void (*)(struct i2c_adapter * adapter,unsigned int flags)
lock_ops	t/tree/include/linux/i2c.h	/^	const struct i2c_lock_operations *lock_ops;$/;"	m	struct:i2c_adapter	typeref:typename:const struct i2c_lock_operations *
locked	t/tree/include/asm-generic/qspinlock_types.h	/^			u8	locked;$/;"	m	struct:qspinlock::__anond60321f2010a::__anond60321f20208	typeref:typename:u8
locked	t/tree/include/asm-generic/qspinlock_types.h	/^			u8	locked;$/;"	m	struct:qspinlock::__anond60321f2010a::__anond60321f20508	typeref:typename:u8
locked_flags	t/tree/include/linux/i2c.h	/^	unsigned long locked_flags;	\/* owned by the I2C core *\/$/;"	m	struct:i2c_adapter	typeref:typename:unsigned long
locked_pending	t/tree/include/asm-generic/qspinlock_types.h	/^			u16	locked_pending;$/;"	m	struct:qspinlock::__anond60321f2010a::__anond60321f20308	typeref:typename:u16
locked_pending	t/tree/include/asm-generic/qspinlock_types.h	/^			u16	locked_pending;$/;"	m	struct:qspinlock::__anond60321f2010a::__anond60321f20408	typeref:typename:u16
logic_pio_host_ops	t/tree/include/linux/logic_pio.h	/^struct logic_pio_host_ops {$/;"	s
logic_pio_hwaddr	t/tree/include/linux/logic_pio.h	/^struct logic_pio_hwaddr {$/;"	s
lpit_read_residency_count_address	t/tree/include/linux/acpi.h	/^static inline int lpit_read_residency_count_address(u64 *address)$/;"	f	typeref:typename:int
mac_addr_used	t/tree/drivers/firmware/broadcom/bcm74xx_sprom.c	/^static int mac_addr_used = 2;$/;"	v	typeref:typename:int	file:
magic	t/tree/include/linux/cred.h	/^	unsigned	magic;$/;"	m	struct:cred	typeref:typename:unsigned
magic	t/tree/include/linux/key.h	/^	unsigned		magic;$/;"	m	struct:key	typeref:typename:unsigned
make_key_ref	t/tree/include/linux/key.h	/^#define make_key_ref(/;"	d
make_key_ref	t/tree/include/linux/key.h	/^static inline key_ref_t make_key_ref(const struct key *key,$/;"	f	typeref:typename:key_ref_t
manufacturer_id	t/tree/include/linux/i2c.h	/^	u16 manufacturer_id;$/;"	m	struct:i2c_device_identity	typeref:typename:u16
marks	t/tree/include/linux/xarray.h	/^		unsigned long	marks[XA_MAX_MARKS][XA_MARK_LONGS];$/;"	m	union:xa_node::__anonde33faa6020a	typeref:typename:unsigned long[][]
master_xfer	t/tree/include/linux/i2c.h	/^	int (*master_xfer)(struct i2c_adapter *adap, struct i2c_msg *msgs,$/;"	m	struct:i2c_algorithm	typeref:typename:int (*)(struct i2c_adapter * adap,struct i2c_msg * msgs,int num)
master_xfer_atomic	t/tree/include/linux/i2c.h	/^	int (*master_xfer_atomic)(struct i2c_adapter *adap,$/;"	m	struct:i2c_algorithm	typeref:typename:int (*)(struct i2c_adapter * adap,struct i2c_msg * msgs,int num)
match	t/tree/include/acpi/acpi_bus.h	/^	bool (*match)(const char *idstr, const struct acpi_device_id **matchid);$/;"	m	struct:acpi_scan_handler	typeref:typename:bool (*)(const char * idstr,const struct acpi_device_id ** matchid)
match	t/tree/include/acpi/acpi_bus.h	/^	bool (*match)(struct device *dev);$/;"	m	struct:acpi_bus_type	typeref:typename:bool (*)(struct device * dev)
match_driver	t/tree/include/acpi/acpi_bus.h	/^	u32 match_driver:1;$/;"	m	struct:acpi_device_flags	typeref:typename:u32:1
max	t/tree/include/linux/memblock.h	/^	unsigned long max;$/;"	m	struct:memblock_type	typeref:typename:unsigned long
max	t/tree/include/linux/xarray.h	/^	u32 max;$/;"	m	struct:xa_limit	typeref:typename:u32
max_comb_1st_msg_len	t/tree/include/linux/i2c.h	/^	u16 max_comb_1st_msg_len;$/;"	m	struct:i2c_adapter_quirks	typeref:typename:u16
max_comb_2nd_msg_len	t/tree/include/linux/i2c.h	/^	u16 max_comb_2nd_msg_len;$/;"	m	struct:i2c_adapter_quirks	typeref:typename:u16
max_num_msgs	t/tree/include/linux/i2c.h	/^	int max_num_msgs;$/;"	m	struct:i2c_adapter_quirks	typeref:typename:int
max_read_len	t/tree/include/linux/i2c.h	/^	u16 max_read_len;$/;"	m	struct:i2c_adapter_quirks	typeref:typename:u16
max_time	t/tree/include/linux/pm_wakeup.h	/^	ktime_t max_time;$/;"	m	struct:wakeup_source	typeref:typename:ktime_t
max_write_len	t/tree/include/linux/i2c.h	/^	u16 max_write_len;$/;"	m	struct:i2c_adapter_quirks	typeref:typename:u16
may_skip_resume	t/tree/include/linux/pm.h	/^	unsigned int		may_skip_resume:1;	\/* Set by subsystems *\/$/;"	m	struct:dev_pm_info	typeref:typename:unsigned int:1
mb	t/tree/include/asm-generic/barrier.h	/^#define mb(/;"	d
mcfg_addr	t/tree/include/acpi/acpi_bus.h	/^	phys_addr_t mcfg_addr;$/;"	m	struct:acpi_pci_root	typeref:typename:phys_addr_t
memalloc_noio	t/tree/include/linux/pm.h	/^	unsigned int		memalloc_noio:1;$/;"	m	struct:dev_pm_info	typeref:typename:unsigned int:1
member	t/tree/issue131.h	/^    int member;$/;"	m	struct:class	typeref:typename:int
memblock	t/tree/include/linux/memblock.h	/^struct memblock {$/;"	s
memblock_alloc	t/tree/include/linux/memblock.h	/^static inline void * __init memblock_alloc(phys_addr_t size,  phys_addr_t align)$/;"	f	typeref:typename:void * __init
memblock_alloc_from	t/tree/include/linux/memblock.h	/^static inline void * __init memblock_alloc_from(phys_addr_t size,$/;"	f	typeref:typename:void * __init
memblock_alloc_low	t/tree/include/linux/memblock.h	/^static inline void * __init memblock_alloc_low(phys_addr_t size,$/;"	f	typeref:typename:void * __init
memblock_alloc_node	t/tree/include/linux/memblock.h	/^static inline void * __init memblock_alloc_node(phys_addr_t size,$/;"	f	typeref:typename:void * __init
memblock_alloc_raw	t/tree/include/linux/memblock.h	/^static inline void * __init memblock_alloc_raw(phys_addr_t size,$/;"	f	typeref:typename:void * __init
memblock_bottom_up	t/tree/include/linux/memblock.h	/^static inline bool memblock_bottom_up(void)$/;"	f	typeref:typename:bool
memblock_dbg	t/tree/include/linux/memblock.h	/^#define memblock_dbg(/;"	d
memblock_discard	t/tree/include/linux/memblock.h	/^static inline void memblock_discard(void) {}$/;"	f	typeref:typename:void
memblock_dump_all	t/tree/include/linux/memblock.h	/^static inline void memblock_dump_all(void)$/;"	f	typeref:typename:void
memblock_flags	t/tree/include/linux/memblock.h	/^enum memblock_flags {$/;"	g
memblock_free_early	t/tree/include/linux/memblock.h	/^static inline void __init memblock_free_early(phys_addr_t base,$/;"	f	typeref:typename:void __init
memblock_free_early_nid	t/tree/include/linux/memblock.h	/^static inline void __init memblock_free_early_nid(phys_addr_t base,$/;"	f	typeref:typename:void __init
memblock_free_late	t/tree/include/linux/memblock.h	/^static inline void __init memblock_free_late(phys_addr_t base, phys_addr_t size)$/;"	f	typeref:typename:void __init
memblock_get_region_node	t/tree/include/linux/memblock.h	/^static inline int memblock_get_region_node(const struct memblock_region *r)$/;"	f	typeref:typename:int
memblock_is_hotpluggable	t/tree/include/linux/memblock.h	/^static inline bool memblock_is_hotpluggable(struct memblock_region *m)$/;"	f	typeref:typename:bool
memblock_is_mirror	t/tree/include/linux/memblock.h	/^static inline bool memblock_is_mirror(struct memblock_region *m)$/;"	f	typeref:typename:bool
memblock_is_nomap	t/tree/include/linux/memblock.h	/^static inline bool memblock_is_nomap(struct memblock_region *m)$/;"	f	typeref:typename:bool
memblock_phys_alloc	t/tree/include/linux/memblock.h	/^static inline phys_addr_t memblock_phys_alloc(phys_addr_t size,$/;"	f	typeref:typename:phys_addr_t
memblock_region	t/tree/include/linux/memblock.h	/^struct memblock_region {$/;"	s
memblock_region_memory_base_pfn	t/tree/include/linux/memblock.h	/^static inline unsigned long memblock_region_memory_base_pfn(const struct memblock_region *reg)$/;"	f	typeref:typename:unsigned long
memblock_region_memory_end_pfn	t/tree/include/linux/memblock.h	/^static inline unsigned long memblock_region_memory_end_pfn(const struct memblock_region *reg)$/;"	f	typeref:typename:unsigned long
memblock_region_reserved_base_pfn	t/tree/include/linux/memblock.h	/^static inline unsigned long memblock_region_reserved_base_pfn(const struct memblock_region *reg)$/;"	f	typeref:typename:unsigned long
memblock_region_reserved_end_pfn	t/tree/include/linux/memblock.h	/^static inline unsigned long memblock_region_reserved_end_pfn(const struct memblock_region *reg)$/;"	f	typeref:typename:unsigned long
memblock_set_bottom_up	t/tree/include/linux/memblock.h	/^static inline void __init memblock_set_bottom_up(bool enable)$/;"	f	typeref:typename:void __init
memblock_set_region_node	t/tree/include/linux/memblock.h	/^static inline void memblock_set_region_node(struct memblock_region *r, int nid)$/;"	f	typeref:typename:void
memblock_type	t/tree/include/linux/memblock.h	/^struct memblock_type {$/;"	s
memcpy_fromio	t/tree/include/asm-generic/io.h	/^#define memcpy_fromio memcpy_fromio$/;"	d
memcpy_fromio	t/tree/include/asm-generic/io.h	/^static inline void memcpy_fromio(void *buffer,$/;"	f	typeref:typename:void
memcpy_toio	t/tree/include/asm-generic/io.h	/^#define memcpy_toio memcpy_toio$/;"	d
memcpy_toio	t/tree/include/asm-generic/io.h	/^static inline void memcpy_toio(volatile void __iomem *addr, const void *buffer,$/;"	f	typeref:typename:void
memory	t/tree/include/linux/memblock.h	/^	struct memblock_type memory;$/;"	m	struct:memblock	typeref:struct:memblock_type
memset_io	t/tree/include/asm-generic/io.h	/^#define memset_io memset_io$/;"	d
memset_io	t/tree/include/asm-generic/io.h	/^static inline void memset_io(volatile void __iomem *addr, int value,$/;"	f	typeref:typename:void
min	t/tree/include/linux/xarray.h	/^	u32 min;$/;"	m	struct:xa_limit	typeref:typename:u32
min_speed	t/tree/drivers/i2c/i2c-core-acpi.c	/^	u32 min_speed;$/;"	m	struct:i2c_acpi_lookup	typeref:typename:u32	file:
module_acpi_driver	t/tree/include/acpi/acpi_bus.h	/^#define module_acpi_driver(/;"	d
module_i2c_driver	t/tree/include/linux/i2c.h	/^#define module_i2c_driver(/;"	d
msgs	t/tree/drivers/i2c/i2c-dev.c	/^	compat_caddr_t msgs; \/* struct i2c_msg __user *msgs *\/$/;"	m	struct:i2c_rdwr_ioctl_data32	typeref:typename:compat_caddr_t	file:
must_resume	t/tree/include/linux/pm.h	/^	unsigned int		must_resume:1;	\/* Owned by the PM core *\/$/;"	m	struct:dev_pm_info	typeref:typename:unsigned int:1
mux_lock	t/tree/include/linux/i2c.h	/^	struct rt_mutex mux_lock;$/;"	m	struct:i2c_adapter	typeref:struct:rt_mutex
mynode	t/tree/include/linux/srcutree.h	/^	struct srcu_node *mynode;		\/* Leaf srcu_node. *\/$/;"	m	struct:srcu_data	typeref:struct:srcu_node *
n	t/tree/drivers/i2c/i2c-core-acpi.c	/^	int n;$/;"	m	struct:i2c_acpi_lookup	typeref:typename:int	file:
name	t/tree/include/acpi/acpi_bus.h	/^	char name[80];$/;"	m	struct:acpi_driver	typeref:typename:char[80]
name	t/tree/include/acpi/acpi_bus.h	/^	const char *name;$/;"	m	struct:acpi_bus_type	typeref:typename:const char *
name	t/tree/include/acpi/acpi_bus.h	/^	const char *name;$/;"	m	struct:acpi_data_node	typeref:typename:const char *
name	t/tree/include/linux/i2c.h	/^	char name[48];$/;"	m	struct:i2c_adapter	typeref:typename:char[48]
name	t/tree/include/linux/i2c.h	/^	char name[I2C_NAME_SIZE];$/;"	m	struct:i2c_client	typeref:typename:char[]
name	t/tree/include/linux/memblock.h	/^	char *name;$/;"	m	struct:memblock_type	typeref:typename:char *
name	t/tree/include/linux/of.h	/^	char	*name;$/;"	m	struct:property	typeref:typename:char *
name	t/tree/include/linux/of.h	/^	const char *name;$/;"	m	struct:device_node	typeref:typename:const char *
name	t/tree/include/linux/of_platform.h	/^	char *name;$/;"	m	struct:of_dev_auxdata	typeref:typename:char *
name	t/tree/include/linux/pm_wakeup.h	/^	const char 		*name;$/;"	m	struct:wakeup_source	typeref:typename:const char *
name_link	t/tree/include/linux/key.h	/^			struct list_head name_link;$/;"	m	struct:key::__anon38d188f8070a::__anon38d188f80808	typeref:struct:list_head
name_show	t/tree/drivers/i2c/i2c-dev.c	/^static ssize_t name_show(struct device *dev,$/;"	f	typeref:typename:ssize_t	file:
next	t/tree/include/linux/of.h	/^	struct property *next;$/;"	m	struct:property	typeref:struct:property *
next	t/tree/include/linux/uprobes.h	/^	struct return_instance	*next;		\/* keep as stack *\/$/;"	m	struct:return_instance	typeref:struct:return_instance *
next	t/tree/include/linux/uprobes.h	/^	struct uprobe_consumer *next;$/;"	m	struct:uprobe_consumer	typeref:struct:uprobe_consumer *
next_index	t/tree/include/linux/radix-tree.h	/^	unsigned long	next_index;$/;"	m	struct:radix_tree_iter	typeref:typename:unsigned long
ngroups	t/tree/include/linux/cred.h	/^	int		ngroups;$/;"	m	struct:group_info	typeref:typename:int
nid	t/tree/include/linux/memblock.h	/^	int nid;$/;"	m	struct:memblock_region	typeref:typename:int
nmsgs	t/tree/drivers/i2c/i2c-dev.c	/^	u32 nmsgs;$/;"	m	struct:i2c_rdwr_ioctl_data32	typeref:typename:u32	file:
no_callbacks	t/tree/include/linux/pm.h	/^	unsigned int		no_callbacks:1;$/;"	m	struct:dev_pm_info	typeref:typename:unsigned int:1
no_pm	t/tree/include/linux/pm.h	/^	bool			no_pm:1;$/;"	m	struct:dev_pm_info	typeref:typename:bool:1
no_pm_callbacks	t/tree/include/linux/pm.h	/^	bool			no_pm_callbacks:1;	\/* Owned by the PM core *\/$/;"	m	struct:dev_pm_info	typeref:typename:bool:1
node	t/tree/drivers/i2c/i2c-stub.c	/^	struct list_head node;$/;"	m	struct:smbus_block_data	typeref:struct:list_head	file:
node	t/tree/include/acpi/acpi_bus.h	/^	struct list_head node;$/;"	m	struct:acpi_bus_event	typeref:struct:list_head
node	t/tree/include/acpi/acpi_bus.h	/^	struct list_head node;$/;"	m	struct:acpi_device	typeref:struct:list_head
node	t/tree/include/acpi/acpi_bus.h	/^	struct list_head node;$/;"	m	struct:acpi_device_physical_node	typeref:struct:list_head
node	t/tree/include/linux/of.h	/^	struct device_node *node;$/;"	m	struct:of_phandle_iterator	typeref:struct:device_node *
node	t/tree/include/linux/of.h	/^	struct list_head node;$/;"	m	struct:of_changeset_entry	typeref:struct:list_head
node	t/tree/include/linux/radix-tree.h	/^	struct radix_tree_node *node;$/;"	m	struct:radix_tree_iter	typeref:struct:radix_tree_node *
node	t/tree/include/linux/srcutree.h	/^	struct srcu_node node[NUM_RCU_NODES];	\/* Combining tree. *\/$/;"	m	struct:srcu_struct	typeref:struct:srcu_node[]
node_id	t/tree/include/acpi/acpi_bus.h	/^	unsigned int node_id;$/;"	m	struct:acpi_device_physical_node	typeref:typename:unsigned int
node_list	t/tree/include/linux/plist.h	/^	struct list_head	node_list;$/;"	m	struct:plist_node	typeref:struct:list_head
node_list	t/tree/include/linux/plist.h	/^	struct list_head node_list;$/;"	m	struct:plist_head	typeref:struct:list_head
non_rcu	t/tree/include/linux/cred.h	/^		int non_rcu;			\/* Can we skip RCU deletion? *\/$/;"	m	union:cred::__anon413a888d010a	typeref:typename:int
nop	t/tree/include/asm-generic/barrier.h	/^#define nop()	asm volatile ("nop"/;"	d
notifier_present	t/tree/include/acpi/acpi_bus.h	/^	u8 notifier_present:1;  \/* Wake-up notify handler has been installed *\/$/;"	m	struct:acpi_device_wakeup_flags	typeref:typename:u8:1
notify	t/tree/include/acpi/acpi_bus.h	/^	acpi_op_notify notify;$/;"	m	struct:acpi_device_ops	typeref:typename:acpi_op_notify
notify	t/tree/include/acpi/acpi_bus.h	/^	int (*notify)(struct acpi_device *, u32);$/;"	m	struct:acpi_hotplug_context	typeref:typename:int (*)(struct acpi_device *,u32)
notify_command_complete	t/tree/include/linux/acpi.h	/^	int (*notify_command_complete)(void);$/;"	m	struct:acpi_debugger_ops	typeref:typename:int (*)(void)
notify_online	t/tree/include/acpi/acpi_bus.h	/^	void (*notify_online)(struct acpi_device *adev);$/;"	m	struct:acpi_hotplug_profile	typeref:typename:void (*)(struct acpi_device * adev)
np	t/tree/include/linux/of.h	/^	struct device_node *np;$/;"	m	struct:of_changeset_entry	typeref:struct:device_node *
np	t/tree/include/linux/of.h	/^	struct device_node *np;$/;"	m	struct:of_phandle_args	typeref:struct:device_node *
nr	t/tree/include/linux/i2c.h	/^	int nr;$/;"	m	struct:i2c_adapter	typeref:typename:int
nr_leaves_on_tree	t/tree/include/linux/assoc_array.h	/^	unsigned long		nr_leaves_on_tree;$/;"	m	struct:assoc_array	typeref:typename:unsigned long
nr_values	t/tree/include/linux/xarray.h	/^	unsigned char	nr_values;	\/* Value entry count *\/$/;"	m	struct:xa_node	typeref:typename:unsigned char
num_resources	t/tree/include/linux/i2c.h	/^	unsigned int	num_resources;$/;"	m	struct:i2c_board_info	typeref:typename:unsigned int
nvram_read_alpha2	t/tree/drivers/firmware/broadcom/bcm74xx_sprom.c	/^static void nvram_read_alpha2(const char *prefix, const char *name,$/;"	f	typeref:typename:void	file:
nvram_read_leddc	t/tree/drivers/firmware/broadcom/bcm74xx_sprom.c	/^static void nvram_read_leddc(const char *prefix, const char *name,$/;"	f	typeref:typename:void	file:
nvram_read_macaddr	t/tree/drivers/firmware/broadcom/bcm74xx_sprom.c	/^static void nvram_read_macaddr(const char *prefix, const char *name,$/;"	f	typeref:typename:void	file:
oem_id	t/tree/include/linux/acpi.h	/^	char	oem_id[ACPI_OEM_ID_SIZE+1];$/;"	m	struct:acpi_platform_list	typeref:typename:char[]
oem_revision	t/tree/include/linux/acpi.h	/^	u32	oem_revision;$/;"	m	struct:acpi_platform_list	typeref:typename:u32
oem_table_id	t/tree/include/linux/acpi.h	/^	char	oem_table_id[ACPI_OEM_TABLE_ID_SIZE+1];$/;"	m	struct:acpi_platform_list	typeref:typename:char[]
of_alias_get_alias_list	t/tree/include/linux/of.h	/^static inline int of_alias_get_alias_list(const struct of_device_id *matches,$/;"	f	typeref:typename:int
of_alias_get_highest_id	t/tree/include/linux/of.h	/^static inline int of_alias_get_highest_id(const char *stem)$/;"	f	typeref:typename:int
of_alias_get_id	t/tree/include/linux/of.h	/^static inline int of_alias_get_id(struct device_node *np, const char *stem)$/;"	f	typeref:typename:int
of_changeset	t/tree/include/linux/of.h	/^struct of_changeset {$/;"	s
of_changeset_add_property	t/tree/include/linux/of.h	/^static inline int of_changeset_add_property(struct of_changeset *ocs,$/;"	f	typeref:typename:int
of_changeset_attach_node	t/tree/include/linux/of.h	/^static inline int of_changeset_attach_node(struct of_changeset *ocs,$/;"	f	typeref:typename:int
of_changeset_detach_node	t/tree/include/linux/of.h	/^static inline int of_changeset_detach_node(struct of_changeset *ocs,$/;"	f	typeref:typename:int
of_changeset_entry	t/tree/include/linux/of.h	/^struct of_changeset_entry {$/;"	s
of_changeset_remove_property	t/tree/include/linux/of.h	/^static inline int of_changeset_remove_property(struct of_changeset *ocs,$/;"	f	typeref:typename:int
of_changeset_update_property	t/tree/include/linux/of.h	/^static inline int of_changeset_update_property(struct of_changeset *ocs,$/;"	f	typeref:typename:int
of_compat_cmp	t/tree/include/linux/of.h	/^#define of_compat_cmp(/;"	d
of_compatible	t/tree/include/acpi/acpi_bus.h	/^	const union acpi_object *of_compatible;$/;"	m	struct:acpi_device_data	typeref:typename:const union acpi_object *
of_compatible_ok	t/tree/include/acpi/acpi_bus.h	/^	u32 of_compatible_ok:1;$/;"	m	struct:acpi_device_flags	typeref:typename:u32:1
of_console_check	t/tree/include/linux/of.h	/^static inline bool of_console_check(const struct device_node *dn, const char *name, int index)$/;"	f	typeref:typename:bool
of_core_init	t/tree/include/linux/of.h	/^static inline void of_core_init(void)$/;"	f	typeref:typename:void
of_count_phandle_with_args	t/tree/include/linux/of.h	/^static inline int of_count_phandle_with_args(struct device_node *np,$/;"	f	typeref:typename:int
of_cpu_node_to_id	t/tree/include/linux/of.h	/^static inline int of_cpu_node_to_id(struct device_node *np)$/;"	f	typeref:typename:int
of_dev_auxdata	t/tree/include/linux/of_platform.h	/^struct of_dev_auxdata {$/;"	s
of_dev_or_parent_node_match	t/tree/drivers/i2c/i2c-core-of.c	/^static int of_dev_or_parent_node_match(struct device *dev, const void *data)$/;"	f	typeref:typename:int	file:
of_device_compatible_match	t/tree/include/linux/of.h	/^static inline  int of_device_compatible_match(struct device_node *device,$/;"	f	typeref:typename:int
of_device_is_available	t/tree/include/linux/of.h	/^static inline bool of_device_is_available(const struct device_node *device)$/;"	f	typeref:typename:bool
of_device_is_big_endian	t/tree/include/linux/of.h	/^static inline bool of_device_is_big_endian(const struct device_node *device)$/;"	f	typeref:typename:bool
of_device_is_compatible	t/tree/include/linux/of.h	/^static inline int of_device_is_compatible(const struct device_node *device,$/;"	f	typeref:typename:int
of_device_is_system_power_controller	t/tree/include/linux/of.h	/^static inline bool of_device_is_system_power_controller(const struct device_node *np)$/;"	f	typeref:typename:bool
of_find_compatible_node	t/tree/include/linux/of.h	/^static inline struct device_node *of_find_compatible_node($/;"	f	typeref:struct:device_node *
of_find_device_by_node	t/tree/include/linux/of_platform.h	/^static inline struct platform_device *of_find_device_by_node(struct device_node *np)$/;"	f	typeref:struct:platform_device *
of_find_i2c_adapter_by_node	t/tree/drivers/i2c/i2c-core-of.c	/^struct i2c_adapter *of_find_i2c_adapter_by_node(struct device_node *node)$/;"	f	typeref:struct:i2c_adapter *
of_find_i2c_adapter_by_node	t/tree/include/linux/i2c.h	/^static inline struct i2c_adapter *of_find_i2c_adapter_by_node(struct device_node *node)$/;"	f	typeref:struct:i2c_adapter *
of_find_i2c_device_by_node	t/tree/drivers/i2c/i2c-core-of.c	/^struct i2c_client *of_find_i2c_device_by_node(struct device_node *node)$/;"	f	typeref:struct:i2c_client *
of_find_i2c_device_by_node	t/tree/include/linux/i2c.h	/^static inline struct i2c_client *of_find_i2c_device_by_node(struct device_node *node)$/;"	f	typeref:struct:i2c_client *
of_find_matching_node	t/tree/include/linux/of.h	/^static inline struct device_node *of_find_matching_node($/;"	f	typeref:struct:device_node *
of_find_matching_node_and_match	t/tree/include/linux/of.h	/^static inline struct device_node *of_find_matching_node_and_match($/;"	f	typeref:struct:device_node *
of_find_node_by_name	t/tree/include/linux/of.h	/^static inline struct device_node *of_find_node_by_name(struct device_node *from,$/;"	f	typeref:struct:device_node *
of_find_node_by_path	t/tree/include/linux/of.h	/^static inline struct device_node *of_find_node_by_path(const char *path)$/;"	f	typeref:struct:device_node *
of_find_node_by_phandle	t/tree/include/linux/of.h	/^static inline struct device_node *of_find_node_by_phandle(phandle handle)$/;"	f	typeref:struct:device_node *
of_find_node_by_type	t/tree/include/linux/of.h	/^static inline struct device_node *of_find_node_by_type(struct device_node *from,$/;"	f	typeref:struct:device_node *
of_find_node_opts_by_path	t/tree/include/linux/of.h	/^static inline struct device_node *of_find_node_opts_by_path(const char *path,$/;"	f	typeref:struct:device_node *
of_find_node_with_property	t/tree/include/linux/of.h	/^static inline struct device_node *of_find_node_with_property($/;"	f	typeref:struct:device_node *
of_find_property	t/tree/include/linux/of.h	/^static inline struct property *of_find_property(const struct device_node *np,$/;"	f	typeref:struct:property *
of_for_each_phandle	t/tree/include/linux/of.h	/^#define of_for_each_phandle(/;"	d
of_fwnode_handle	t/tree/include/linux/of.h	/^#define of_fwnode_handle(/;"	d
of_get_available_child_count	t/tree/include/linux/of.h	/^static inline int of_get_available_child_count(const struct device_node *np)$/;"	f	typeref:typename:int
of_get_child_by_name	t/tree/include/linux/of.h	/^static inline struct device_node *of_get_child_by_name($/;"	f	typeref:struct:device_node *
of_get_child_count	t/tree/include/linux/of.h	/^static inline int of_get_child_count(const struct device_node *np)$/;"	f	typeref:typename:int
of_get_compatible_child	t/tree/include/linux/of.h	/^static inline struct device_node *of_get_compatible_child(const struct device_node *parent,$/;"	f	typeref:struct:device_node *
of_get_cpu_node	t/tree/include/linux/of.h	/^static inline struct device_node *of_get_cpu_node(int cpu,$/;"	f	typeref:struct:device_node *
of_get_i2c_adapter_by_node	t/tree/drivers/i2c/i2c-core-of.c	/^struct i2c_adapter *of_get_i2c_adapter_by_node(struct device_node *node)$/;"	f	typeref:struct:i2c_adapter *
of_get_i2c_adapter_by_node	t/tree/include/linux/i2c.h	/^static inline struct i2c_adapter *of_get_i2c_adapter_by_node(struct device_node *node)$/;"	f	typeref:struct:i2c_adapter *
of_get_next_available_child	t/tree/include/linux/of.h	/^static inline struct device_node *of_get_next_available_child($/;"	f	typeref:struct:device_node *
of_get_next_child	t/tree/include/linux/of.h	/^static inline struct device_node *of_get_next_child($/;"	f	typeref:struct:device_node *
of_get_next_cpu_node	t/tree/include/linux/of.h	/^static inline struct device_node *of_get_next_cpu_node(struct device_node *prev)$/;"	f	typeref:struct:device_node *
of_get_parent	t/tree/include/linux/of.h	/^static inline struct device_node *of_get_parent(const struct device_node *node)$/;"	f	typeref:struct:device_node *
of_get_property	t/tree/include/linux/of.h	/^static inline const void *of_get_property(const struct device_node *node,$/;"	f	typeref:typename:const void *
of_have_populated_dt	t/tree/include/linux/of.h	/^static inline bool of_have_populated_dt(void)$/;"	f	typeref:typename:bool
of_i2c_get_board_info	t/tree/drivers/i2c/i2c-core-of.c	/^int of_i2c_get_board_info(struct device *dev, struct device_node *node,$/;"	f	typeref:typename:int
of_i2c_get_board_info	t/tree/include/linux/i2c.h	/^static inline int of_i2c_get_board_info(struct device *dev,$/;"	f	typeref:typename:int
of_i2c_notify	t/tree/drivers/i2c/i2c-core-of.c	/^static int of_i2c_notify(struct notifier_block *nb, unsigned long action,$/;"	f	typeref:typename:int	file:
of_i2c_register_device	t/tree/drivers/i2c/i2c-core-of.c	/^static struct i2c_client *of_i2c_register_device(struct i2c_adapter *adap,$/;"	f	typeref:struct:i2c_client *	file:
of_i2c_register_devices	t/tree/drivers/i2c/i2c-core-of.c	/^void of_i2c_register_devices(struct i2c_adapter *adap)$/;"	f	typeref:typename:void
of_i2c_register_devices	t/tree/drivers/i2c/i2c-core.h	/^static inline void of_i2c_register_devices(struct i2c_adapter *adap) { }$/;"	f	typeref:typename:void
of_i2c_setup_smbus_alert	t/tree/drivers/i2c/i2c-core-smbus.c	/^int of_i2c_setup_smbus_alert(struct i2c_adapter *adapter)$/;"	f	typeref:typename:int
of_i2c_setup_smbus_alert	t/tree/include/linux/i2c-smbus.h	/^static inline int of_i2c_setup_smbus_alert(struct i2c_adapter *adap)$/;"	f	typeref:typename:int
of_init_fn_1	t/tree/include/linux/of.h	/^typedef void (*of_init_fn_1)(struct device_node *);$/;"	t	typeref:typename:void (*)(struct device_node *)
of_init_fn_1_ret	t/tree/include/linux/of.h	/^typedef int (*of_init_fn_1_ret)(struct device_node *);$/;"	t	typeref:typename:int (*)(struct device_node *)
of_init_fn_2	t/tree/include/linux/of.h	/^typedef int (*of_init_fn_2)(struct device_node *, struct device_node *);$/;"	t	typeref:typename:int (*)(struct device_node *,struct device_node *)
of_machine_is_compatible	t/tree/include/linux/of.h	/^static inline int of_machine_is_compatible(const char *compat)$/;"	f	typeref:typename:int
of_map_rid	t/tree/include/linux/of.h	/^static inline int of_map_rid(struct device_node *np, u32 rid,$/;"	f	typeref:typename:int
of_match_node	t/tree/include/linux/of.h	/^#define of_match_node(/;"	d
of_match_ptr	t/tree/include/linux/of.h	/^#define of_match_ptr(/;"	d
of_n_addr_cells	t/tree/include/linux/of.h	/^static inline int of_n_addr_cells(struct device_node *np)$/;"	f	typeref:typename:int
of_n_size_cells	t/tree/include/linux/of.h	/^static inline int of_n_size_cells(struct device_node *np)$/;"	f	typeref:typename:int
of_node	t/tree/include/linux/i2c.h	/^	struct device_node *of_node;$/;"	m	struct:i2c_board_info	typeref:struct:device_node *
of_node_check_flag	t/tree/include/linux/of.h	/^static inline int of_node_check_flag(struct device_node *n, unsigned long flag)$/;"	f	typeref:typename:int
of_node_clear_flag	t/tree/include/linux/of.h	/^static inline void of_node_clear_flag(struct device_node *n, unsigned long flag)$/;"	f	typeref:typename:void
of_node_cmp	t/tree/include/linux/of.h	/^#define of_node_cmp(/;"	d
of_node_full_name	t/tree/include/linux/of.h	/^static inline const char *of_node_full_name(const struct device_node *np)$/;"	f	typeref:typename:const char *
of_node_full_name	t/tree/include/linux/of.h	/^static inline const char* of_node_full_name(const struct device_node *np)$/;"	f	typeref:typename:const char *
of_node_get	t/tree/include/linux/of.h	/^static inline struct device_node *of_node_get(struct device_node *node)$/;"	f	typeref:struct:device_node *
of_node_get_device_type	t/tree/include/linux/of.h	/^static inline const char *of_node_get_device_type(const struct device_node *np)$/;"	f	typeref:typename:const char *
of_node_init	t/tree/include/linux/of.h	/^static inline void of_node_init(struct device_node *node)$/;"	f	typeref:typename:void
of_node_is_root	t/tree/include/linux/of.h	/^static inline bool of_node_is_root(const struct device_node *node)$/;"	f	typeref:typename:bool
of_node_is_type	t/tree/include/linux/of.h	/^static inline bool of_node_is_type(const struct device_node *np, const char *type)$/;"	f	typeref:typename:bool
of_node_kobj	t/tree/include/linux/of.h	/^#define of_node_kobj(/;"	d
of_node_name_eq	t/tree/include/linux/of.h	/^static inline bool of_node_name_eq(const struct device_node *np, const char *name)$/;"	f	typeref:typename:bool
of_node_name_prefix	t/tree/include/linux/of.h	/^static inline bool of_node_name_prefix(const struct device_node *np, const char *prefix)$/;"	f	typeref:typename:bool
of_node_put	t/tree/include/linux/of.h	/^static inline void of_node_put(struct device_node *node) { }$/;"	f	typeref:typename:void
of_node_set_flag	t/tree/include/linux/of.h	/^static inline void of_node_set_flag(struct device_node *n, unsigned long flag)$/;"	f	typeref:typename:void
of_node_test_and_set_flag	t/tree/include/linux/of.h	/^static inline int of_node_test_and_set_flag(struct device_node *n,$/;"	f	typeref:typename:int
of_node_to_nid	t/tree/include/linux/of.h	/^static inline int of_node_to_nid(struct device_node *device)$/;"	f	typeref:typename:int
of_numa_init	t/tree/include/linux/of.h	/^static inline int of_numa_init(void)$/;"	f	typeref:typename:int
of_overlay_fdt_apply	t/tree/include/linux/of.h	/^static inline int of_overlay_fdt_apply(void *overlay_fdt, u32 overlay_fdt_size,$/;"	f	typeref:typename:int
of_overlay_notifier_register	t/tree/include/linux/of.h	/^static inline int of_overlay_notifier_register(struct notifier_block *nb)$/;"	f	typeref:typename:int
of_overlay_notifier_unregister	t/tree/include/linux/of.h	/^static inline int of_overlay_notifier_unregister(struct notifier_block *nb)$/;"	f	typeref:typename:int
of_overlay_notify_action	t/tree/include/linux/of.h	/^enum of_overlay_notify_action {$/;"	g
of_overlay_notify_data	t/tree/include/linux/of.h	/^struct of_overlay_notify_data {$/;"	s
of_overlay_remove	t/tree/include/linux/of.h	/^static inline int of_overlay_remove(int *ovcs_id)$/;"	f	typeref:typename:int
of_overlay_remove_all	t/tree/include/linux/of.h	/^static inline int of_overlay_remove_all(void)$/;"	f	typeref:typename:int
of_parse_phandle	t/tree/include/linux/of.h	/^static inline struct device_node *of_parse_phandle(const struct device_node *np,$/;"	f	typeref:struct:device_node *
of_parse_phandle_with_args	t/tree/include/linux/of.h	/^static inline int of_parse_phandle_with_args(const struct device_node *np,$/;"	f	typeref:typename:int
of_parse_phandle_with_args_map	t/tree/include/linux/of.h	/^static inline int of_parse_phandle_with_args_map(const struct device_node *np,$/;"	f	typeref:typename:int
of_parse_phandle_with_fixed_args	t/tree/include/linux/of.h	/^static inline int of_parse_phandle_with_fixed_args(const struct device_node *np,$/;"	f	typeref:typename:int
of_phandle_args	t/tree/include/linux/of.h	/^struct of_phandle_args {$/;"	s
of_phandle_iterator	t/tree/include/linux/of.h	/^struct of_phandle_iterator {$/;"	s
of_phandle_iterator_args	t/tree/include/linux/of.h	/^static inline int of_phandle_iterator_args(struct of_phandle_iterator *it,$/;"	f	typeref:typename:int
of_phandle_iterator_init	t/tree/include/linux/of.h	/^static inline int of_phandle_iterator_init(struct of_phandle_iterator *it,$/;"	f	typeref:typename:int
of_phandle_iterator_next	t/tree/include/linux/of.h	/^static inline int of_phandle_iterator_next(struct of_phandle_iterator *it)$/;"	f	typeref:typename:int
of_platform_default_populate	t/tree/include/linux/of_platform.h	/^static inline int of_platform_default_populate(struct device_node *root,$/;"	f	typeref:typename:int
of_platform_depopulate	t/tree/include/linux/of_platform.h	/^static inline void of_platform_depopulate(struct device *parent) { }$/;"	f	typeref:typename:void
of_platform_populate	t/tree/include/linux/of_platform.h	/^static inline int of_platform_populate(struct device_node *root,$/;"	f	typeref:typename:int
of_platform_register_reconfig_notifier	t/tree/include/linux/of_platform.h	/^static inline void of_platform_register_reconfig_notifier(void) { }$/;"	f	typeref:typename:void
of_prop_cmp	t/tree/include/linux/of.h	/^#define of_prop_cmp(/;"	d
of_prop_next_string	t/tree/include/linux/of.h	/^static inline const char *of_prop_next_string(struct property *prop,$/;"	f	typeref:typename:const char *
of_prop_next_u32	t/tree/include/linux/of.h	/^static inline const __be32 *of_prop_next_u32(struct property *prop,$/;"	f	typeref:typename:const __be32 *
of_prop_val_eq	t/tree/include/linux/of.h	/^static inline int of_prop_val_eq(struct property *p1, struct property *p2)$/;"	f	typeref:typename:int
of_property_check_flag	t/tree/include/linux/of.h	/^static inline int of_property_check_flag(struct property *p, unsigned long flag)$/;"	f	typeref:typename:int
of_property_clear_flag	t/tree/include/linux/of.h	/^static inline void of_property_clear_flag(struct property *p, unsigned long flag)$/;"	f	typeref:typename:void
of_property_count_elems_of_size	t/tree/include/linux/of.h	/^static inline int of_property_count_elems_of_size(const struct device_node *np,$/;"	f	typeref:typename:int
of_property_count_strings	t/tree/include/linux/of.h	/^static inline int of_property_count_strings(const struct device_node *np,$/;"	f	typeref:typename:int
of_property_count_u16_elems	t/tree/include/linux/of.h	/^static inline int of_property_count_u16_elems(const struct device_node *np,$/;"	f	typeref:typename:int
of_property_count_u32_elems	t/tree/include/linux/of.h	/^static inline int of_property_count_u32_elems(const struct device_node *np,$/;"	f	typeref:typename:int
of_property_count_u64_elems	t/tree/include/linux/of.h	/^static inline int of_property_count_u64_elems(const struct device_node *np,$/;"	f	typeref:typename:int
of_property_count_u8_elems	t/tree/include/linux/of.h	/^static inline int of_property_count_u8_elems(const struct device_node *np,$/;"	f	typeref:typename:int
of_property_for_each_string	t/tree/include/linux/of.h	/^#define of_property_for_each_string(/;"	d
of_property_for_each_u32	t/tree/include/linux/of.h	/^#define of_property_for_each_u32(/;"	d
of_property_match_string	t/tree/include/linux/of.h	/^static inline int of_property_match_string(const struct device_node *np,$/;"	f	typeref:typename:int
of_property_read_bool	t/tree/include/linux/of.h	/^static inline bool of_property_read_bool(const struct device_node *np,$/;"	f	typeref:typename:bool
of_property_read_s32	t/tree/include/linux/of.h	/^static inline int of_property_read_s32(const struct device_node *np,$/;"	f	typeref:typename:int
of_property_read_string	t/tree/include/linux/of.h	/^static inline int of_property_read_string(const struct device_node *np,$/;"	f	typeref:typename:int
of_property_read_string_array	t/tree/include/linux/of.h	/^static inline int of_property_read_string_array(const struct device_node *np,$/;"	f	typeref:typename:int
of_property_read_string_helper	t/tree/include/linux/of.h	/^static inline int of_property_read_string_helper(const struct device_node *np,$/;"	f	typeref:typename:int
of_property_read_string_index	t/tree/include/linux/of.h	/^static inline int of_property_read_string_index(const struct device_node *np,$/;"	f	typeref:typename:int
of_property_read_u16	t/tree/include/linux/of.h	/^static inline int of_property_read_u16(const struct device_node *np,$/;"	f	typeref:typename:int
of_property_read_u16_array	t/tree/include/linux/of.h	/^static inline int of_property_read_u16_array(const struct device_node *np,$/;"	f	typeref:typename:int
of_property_read_u32	t/tree/include/linux/of.h	/^static inline int of_property_read_u32(const struct device_node *np,$/;"	f	typeref:typename:int
of_property_read_u32_array	t/tree/include/linux/of.h	/^static inline int of_property_read_u32_array(const struct device_node *np,$/;"	f	typeref:typename:int
of_property_read_u32_index	t/tree/include/linux/of.h	/^static inline int of_property_read_u32_index(const struct device_node *np,$/;"	f	typeref:typename:int
of_property_read_u64	t/tree/include/linux/of.h	/^static inline int of_property_read_u64(const struct device_node *np,$/;"	f	typeref:typename:int
of_property_read_u64_array	t/tree/include/linux/of.h	/^static inline int of_property_read_u64_array(const struct device_node *np,$/;"	f	typeref:typename:int
of_property_read_u64_index	t/tree/include/linux/of.h	/^static inline int of_property_read_u64_index(const struct device_node *np,$/;"	f	typeref:typename:int
of_property_read_u8	t/tree/include/linux/of.h	/^static inline int of_property_read_u8(const struct device_node *np,$/;"	f	typeref:typename:int
of_property_read_u8_array	t/tree/include/linux/of.h	/^static inline int of_property_read_u8_array(const struct device_node *np,$/;"	f	typeref:typename:int
of_property_read_variable_u16_array	t/tree/include/linux/of.h	/^static inline int of_property_read_variable_u16_array(const struct device_node *np,$/;"	f	typeref:typename:int
of_property_read_variable_u32_array	t/tree/include/linux/of.h	/^static inline int of_property_read_variable_u32_array(const struct device_node *np,$/;"	f	typeref:typename:int
of_property_read_variable_u64_array	t/tree/include/linux/of.h	/^static inline int of_property_read_variable_u64_array(const struct device_node *np,$/;"	f	typeref:typename:int
of_property_read_variable_u8_array	t/tree/include/linux/of.h	/^static inline int of_property_read_variable_u8_array(const struct device_node *np,$/;"	f	typeref:typename:int
of_property_set_flag	t/tree/include/linux/of.h	/^static inline void of_property_set_flag(struct property *p, unsigned long flag)$/;"	f	typeref:typename:void
of_read_number	t/tree/include/linux/of.h	/^static inline u64 of_read_number(const __be32 *cell, int size)$/;"	f	typeref:typename:u64
of_read_ulong	t/tree/include/linux/of.h	/^static inline unsigned long of_read_ulong(const __be32 *cell, int size)$/;"	f	typeref:typename:unsigned long
of_reconfig_change	t/tree/include/linux/of.h	/^enum of_reconfig_change {$/;"	g
of_reconfig_data	t/tree/include/linux/of.h	/^struct of_reconfig_data {$/;"	s
of_reconfig_get_state_change	t/tree/include/linux/of.h	/^static inline int of_reconfig_get_state_change(unsigned long action,$/;"	f	typeref:typename:int
of_reconfig_notifier_register	t/tree/include/linux/of.h	/^static inline int of_reconfig_notifier_register(struct notifier_block *nb)$/;"	f	typeref:typename:int
of_reconfig_notifier_unregister	t/tree/include/linux/of.h	/^static inline int of_reconfig_notifier_unregister(struct notifier_block *nb)$/;"	f	typeref:typename:int
of_reconfig_notify	t/tree/include/linux/of.h	/^static inline int of_reconfig_notify(unsigned long action,$/;"	f	typeref:typename:int
offloaded	t/tree/include/linux/rcu_segcblist.h	/^	u8 offloaded;$/;"	m	struct:rcu_segcblist	typeref:typename:u8
offs	t/tree/arch/x86/include/asm/uprobes.h	/^			s32	offs;$/;"	m	struct:arch_uprobe::__anon323fcd42020a::__anon323fcd420308	typeref:typename:s32
offset	t/tree/include/linux/xarray.h	/^	unsigned char	offset;		\/* Slot offset in parent *\/$/;"	m	struct:xa_node	typeref:typename:unsigned char
offset	t/tree/include/uapi/linux/apm_bios.h	/^	__u32	offset;$/;"	m	struct:apm_bios_info	typeref:typename:__u32
old_prop	t/tree/include/linux/of.h	/^	struct property		*old_prop;$/;"	m	struct:of_reconfig_data	typeref:struct:property *
old_prop	t/tree/include/linux/of.h	/^	struct property *old_prop;$/;"	m	struct:of_changeset_entry	typeref:struct:property *
opc1	t/tree/arch/x86/include/asm/uprobes.h	/^			u8	opc1;$/;"	m	struct:arch_uprobe::__anon323fcd42020a::__anon323fcd420308	typeref:typename:u8
ops	t/tree/arch/x86/include/asm/uprobes.h	/^	const struct uprobe_xol_ops	*ops;$/;"	m	struct:arch_uprobe	typeref:typename:const struct uprobe_xol_ops *
ops	t/tree/include/acpi/acpi_bus.h	/^	struct acpi_device_ops ops;$/;"	m	struct:acpi_driver	typeref:struct:acpi_device_ops
ops	t/tree/include/linux/acpi.h	/^	const struct acpi_debugger_ops *ops;$/;"	m	struct:acpi_debugger	typeref:typename:const struct acpi_debugger_ops *
ops	t/tree/include/linux/logic_pio.h	/^	const struct logic_pio_host_ops *ops;$/;"	m	struct:logic_pio_hwaddr	typeref:typename:const struct logic_pio_host_ops *
ops	t/tree/include/linux/pm.h	/^	struct dev_pm_ops	ops;$/;"	m	struct:dev_pm_domain	typeref:struct:dev_pm_ops
orc_entry	t/tree/arch/x86/include/asm/orc_types.h	/^struct orc_entry {$/;"	s
order_base_2	t/tree/include/linux/log2.h	/^#define order_base_2(/;"	d
orig_ret_vaddr	t/tree/include/linux/uprobes.h	/^	unsigned long		orig_ret_vaddr; \/* original return address *\/$/;"	m	struct:return_instance	typeref:typename:unsigned long
osc_control_set	t/tree/include/acpi/acpi_bus.h	/^	u32 osc_control_set;	\/* _OSC state of control bits *\/$/;"	m	struct:acpi_pci_root	typeref:typename:u32
osc_support_set	t/tree/include/acpi/acpi_bus.h	/^	u32 osc_support_set;	\/* _OSC state of support bits *\/$/;"	m	struct:acpi_pci_root	typeref:typename:u32
out	t/tree/include/linux/logic_pio.h	/^	void (*out)(void *hostdata, unsigned long addr, u32 val,$/;"	m	struct:logic_pio_host_ops	typeref:typename:void (*)(void * hostdata,unsigned long addr,u32 val,size_t dwidth)
outb	t/tree/include/asm-generic/io.h	/^#define outb outb$/;"	d
outb	t/tree/include/asm-generic/io.h	/^static inline void outb(u8 value, unsigned long addr)$/;"	f	typeref:typename:void
outb	t/tree/include/linux/logic_pio.h	/^#define outb logic_outb$/;"	d
outb_p	t/tree/include/asm-generic/io.h	/^#define outb_p outb_p$/;"	d
outb_p	t/tree/include/asm-generic/io.h	/^static inline void outb_p(u8 value, unsigned long addr)$/;"	f	typeref:typename:void
outl	t/tree/include/asm-generic/io.h	/^#define outl outl$/;"	d
outl	t/tree/include/asm-generic/io.h	/^static inline void outl(u32 value, unsigned long addr)$/;"	f	typeref:typename:void
outl	t/tree/include/linux/logic_pio.h	/^#define outl logic_outl$/;"	d
outl_p	t/tree/include/asm-generic/io.h	/^#define outl_p outl_p$/;"	d
outl_p	t/tree/include/asm-generic/io.h	/^static inline void outl_p(u32 value, unsigned long addr)$/;"	f	typeref:typename:void
outs	t/tree/include/linux/logic_pio.h	/^	void (*outs)(void *hostdata, unsigned long addr, const void *buffer,$/;"	m	struct:logic_pio_host_ops	typeref:typename:void (*)(void * hostdata,unsigned long addr,const void * buffer,size_t dwidth,unsigned int count)
outsb	t/tree/include/asm-generic/io.h	/^#define outsb outsb$/;"	d
outsb	t/tree/include/asm-generic/io.h	/^static inline void outsb(unsigned long addr, const void *buffer,$/;"	f	typeref:typename:void
outsb	t/tree/include/linux/logic_pio.h	/^#define outsb logic_outsb$/;"	d
outsb_p	t/tree/include/asm-generic/io.h	/^#define outsb_p outsb_p$/;"	d
outsb_p	t/tree/include/asm-generic/io.h	/^static inline void outsb_p(unsigned long addr, const void *buffer,$/;"	f	typeref:typename:void
outsl	t/tree/include/asm-generic/io.h	/^#define outsl outsl$/;"	d
outsl	t/tree/include/asm-generic/io.h	/^static inline void outsl(unsigned long addr, const void *buffer,$/;"	f	typeref:typename:void
outsl	t/tree/include/linux/logic_pio.h	/^#define outsl logic_outsl$/;"	d
outsl_p	t/tree/include/asm-generic/io.h	/^#define outsl_p outsl_p$/;"	d
outsl_p	t/tree/include/asm-generic/io.h	/^static inline void outsl_p(unsigned long addr, const void *buffer,$/;"	f	typeref:typename:void
outsw	t/tree/include/asm-generic/io.h	/^#define outsw outsw$/;"	d
outsw	t/tree/include/asm-generic/io.h	/^static inline void outsw(unsigned long addr, const void *buffer,$/;"	f	typeref:typename:void
outsw	t/tree/include/linux/logic_pio.h	/^#define outsw logic_outsw$/;"	d
outsw_p	t/tree/include/asm-generic/io.h	/^#define outsw_p outsw_p$/;"	d
outsw_p	t/tree/include/asm-generic/io.h	/^static inline void outsw_p(unsigned long addr, const void *buffer,$/;"	f	typeref:typename:void
outw	t/tree/include/asm-generic/io.h	/^#define outw outw$/;"	d
outw	t/tree/include/asm-generic/io.h	/^static inline void outw(u16 value, unsigned long addr)$/;"	f	typeref:typename:void
outw	t/tree/include/linux/logic_pio.h	/^#define outw logic_outw$/;"	d
outw_p	t/tree/include/asm-generic/io.h	/^#define outw_p outw_p$/;"	d
outw_p	t/tree/include/asm-generic/io.h	/^static inline void outw_p(u16 value, unsigned long addr)$/;"	f	typeref:typename:void
overlay	t/tree/include/linux/of.h	/^	struct device_node *overlay;$/;"	m	struct:of_overlay_notify_data	typeref:struct:device_node *
owner	t/tree/include/acpi/acpi_bus.h	/^	struct module *owner;$/;"	m	struct:acpi_driver	typeref:struct:module *
owner	t/tree/include/linux/acpi.h	/^	struct module *owner;$/;"	m	struct:acpi_debugger	typeref:struct:module *
owner	t/tree/include/linux/i2c.h	/^	struct module *owner;$/;"	m	struct:i2c_adapter	typeref:struct:module *
padding	t/tree/include/uapi/linux/rseq.h	/^			__u32 padding;		\/* Initialized to zero. *\/$/;"	m	struct:rseq::__anon24fc28e8010a::__anon24fc28e80208	typeref:typename:__u32
parent	t/tree/include/acpi/acpi_bus.h	/^	struct acpi_device *parent;$/;"	m	struct:acpi_device	typeref:struct:acpi_device *
parent	t/tree/include/acpi/acpi_bus.h	/^	struct fwnode_handle *parent;$/;"	m	struct:acpi_data_node	typeref:struct:fwnode_handle *
parent	t/tree/include/linux/of.h	/^	const struct device_node *parent;$/;"	m	struct:of_phandle_iterator	typeref:typename:const struct device_node *
parent	t/tree/include/linux/of.h	/^	struct	device_node *parent;$/;"	m	struct:device_node	typeref:struct:device_node *
parent	t/tree/include/linux/xarray.h	/^	struct xa_node __rcu *parent;	\/* NULL at top of tree *\/$/;"	m	struct:xa_node	typeref:struct:xa_node __rcu *
part_id	t/tree/include/linux/i2c.h	/^	u16 part_id;$/;"	m	struct:i2c_device_identity	typeref:typename:u16
payload	t/tree/include/linux/key.h	/^		union key_payload payload;$/;"	m	union:key::__anon38d188f8070a	typeref:union:key_payload
pci_acpi_crs_quirks	t/tree/include/acpi/acpi_drivers.h	/^static inline void pci_acpi_crs_quirks(void) { }$/;"	f	typeref:typename:void
pci_iomap	t/tree/include/asm-generic/pci_iomap.h	/^static inline void __iomem *pci_iomap(struct pci_dev *dev, int bar, unsigned long max)$/;"	f	typeref:typename:void __iomem *
pci_iomap_range	t/tree/include/asm-generic/pci_iomap.h	/^static inline void __iomem *pci_iomap_range(struct pci_dev *dev, int bar,$/;"	f	typeref:typename:void __iomem *
pci_iomap_wc	t/tree/include/asm-generic/pci_iomap.h	/^static inline void __iomem *pci_iomap_wc(struct pci_dev *dev, int bar, unsigned long max)$/;"	f	typeref:typename:void __iomem *
pci_iomap_wc_range	t/tree/include/asm-generic/pci_iomap.h	/^static inline void __iomem *pci_iomap_wc_range(struct pci_dev *dev, int bar,$/;"	f	typeref:typename:void __iomem *
pci_iounmap	t/tree/include/asm-generic/io.h	/^#define pci_iounmap pci_iounmap$/;"	d
pci_iounmap	t/tree/include/asm-generic/io.h	/^static inline void pci_iounmap(struct pci_dev *dev, void __iomem *p)$/;"	f	typeref:typename:void
pending	t/tree/include/asm-generic/qspinlock_types.h	/^			u8	pending;$/;"	m	struct:qspinlock::__anond60321f2010a::__anond60321f20208	typeref:typename:u8
pending	t/tree/include/asm-generic/qspinlock_types.h	/^			u8	pending;$/;"	m	struct:qspinlock::__anond60321f2010a::__anond60321f20508	typeref:typename:u8
perf_level	t/tree/arch/x86/include/uapi/asm/ist.h	/^	__u32 perf_level;$/;"	m	struct:ist_info	typeref:typename:__u32
performance	t/tree/include/acpi/acpi_bus.h	/^	struct acpi_device_perf performance;$/;"	m	struct:acpi_device	typeref:struct:acpi_device_perf
performance	t/tree/include/acpi/acpi_bus.h	/^	u8 performance;		\/* % Performance (    "   ) *\/$/;"	m	struct:acpi_device_perf_state	typeref:typename:u8
perm	t/tree/include/linux/key.h	/^	key_perm_t		perm;		\/* access permissions *\/$/;"	m	struct:key	typeref:typename:key_perm_t
phandle	t/tree/include/linux/of.h	/^	phandle phandle;$/;"	m	struct:device_node	typeref:typename:phandle
phandle	t/tree/include/linux/of.h	/^	phandle phandle;$/;"	m	struct:of_phandle_iterator	typeref:typename:phandle
phandle	t/tree/include/linux/of.h	/^typedef u32 phandle;$/;"	t	typeref:typename:u32
phandle_end	t/tree/include/linux/of.h	/^	const __be32 *phandle_end;$/;"	m	struct:of_phandle_iterator	typeref:typename:const __be32 *
phys_addr	t/tree/include/linux/of_platform.h	/^	resource_size_t phys_addr;$/;"	m	struct:of_dev_auxdata	typeref:typename:resource_size_t
phys_cpuid_t	t/tree/include/linux/acpi.h	/^typedef u32 phys_cpuid_t;$/;"	t	typeref:typename:u32
phys_to_virt	t/tree/include/asm-generic/io.h	/^#define phys_to_virt phys_to_virt$/;"	d
phys_to_virt	t/tree/include/asm-generic/io.h	/^static inline void *phys_to_virt(unsigned long address)$/;"	f	typeref:typename:void *
physical_node_count	t/tree/include/acpi/acpi_bus.h	/^	unsigned int physical_node_count;$/;"	m	struct:acpi_device	typeref:typename:unsigned int
physical_node_list	t/tree/include/acpi/acpi_bus.h	/^	struct list_head physical_node_list;$/;"	m	struct:acpi_device	typeref:struct:list_head
physical_node_lock	t/tree/include/acpi/acpi_bus.h	/^	struct mutex physical_node_lock;$/;"	m	struct:acpi_device	typeref:struct:mutex
physmem	t/tree/include/linux/memblock.h	/^	struct memblock_type physmem;$/;"	m	struct:memblock	typeref:struct:memblock_type
platform_data	t/tree/include/linux/i2c.h	/^	void		*platform_data;$/;"	m	struct:i2c_board_info	typeref:typename:void *
platform_data	t/tree/include/linux/of_platform.h	/^	void *platform_data;$/;"	m	struct:of_dev_auxdata	typeref:typename:void *
platform_id	t/tree/include/acpi/acpi_bus.h	/^	u32 platform_id:1;$/;"	m	struct:acpi_pnp_type	typeref:typename:u32:1
plist_first	t/tree/include/linux/plist.h	/^static inline struct plist_node *plist_first(const struct plist_head *head)$/;"	f	typeref:struct:plist_node *
plist_first_entry	t/tree/include/linux/plist.h	/^# define plist_first_entry(/;"	d
plist_for_each	t/tree/include/linux/plist.h	/^#define plist_for_each(/;"	d
plist_for_each_continue	t/tree/include/linux/plist.h	/^#define plist_for_each_continue(/;"	d
plist_for_each_entry	t/tree/include/linux/plist.h	/^#define plist_for_each_entry(/;"	d
plist_for_each_entry_continue	t/tree/include/linux/plist.h	/^#define plist_for_each_entry_continue(/;"	d
plist_for_each_entry_safe	t/tree/include/linux/plist.h	/^#define plist_for_each_entry_safe(/;"	d
plist_for_each_safe	t/tree/include/linux/plist.h	/^#define plist_for_each_safe(/;"	d
plist_head	t/tree/include/linux/plist.h	/^struct plist_head {$/;"	s
plist_head_empty	t/tree/include/linux/plist.h	/^static inline int plist_head_empty(const struct plist_head *head)$/;"	f	typeref:typename:int
plist_head_init	t/tree/include/linux/plist.h	/^plist_head_init(struct plist_head *head)$/;"	f	typeref:typename:void
plist_last	t/tree/include/linux/plist.h	/^static inline struct plist_node *plist_last(const struct plist_head *head)$/;"	f	typeref:struct:plist_node *
plist_last_entry	t/tree/include/linux/plist.h	/^# define plist_last_entry(/;"	d
plist_next	t/tree/include/linux/plist.h	/^#define plist_next(/;"	d
plist_node	t/tree/include/linux/plist.h	/^struct plist_node {$/;"	s
plist_node_empty	t/tree/include/linux/plist.h	/^static inline int plist_node_empty(const struct plist_node *node)$/;"	f	typeref:typename:int
plist_node_init	t/tree/include/linux/plist.h	/^static inline void plist_node_init(struct plist_node *node, int prio)$/;"	f	typeref:typename:void
plist_prev	t/tree/include/linux/plist.h	/^#define plist_prev(/;"	d
pm_generic_complete	t/tree/include/linux/pm.h	/^#define pm_generic_complete	/;"	d
pm_generic_freeze	t/tree/include/linux/pm.h	/^#define pm_generic_freeze	/;"	d
pm_generic_freeze_late	t/tree/include/linux/pm.h	/^#define pm_generic_freeze_late	/;"	d
pm_generic_freeze_noirq	t/tree/include/linux/pm.h	/^#define pm_generic_freeze_noirq	/;"	d
pm_generic_poweroff	t/tree/include/linux/pm.h	/^#define pm_generic_poweroff	/;"	d
pm_generic_poweroff_late	t/tree/include/linux/pm.h	/^#define pm_generic_poweroff_late	/;"	d
pm_generic_poweroff_noirq	t/tree/include/linux/pm.h	/^#define pm_generic_poweroff_noirq	/;"	d
pm_generic_prepare	t/tree/include/linux/pm.h	/^#define pm_generic_prepare	/;"	d
pm_generic_restore	t/tree/include/linux/pm.h	/^#define pm_generic_restore	/;"	d
pm_generic_restore_early	t/tree/include/linux/pm.h	/^#define pm_generic_restore_early	/;"	d
pm_generic_restore_noirq	t/tree/include/linux/pm.h	/^#define pm_generic_restore_noirq	/;"	d
pm_generic_resume	t/tree/include/linux/pm.h	/^#define pm_generic_resume	/;"	d
pm_generic_resume_early	t/tree/include/linux/pm.h	/^#define pm_generic_resume_early	/;"	d
pm_generic_resume_noirq	t/tree/include/linux/pm.h	/^#define pm_generic_resume_noirq	/;"	d
pm_generic_suspend	t/tree/include/linux/pm.h	/^#define pm_generic_suspend	/;"	d
pm_generic_suspend_late	t/tree/include/linux/pm.h	/^#define pm_generic_suspend_late	/;"	d
pm_generic_suspend_noirq	t/tree/include/linux/pm.h	/^#define pm_generic_suspend_noirq	/;"	d
pm_generic_thaw	t/tree/include/linux/pm.h	/^#define pm_generic_thaw	/;"	d
pm_generic_thaw_early	t/tree/include/linux/pm.h	/^#define pm_generic_thaw_early	/;"	d
pm_generic_thaw_noirq	t/tree/include/linux/pm.h	/^#define pm_generic_thaw_noirq	/;"	d
pm_message	t/tree/include/linux/pm.h	/^typedef struct pm_message {$/;"	s
pm_message_t	t/tree/include/linux/pm.h	/^} pm_message_t;$/;"	t	typeref:struct:pm_message
pm_relax	t/tree/include/linux/pm_wakeup.h	/^static inline void pm_relax(struct device *dev) {}$/;"	f	typeref:typename:void
pm_stay_awake	t/tree/include/linux/pm_wakeup.h	/^static inline void pm_stay_awake(struct device *dev) {}$/;"	f	typeref:typename:void
pm_subsys_data	t/tree/include/linux/pm.h	/^struct pm_subsys_data {$/;"	s
pm_vt_switch_required	t/tree/include/linux/pm.h	/^static inline void pm_vt_switch_required(struct device *dev, bool required)$/;"	f	typeref:typename:void
pm_vt_switch_unregister	t/tree/include/linux/pm.h	/^static inline void pm_vt_switch_unregister(struct device *dev)$/;"	f	typeref:typename:void
pm_wakeup_dev_event	t/tree/include/linux/pm_wakeup.h	/^static inline void pm_wakeup_dev_event(struct device *dev, unsigned int msec,$/;"	f	typeref:typename:void
pm_wakeup_event	t/tree/include/linux/pm_wakeup.h	/^static inline void pm_wakeup_event(struct device *dev, unsigned int msec)$/;"	f	typeref:typename:void
pm_wakeup_hard_event	t/tree/include/linux/pm_wakeup.h	/^static inline void pm_wakeup_hard_event(struct device *dev)$/;"	f	typeref:typename:void
pm_wakeup_ws_event	t/tree/include/linux/pm_wakeup.h	/^static inline void pm_wakeup_ws_event(struct wakeup_source *ws,$/;"	f	typeref:typename:void
pnp	t/tree/include/acpi/acpi_bus.h	/^	struct acpi_device_pnp pnp;$/;"	m	struct:acpi_device	typeref:struct:acpi_device_pnp
pointer	t/tree/drivers/i2c/i2c-stub.c	/^	u8 pointer;$/;"	m	struct:stub_chip	typeref:typename:u8	file:
pointer	t/tree/include/acpi/acpi_bus.h	/^	const union acpi_object *pointer;$/;"	m	struct:acpi_device_data	typeref:typename:const union acpi_object *
post_commit_offset	t/tree/include/uapi/linux/rseq.h	/^	__u64 post_commit_offset;$/;"	m	struct:rseq_cs	typeref:typename:__u64
power	t/tree/include/acpi/acpi_bus.h	/^	int power;		\/* % Power (compared to D0) *\/$/;"	m	struct:acpi_device_power_state	typeref:typename:int
power	t/tree/include/acpi/acpi_bus.h	/^	struct acpi_device_power power;$/;"	m	struct:acpi_device	typeref:struct:acpi_device_power
power	t/tree/include/acpi/acpi_bus.h	/^	u8 power;		\/* % Power (compared to P0) *\/$/;"	m	struct:acpi_device_perf_state	typeref:typename:u8
power_group_name	t/tree/include/linux/pm.h	/^#define power_group_name	/;"	d
power_manageable	t/tree/include/acpi/acpi_bus.h	/^	u32 power_manageable:1;$/;"	m	struct:acpi_device_flags	typeref:typename:u32:1
power_removed	t/tree/include/acpi/acpi_bus.h	/^	u32 power_removed:1;	\/* Optimize Dx->D0 *\/$/;"	m	struct:acpi_device_power_flags	typeref:typename:u32:1
power_resources	t/tree/include/acpi/acpi_bus.h	/^	u32 power_resources:1;	\/* Power resources *\/$/;"	m	struct:acpi_device_power_flags	typeref:typename:u32:1
power_state	t/tree/include/linux/pm.h	/^	pm_message_t		power_state;$/;"	m	struct:dev_pm_info	typeref:typename:pm_message_t
poweroff	t/tree/include/linux/pm.h	/^	int (*poweroff)(struct device *dev);$/;"	m	struct:dev_pm_ops	typeref:typename:int (*)(struct device * dev)
poweroff_late	t/tree/include/linux/pm.h	/^	int (*poweroff_late)(struct device *dev);$/;"	m	struct:dev_pm_ops	typeref:typename:int (*)(struct device * dev)
poweroff_noirq	t/tree/include/linux/pm.h	/^	int (*poweroff_noirq)(struct device *dev);$/;"	m	struct:dev_pm_ops	typeref:typename:int (*)(struct device * dev)
pr_fmt	t/tree/drivers/i2c/i2c-core-base.c	/^#define pr_fmt(/;"	d	file:
pr_fmt	t/tree/drivers/i2c/i2c-stub.c	/^#define pr_fmt(/;"	d	file:
pred	t/tree/include/linux/acpi.h	/^	enum acpi_predicate pred;$/;"	m	struct:acpi_platform_list	typeref:enum:acpi_predicate
prepare	t/tree/include/linux/pm.h	/^	int (*prepare)(struct device *dev);$/;"	m	struct:dev_pm_ops	typeref:typename:int (*)(struct device * dev)
prepare_count	t/tree/include/acpi/acpi_bus.h	/^	int prepare_count;$/;"	m	struct:acpi_device_wakeup	typeref:typename:int
prepare_recovery	t/tree/include/linux/i2c.h	/^	void (*prepare_recovery)(struct i2c_adapter *adap);$/;"	m	struct:i2c_bus_recovery_info	typeref:typename:void (*)(struct i2c_adapter * adap)
present	t/tree/include/acpi/acpi_bus.h	/^	u32 present:1;$/;"	m	struct:acpi_device_status	typeref:typename:u32:1
prevent_sleep_time	t/tree/include/linux/pm_wakeup.h	/^	ktime_t prevent_sleep_time;$/;"	m	struct:wakeup_source	typeref:typename:ktime_t
prio	t/tree/include/linux/plist.h	/^	int			prio;$/;"	m	struct:plist_node	typeref:typename:int
prio_list	t/tree/include/linux/plist.h	/^	struct list_head	prio_list;$/;"	m	struct:plist_node	typeref:struct:list_head
private_list	t/tree/include/linux/xarray.h	/^		struct list_head private_list;	\/* For tree user *\/$/;"	m	union:xa_node::__anonde33faa6010a	typeref:struct:list_head
probe	t/tree/include/linux/i2c.h	/^	int (*probe)(struct i2c_client *client, const struct i2c_device_id *id);$/;"	m	struct:i2c_driver	typeref:typename:int (*)(struct i2c_client * client,const struct i2c_device_id * id)
probe_new	t/tree/include/linux/i2c.h	/^	int (*probe_new)(struct i2c_client *client);$/;"	m	struct:i2c_driver	typeref:typename:int (*)(struct i2c_client * client)
probe_subtbl	t/tree/include/linux/acpi.h	/^		acpi_tbl_entry_handler probe_subtbl;$/;"	m	union:acpi_probe_entry::__anon3b86e52c010a	typeref:typename:acpi_tbl_entry_handler
probe_table	t/tree/include/linux/acpi.h	/^		acpi_tbl_table_handler probe_table;$/;"	m	union:acpi_probe_entry::__anon3b86e52c010a	typeref:typename:acpi_tbl_table_handler
process_keyring	t/tree/include/linux/cred.h	/^	struct key	*process_keyring; \/* keyring private to this process *\/$/;"	m	struct:cred	typeref:struct:key *
prop	t/tree/include/linux/of.h	/^	struct property		*prop;$/;"	m	struct:of_reconfig_data	typeref:struct:property *
prop	t/tree/include/linux/of.h	/^	struct property *prop;$/;"	m	struct:of_changeset_entry	typeref:struct:property *
properties	t/tree/include/acpi/acpi_bus.h	/^	const union acpi_object *properties;$/;"	m	struct:acpi_device_properties	typeref:typename:const union acpi_object *
properties	t/tree/include/acpi/acpi_bus.h	/^	struct list_head properties;$/;"	m	struct:acpi_device_data	typeref:struct:list_head
properties	t/tree/include/linux/i2c.h	/^	const struct property_entry *properties;$/;"	m	struct:i2c_board_info	typeref:typename:const struct property_entry *
properties	t/tree/include/linux/of.h	/^	struct	property *properties;$/;"	m	struct:device_node	typeref:struct:property *
property	t/tree/include/linux/of.h	/^struct property {$/;"	s
ptr	t/tree/include/uapi/linux/rseq.h	/^		__u64 ptr;$/;"	m	union:rseq::__anon24fc28e8010a	typeref:typename:__u64
ptr	t/tree/include/uapi/linux/rseq.h	/^		} ptr;$/;"	m	union:rseq::__anon24fc28e8010a	typeref:struct:rseq::__anon24fc28e8010a::__anon24fc28e80208
ptr32	t/tree/include/uapi/linux/rseq.h	/^			__u32 ptr32;$/;"	m	struct:rseq::__anon24fc28e8010a::__anon24fc28e80208	typeref:typename:__u32
ptr64	t/tree/include/uapi/linux/rseq.h	/^		__u64 ptr64;$/;"	m	union:rseq::__anon24fc28e8010a	typeref:typename:__u64
push	t/tree/arch/x86/include/asm/uprobes.h	/^		}			push;$/;"	m	union:arch_uprobe::__anon323fcd42020a	typeref:struct:arch_uprobe::__anon323fcd42020a::__anon323fcd420508
put_addr	t/tree/include/linux/cred.h	/^	void		*put_addr;$/;"	m	struct:cred	typeref:typename:void *
put_cred	t/tree/include/linux/cred.h	/^static inline void put_cred(const struct cred *_cred)$/;"	f	typeref:typename:void
put_group_info	t/tree/include/linux/cred.h	/^#define put_group_info(/;"	d
put_i2c_dev	t/tree/drivers/i2c/i2c-dev.c	/^static void put_i2c_dev(struct i2c_dev *i2c_dev)$/;"	f	typeref:typename:void	file:
put_online	t/tree/include/acpi/acpi_bus.h	/^	bool put_online:1;$/;"	m	struct:acpi_device_physical_node	typeref:typename:bool:1
qos	t/tree/include/linux/pm.h	/^	struct dev_pm_qos	*qos;$/;"	m	struct:dev_pm_info	typeref:struct:dev_pm_qos *
qspinlock	t/tree/include/asm-generic/qspinlock_types.h	/^typedef struct qspinlock {$/;"	s
queued_read_lock	t/tree/include/asm-generic/qrwlock.h	/^static inline void queued_read_lock(struct qrwlock *lock)$/;"	f	typeref:typename:void
queued_read_trylock	t/tree/include/asm-generic/qrwlock.h	/^static inline int queued_read_trylock(struct qrwlock *lock)$/;"	f	typeref:typename:int
queued_read_unlock	t/tree/include/asm-generic/qrwlock.h	/^static inline void queued_read_unlock(struct qrwlock *lock)$/;"	f	typeref:typename:void
queued_spin_is_contended	t/tree/include/asm-generic/qspinlock.h	/^static __always_inline int queued_spin_is_contended(struct qspinlock *lock)$/;"	f	typeref:typename:__always_inline int
queued_spin_is_locked	t/tree/include/asm-generic/qspinlock.h	/^static __always_inline int queued_spin_is_locked(struct qspinlock *lock)$/;"	f	typeref:typename:__always_inline int
queued_spin_lock	t/tree/include/asm-generic/qspinlock.h	/^static __always_inline void queued_spin_lock(struct qspinlock *lock)$/;"	f	typeref:typename:__always_inline void
queued_spin_trylock	t/tree/include/asm-generic/qspinlock.h	/^static __always_inline int queued_spin_trylock(struct qspinlock *lock)$/;"	f	typeref:typename:__always_inline int
queued_spin_unlock	t/tree/include/asm-generic/qspinlock.h	/^static __always_inline void queued_spin_unlock(struct qspinlock *lock)$/;"	f	typeref:typename:__always_inline void
queued_spin_value_unlocked	t/tree/include/asm-generic/qspinlock.h	/^static __always_inline int queued_spin_value_unlocked(struct qspinlock lock)$/;"	f	typeref:typename:__always_inline int
queued_write_lock	t/tree/include/asm-generic/qrwlock.h	/^static inline void queued_write_lock(struct qrwlock *lock)$/;"	f	typeref:typename:void
queued_write_trylock	t/tree/include/asm-generic/qrwlock.h	/^static inline int queued_write_trylock(struct qrwlock *lock)$/;"	f	typeref:typename:int
queued_write_unlock	t/tree/include/asm-generic/qrwlock.h	/^static inline void queued_write_unlock(struct qrwlock *lock)$/;"	f	typeref:typename:void
quirks	t/tree/include/linux/i2c.h	/^	const struct i2c_adapter_quirks *quirks;$/;"	m	struct:i2c_adapter	typeref:typename:const struct i2c_adapter_quirks *
quotalen	t/tree/include/linux/key.h	/^	unsigned short		quotalen;	\/* length added to quota *\/$/;"	m	struct:key	typeref:typename:unsigned short
radix_tree_chunk_size	t/tree/include/linux/radix-tree.h	/^radix_tree_chunk_size(struct radix_tree_iter *iter)$/;"	f	typeref:typename:__always_inline long
radix_tree_deref_retry	t/tree/include/linux/radix-tree.h	/^static inline int radix_tree_deref_retry(void *arg)$/;"	f	typeref:typename:int
radix_tree_deref_slot	t/tree/include/linux/radix-tree.h	/^static inline void *radix_tree_deref_slot(void __rcu **slot)$/;"	f	typeref:typename:void *
radix_tree_deref_slot_protected	t/tree/include/linux/radix-tree.h	/^static inline void *radix_tree_deref_slot_protected(void __rcu **slot,$/;"	f	typeref:typename:void *
radix_tree_empty	t/tree/include/linux/radix-tree.h	/^static inline bool radix_tree_empty(const struct radix_tree_root *root)$/;"	f	typeref:typename:bool
radix_tree_exception	t/tree/include/linux/radix-tree.h	/^static inline int radix_tree_exception(void *arg)$/;"	f	typeref:typename:int
radix_tree_for_each_slot	t/tree/include/linux/radix-tree.h	/^#define radix_tree_for_each_slot(/;"	d
radix_tree_for_each_tagged	t/tree/include/linux/radix-tree.h	/^#define radix_tree_for_each_tagged(/;"	d
radix_tree_is_internal_node	t/tree/include/linux/radix-tree.h	/^static inline bool radix_tree_is_internal_node(void *ptr)$/;"	f	typeref:typename:bool
radix_tree_iter	t/tree/include/linux/radix-tree.h	/^struct radix_tree_iter {$/;"	s
radix_tree_iter_init	t/tree/include/linux/radix-tree.h	/^radix_tree_iter_init(struct radix_tree_iter *iter, unsigned long start)$/;"	f	typeref:typename:__always_inline void __rcu **
radix_tree_iter_lookup	t/tree/include/linux/radix-tree.h	/^radix_tree_iter_lookup(const struct radix_tree_root *root,$/;"	f	typeref:typename:void __rcu **
radix_tree_iter_retry	t/tree/include/linux/radix-tree.h	/^void __rcu **radix_tree_iter_retry(struct radix_tree_iter *iter)$/;"	f	typeref:typename:__must_check void __rcu **
radix_tree_next_slot	t/tree/include/linux/radix-tree.h	/^static __always_inline void __rcu **radix_tree_next_slot(void __rcu **slot,$/;"	f	typeref:typename:__always_inline void __rcu **
radix_tree_node	t/tree/include/linux/radix-tree.h	/^#define radix_tree_node	/;"	d
radix_tree_preload_end	t/tree/include/linux/radix-tree.h	/^static inline void radix_tree_preload_end(void)$/;"	f	typeref:typename:void
radix_tree_root	t/tree/include/linux/radix-tree.h	/^#define radix_tree_root	/;"	d
rb_entry	t/tree/include/linux/rbtree.h	/^#define	rb_entry(/;"	d
rb_entry_safe	t/tree/include/linux/rbtree.h	/^#define rb_entry_safe(/;"	d
rb_erase_cached	t/tree/include/linux/rbtree.h	/^static inline void rb_erase_cached(struct rb_node *node,$/;"	f	typeref:typename:void
rb_first_cached	t/tree/include/linux/rbtree.h	/^#define rb_first_cached(/;"	d
rb_insert_color_cached	t/tree/include/linux/rbtree.h	/^static inline void rb_insert_color_cached(struct rb_node *node,$/;"	f	typeref:typename:void
rb_left	t/tree/include/linux/rbtree.h	/^	struct rb_node *rb_left;$/;"	m	struct:rb_node	typeref:struct:rb_node *
rb_leftmost	t/tree/include/linux/rbtree.h	/^	struct rb_node *rb_leftmost;$/;"	m	struct:rb_root_cached	typeref:struct:rb_node *
rb_link_node	t/tree/include/linux/rbtree.h	/^static inline void rb_link_node(struct rb_node *node, struct rb_node *parent,$/;"	f	typeref:typename:void
rb_link_node_rcu	t/tree/include/linux/rbtree.h	/^static inline void rb_link_node_rcu(struct rb_node *node, struct rb_node *parent,$/;"	f	typeref:typename:void
rb_node	t/tree/include/linux/rbtree.h	/^	struct rb_node *rb_node;$/;"	m	struct:rb_root	typeref:struct:rb_node *
rb_node	t/tree/include/linux/rbtree.h	/^struct rb_node {$/;"	s
rb_parent	t/tree/include/linux/rbtree.h	/^#define rb_parent(r)   ((struct rb_node *)((r)->__rb_parent_/;"	d
rb_replace_node_cached	t/tree/include/linux/rbtree.h	/^static inline void rb_replace_node_cached(struct rb_node *victim,$/;"	f	typeref:typename:void
rb_right	t/tree/include/linux/rbtree.h	/^	struct rb_node *rb_right;$/;"	m	struct:rb_node	typeref:struct:rb_node *
rb_root	t/tree/include/linux/rbtree.h	/^	struct rb_root rb_root;$/;"	m	struct:rb_root_cached	typeref:struct:rb_root
rb_root	t/tree/include/linux/rbtree.h	/^struct rb_root {$/;"	s
rb_root_cached	t/tree/include/linux/rbtree.h	/^struct rb_root_cached {$/;"	s
rbtree_postorder_for_each_entry_safe	t/tree/include/linux/rbtree.h	/^#define rbtree_postorder_for_each_entry_safe(/;"	d
rcu	t/tree/include/linux/cred.h	/^		struct rcu_head	rcu;		\/* RCU deletion hook *\/$/;"	m	union:cred::__anon413a888d010a	typeref:struct:rcu_head
rcu	t/tree/include/linux/key.h	/^	struct rcu_head		rcu;$/;"	m	struct:key_tag	typeref:struct:rcu_head
rcu_access_pointer	t/tree/include/linux/rcupdate.h	/^#define rcu_access_pointer(p) __rcu_access_pointer(/;"	d
rcu_assign_keypointer	t/tree/include/linux/key.h	/^#define rcu_assign_keypointer(/;"	d
rcu_assign_pointer	t/tree/include/linux/rcupdate.h	/^#define rcu_assign_pointer(/;"	d
rcu_cblist	t/tree/include/linux/rcu_segcblist.h	/^struct rcu_cblist {$/;"	s
rcu_check_sparse	t/tree/include/linux/rcupdate.h	/^#define rcu_check_sparse(/;"	d
rcu_data0	t/tree/include/linux/key.h	/^	void __rcu		*rcu_data0;$/;"	m	union:key_payload	typeref:typename:void __rcu *
rcu_dereference	t/tree/include/linux/rcupdate.h	/^#define rcu_dereference(p) rcu_dereference_/;"	d
rcu_dereference_bh	t/tree/include/linux/rcupdate.h	/^#define rcu_dereference_bh(p) rcu_dereference_bh_/;"	d
rcu_dereference_bh_check	t/tree/include/linux/rcupdate.h	/^#define rcu_dereference_bh_check(/;"	d
rcu_dereference_check	t/tree/include/linux/rcupdate.h	/^#define rcu_dereference_check(/;"	d
rcu_dereference_protected	t/tree/include/linux/rcupdate.h	/^#define rcu_dereference_protected(/;"	d
rcu_dereference_raw	t/tree/include/linux/rcupdate.h	/^#define rcu_dereference_raw(/;"	d
rcu_dereference_raw_check	t/tree/include/linux/rcupdate.h	/^#define rcu_dereference_raw_check(/;"	d
rcu_dereference_sched	t/tree/include/linux/rcupdate.h	/^#define rcu_dereference_sched(p) rcu_dereference_sched_/;"	d
rcu_dereference_sched_check	t/tree/include/linux/rcupdate.h	/^#define rcu_dereference_sched_check(/;"	d
rcu_head	t/tree/include/linux/xarray.h	/^		struct rcu_head	rcu_head;	\/* Used when freeing node *\/$/;"	m	union:xa_node::__anonde33faa6010a	typeref:struct:rcu_head
rcu_head_after_call_rcu	t/tree/include/linux/rcupdate.h	/^rcu_head_after_call_rcu(struct rcu_head *rhp, rcu_callback_t f)$/;"	f	typeref:typename:bool
rcu_head_init	t/tree/include/linux/rcupdate.h	/^static inline void rcu_head_init(struct rcu_head *rhp)$/;"	f	typeref:typename:void
rcu_init_nohz	t/tree/include/linux/rcupdate.h	/^static inline void rcu_init_nohz(void) { }$/;"	f	typeref:typename:void
rcu_lock_acquire	t/tree/include/linux/rcupdate.h	/^# define rcu_lock_acquire(/;"	d
rcu_lock_acquire	t/tree/include/linux/rcupdate.h	/^static inline void rcu_lock_acquire(struct lockdep_map *map)$/;"	f	typeref:typename:void
rcu_lock_release	t/tree/include/linux/rcupdate.h	/^# define rcu_lock_release(/;"	d
rcu_lock_release	t/tree/include/linux/rcupdate.h	/^static inline void rcu_lock_release(struct lockdep_map *map)$/;"	f	typeref:typename:void
rcu_lockdep_current_cpu_online	t/tree/include/linux/rcupdate.h	/^static inline bool rcu_lockdep_current_cpu_online(void) { return true; }$/;"	f	typeref:typename:bool
rcu_note_voluntary_context_switch	t/tree/include/linux/rcupdate.h	/^#define rcu_note_voluntary_context_switch(/;"	d
rcu_pointer_handoff	t/tree/include/linux/rcupdate.h	/^#define rcu_pointer_handoff(/;"	d
rcu_preempt_depth	t/tree/include/linux/rcupdate.h	/^#define rcu_preempt_depth(/;"	d
rcu_preempt_depth	t/tree/include/linux/rcupdate.h	/^static inline int rcu_preempt_depth(void)$/;"	f	typeref:typename:int
rcu_preempt_sleep_check	t/tree/include/linux/rcupdate.h	/^static inline void rcu_preempt_sleep_check(void) { }$/;"	f	typeref:typename:void
rcu_preempt_sleep_check	t/tree/include/linux/rcupdate.h	/^static inline void rcu_preempt_sleep_check(void)$/;"	f	typeref:typename:void
rcu_read_lock	t/tree/include/linux/rcupdate.h	/^static __always_inline void rcu_read_lock(void)$/;"	f	typeref:typename:__always_inline void
rcu_read_lock_any_held	t/tree/include/linux/rcupdate.h	/^static inline int rcu_read_lock_any_held(void)$/;"	f	typeref:typename:int
rcu_read_lock_bh	t/tree/include/linux/rcupdate.h	/^static inline void rcu_read_lock_bh(void)$/;"	f	typeref:typename:void
rcu_read_lock_bh_held	t/tree/include/linux/rcupdate.h	/^static inline int rcu_read_lock_bh_held(void)$/;"	f	typeref:typename:int
rcu_read_lock_held	t/tree/include/linux/rcupdate.h	/^static inline int rcu_read_lock_held(void)$/;"	f	typeref:typename:int
rcu_read_lock_sched	t/tree/include/linux/rcupdate.h	/^static inline void rcu_read_lock_sched(void)$/;"	f	typeref:typename:void
rcu_read_lock_sched_held	t/tree/include/linux/rcupdate.h	/^static inline int rcu_read_lock_sched_held(void)$/;"	f	typeref:typename:int
rcu_read_lock_sched_notrace	t/tree/include/linux/rcupdate.h	/^static inline notrace void rcu_read_lock_sched_notrace(void)$/;"	f	typeref:typename:notrace void
rcu_read_unlock	t/tree/include/linux/rcupdate.h	/^static inline void rcu_read_unlock(void)$/;"	f	typeref:typename:void
rcu_read_unlock_bh	t/tree/include/linux/rcupdate.h	/^static inline void rcu_read_unlock_bh(void)$/;"	f	typeref:typename:void
rcu_read_unlock_sched	t/tree/include/linux/rcupdate.h	/^static inline void rcu_read_unlock_sched(void)$/;"	f	typeref:typename:void
rcu_read_unlock_sched_notrace	t/tree/include/linux/rcupdate.h	/^static inline notrace void rcu_read_unlock_sched_notrace(void)$/;"	f	typeref:typename:notrace void
rcu_segcblist	t/tree/include/linux/rcu_segcblist.h	/^struct rcu_segcblist {$/;"	s
rcu_sleep_check	t/tree/include/linux/rcupdate.h	/^#define rcu_sleep_check(/;"	d
rcu_swap_protected	t/tree/include/linux/rcupdate.h	/^#define rcu_swap_protected(/;"	d
rcu_sync	t/tree/include/linux/rcu_sync.h	/^struct rcu_sync {$/;"	s
rcu_sync_is_idle	t/tree/include/linux/rcu_sync.h	/^static inline bool rcu_sync_is_idle(struct rcu_sync *rsp)$/;"	f	typeref:typename:bool
rcu_sysrq_end	t/tree/include/linux/rcupdate.h	/^static inline void rcu_sysrq_end(void) { }$/;"	f	typeref:typename:void
rcu_sysrq_start	t/tree/include/linux/rcupdate.h	/^static inline void rcu_sysrq_start(void) { }$/;"	f	typeref:typename:void
rcu_tasks_qs	t/tree/include/linux/rcupdate.h	/^#define rcu_tasks_qs(/;"	d
rcu_user_enter	t/tree/include/linux/rcupdate.h	/^static inline void rcu_user_enter(void) { }$/;"	f	typeref:typename:void
rcu_user_exit	t/tree/include/linux/rcupdate.h	/^static inline void rcu_user_exit(void) { }$/;"	f	typeref:typename:void
rcu_virt_note_context_switch	t/tree/include/linux/rcutree.h	/^static inline void rcu_virt_note_context_switch(int cpu)$/;"	f	typeref:typename:void
read_barrier_depends	t/tree/include/asm-generic/barrier.h	/^#define read_barrier_depends(/;"	d
read_cmd	t/tree/include/linux/acpi.h	/^	ssize_t (*read_cmd)(char *buffer, size_t length);$/;"	m	struct:acpi_debugger_ops	typeref:typename:ssize_t (*)(char * buffer,size_t length)
read_write	t/tree/drivers/i2c/i2c-dev.c	/^	u8 read_write;$/;"	m	struct:i2c_smbus_ioctl_data32	typeref:typename:u8	file:
readb	t/tree/include/asm-generic/io.h	/^#define readb readb$/;"	d
readb	t/tree/include/asm-generic/io.h	/^static inline u8 readb(const volatile void __iomem *addr)$/;"	f	typeref:typename:u8
readb_relaxed	t/tree/include/asm-generic/io.h	/^#define readb_relaxed readb_relaxed$/;"	d
readb_relaxed	t/tree/include/asm-generic/io.h	/^static inline u8 readb_relaxed(const volatile void __iomem *addr)$/;"	f	typeref:typename:u8
readl	t/tree/include/asm-generic/io.h	/^#define readl readl$/;"	d
readl	t/tree/include/asm-generic/io.h	/^static inline u32 readl(const volatile void __iomem *addr)$/;"	f	typeref:typename:u32
readl_relaxed	t/tree/include/asm-generic/io.h	/^#define readl_relaxed readl_relaxed$/;"	d
readl_relaxed	t/tree/include/asm-generic/io.h	/^static inline u32 readl_relaxed(const volatile void __iomem *addr)$/;"	f	typeref:typename:u32
readq	t/tree/include/asm-generic/io.h	/^#define readq readq$/;"	d
readq	t/tree/include/asm-generic/io.h	/^static inline u64 readq(const volatile void __iomem *addr)$/;"	f	typeref:typename:u64
readq_relaxed	t/tree/include/asm-generic/io.h	/^#define readq_relaxed readq_relaxed$/;"	d
readq_relaxed	t/tree/include/asm-generic/io.h	/^static inline u64 readq_relaxed(const volatile void __iomem *addr)$/;"	f	typeref:typename:u64
readsb	t/tree/include/asm-generic/io.h	/^#define readsb readsb$/;"	d
readsb	t/tree/include/asm-generic/io.h	/^static inline void readsb(const volatile void __iomem *addr, void *buffer,$/;"	f	typeref:typename:void
readsl	t/tree/include/asm-generic/io.h	/^#define readsl readsl$/;"	d
readsl	t/tree/include/asm-generic/io.h	/^static inline void readsl(const volatile void __iomem *addr, void *buffer,$/;"	f	typeref:typename:void
readsq	t/tree/include/asm-generic/io.h	/^#define readsq readsq$/;"	d
readsq	t/tree/include/asm-generic/io.h	/^static inline void readsq(const volatile void __iomem *addr, void *buffer,$/;"	f	typeref:typename:void
readsw	t/tree/include/asm-generic/io.h	/^#define readsw readsw$/;"	d
readsw	t/tree/include/asm-generic/io.h	/^static inline void readsw(const volatile void __iomem *addr, void *buffer,$/;"	f	typeref:typename:void
readw	t/tree/include/asm-generic/io.h	/^#define readw readw$/;"	d
readw	t/tree/include/asm-generic/io.h	/^static inline u16 readw(const volatile void __iomem *addr)$/;"	f	typeref:typename:u16
readw_relaxed	t/tree/include/asm-generic/io.h	/^#define readw_relaxed readw_relaxed$/;"	d
readw_relaxed	t/tree/include/asm-generic/io.h	/^static inline u16 readw_relaxed(const volatile void __iomem *addr)$/;"	f	typeref:typename:u16
realmode_power_off	t/tree/include/linux/apm_bios.h	/^	int			realmode_power_off;$/;"	m	struct:apm_info	typeref:typename:int
reason	t/tree/include/linux/acpi.h	/^	char	*reason;$/;"	m	struct:acpi_platform_list	typeref:typename:char *
recover_bus	t/tree/include/linux/i2c.h	/^	int (*recover_bus)(struct i2c_adapter *adap);$/;"	m	struct:i2c_bus_recovery_info	typeref:typename:int (*)(struct i2c_adapter * adap)
refcount	t/tree/include/linux/pm.h	/^	unsigned int refcount;$/;"	m	struct:pm_subsys_data	typeref:typename:unsigned int
reg_offset	t/tree/arch/x86/include/asm/uprobes.h	/^			u8	reg_offset;	\/* to the start of pt_regs *\/$/;"	m	struct:arch_uprobe::__anon323fcd42020a::__anon323fcd420508	typeref:typename:u8
reg_slave	t/tree/include/linux/i2c.h	/^	int (*reg_slave)(struct i2c_client *client);$/;"	m	struct:i2c_algorithm	typeref:typename:int (*)(struct i2c_client * client)
regions	t/tree/include/linux/memblock.h	/^	struct memblock_region *regions;$/;"	m	struct:memblock_type	typeref:struct:memblock_region *
register_acpi_bus_type	t/tree/include/acpi/acpi_bus.h	/^static inline int register_acpi_bus_type(void *bus) { return 0; }$/;"	f	typeref:typename:int
relax_count	t/tree/include/linux/pm_wakeup.h	/^	unsigned long		relax_count;$/;"	m	struct:wakeup_source	typeref:typename:unsigned long
removable	t/tree/include/acpi/acpi_bus.h	/^	u32 removable:1;$/;"	m	struct:acpi_device_flags	typeref:typename:u32:1
remove	t/tree/include/acpi/acpi_bus.h	/^	acpi_op_remove remove;$/;"	m	struct:acpi_device_ops	typeref:typename:acpi_op_remove
remove	t/tree/include/acpi/acpi_bus.h	/^	void (*remove)(struct acpi_device *);$/;"	m	struct:acpi_device	typeref:typename:void (*)(struct acpi_device *)
remove	t/tree/include/linux/i2c.h	/^	int (*remove)(struct i2c_client *client);$/;"	m	struct:i2c_driver	typeref:typename:int (*)(struct i2c_client * client)
removed	t/tree/include/linux/key.h	/^	bool			removed;	\/* T when subject removed *\/$/;"	m	struct:key_tag	typeref:typename:bool
request	t/tree/include/linux/pm.h	/^	enum rpm_request	request;$/;"	m	struct:dev_pm_info	typeref:enum:rpm_request
request_key	t/tree/include/linux/key.h	/^static inline struct key *request_key(struct key_type *type,$/;"	f	typeref:struct:key *
request_key_auth	t/tree/include/linux/cred.h	/^	struct key	*request_key_auth; \/* assumed request_key authority *\/$/;"	m	struct:cred	typeref:struct:key *
request_key_net	t/tree/include/linux/key.h	/^#define request_key_net(/;"	d
request_key_net_rcu	t/tree/include/linux/key.h	/^#define request_key_net_rcu(/;"	d
request_module	t/tree/include/linux/kmod.h	/^#define request_module(mod...) __request_module(/;"	d
request_module	t/tree/include/linux/kmod.h	/^static inline int request_module(const char *name, ...) { return -ENOSYS; }$/;"	f	typeref:typename:int
request_module_nowait	t/tree/include/linux/kmod.h	/^#define request_module_nowait(/;"	d
request_module_nowait	t/tree/include/linux/kmod.h	/^static inline int request_module_nowait(const char *name, ...) { return -ENOSYS; }$/;"	f	typeref:typename:int
request_pending	t/tree/include/linux/pm.h	/^	unsigned int		request_pending:1;$/;"	m	struct:dev_pm_info	typeref:typename:unsigned int:1
reserved	t/tree/include/acpi/acpi_bus.h	/^		u8 reserved:6;$/;"	m	struct:acpi_device_power_state::__anonbbafac820108	typeref:typename:u8:6
reserved	t/tree/include/acpi/acpi_bus.h	/^		u8 reserved:7;$/;"	m	struct:acpi_device_perf_state::__anonbbafac820208	typeref:typename:u8:7
reserved	t/tree/include/acpi/acpi_bus.h	/^	u32 reserved:19;$/;"	m	struct:acpi_device_flags	typeref:typename:u32:19
reserved	t/tree/include/acpi/acpi_bus.h	/^	u32 reserved:26;$/;"	m	struct:acpi_device_power_flags	typeref:typename:u32:26
reserved	t/tree/include/acpi/acpi_bus.h	/^	u32 reserved:27;$/;"	m	struct:acpi_device_status	typeref:typename:u32:27
reserved	t/tree/include/acpi/acpi_bus.h	/^	u32 reserved:29;$/;"	m	struct:acpi_pnp_type	typeref:typename:u32:29
reserved	t/tree/include/acpi/acpi_bus.h	/^	u8 reserved:8;$/;"	m	struct:acpi_device_perf_flags	typeref:typename:u8:8
reserved	t/tree/include/asm-generic/qspinlock_types.h	/^			u8	reserved[2];$/;"	m	struct:qspinlock::__anond60321f2010a::__anond60321f20508	typeref:typename:u8[2]
reserved	t/tree/include/linux/memblock.h	/^	struct memblock_type reserved;$/;"	m	struct:memblock	typeref:struct:memblock_type
resources	t/tree/include/acpi/acpi_bus.h	/^	struct list_head resources;	\/* Power resources referenced *\/$/;"	m	struct:acpi_device_power_state	typeref:struct:list_head
resources	t/tree/include/acpi/acpi_bus.h	/^	struct list_head resources;$/;"	m	struct:acpi_device_wakeup	typeref:struct:list_head
resources	t/tree/include/linux/i2c.h	/^	const struct resource *resources;$/;"	m	struct:i2c_board_info	typeref:typename:const struct resource *
restore	t/tree/include/linux/pm.h	/^	int (*restore)(struct device *dev);$/;"	m	struct:dev_pm_ops	typeref:typename:int (*)(struct device * dev)
restore_early	t/tree/include/linux/pm.h	/^	int (*restore_early)(struct device *dev);$/;"	m	struct:dev_pm_ops	typeref:typename:int (*)(struct device * dev)
restore_noirq	t/tree/include/linux/pm.h	/^	int (*restore_noirq)(struct device *dev);$/;"	m	struct:dev_pm_ops	typeref:typename:int (*)(struct device * dev)
restrict_link	t/tree/include/linux/key.h	/^	struct key_restriction *restrict_link;$/;"	m	struct:key	typeref:struct:key_restriction *
resume	t/tree/include/linux/pm.h	/^	int (*resume)(struct device *dev);$/;"	m	struct:dev_pm_ops	typeref:typename:int (*)(struct device * dev)
resume_early	t/tree/include/linux/pm.h	/^	int (*resume_early)(struct device *dev);$/;"	m	struct:dev_pm_ops	typeref:typename:int (*)(struct device * dev)
resume_noirq	t/tree/include/linux/pm.h	/^	int (*resume_noirq)(struct device *dev);$/;"	m	struct:dev_pm_ops	typeref:typename:int (*)(struct device * dev)
ret	t/tree/include/linux/acpi.h	/^	struct acpi_buffer ret;		\/* free by caller if success *\/$/;"	m	struct:acpi_osc_context	typeref:struct:acpi_buffer
ret_handler	t/tree/include/linux/uprobes.h	/^	int (*ret_handler)(struct uprobe_consumer *self,$/;"	m	struct:uprobe_consumer	typeref:typename:int (*)(struct uprobe_consumer * self,unsigned long func,struct pt_regs * regs)
retries	t/tree/include/linux/i2c.h	/^	int retries;$/;"	m	struct:i2c_adapter	typeref:typename:int
return_instance	t/tree/include/linux/uprobes.h	/^struct return_instance {$/;"	s
return_instances	t/tree/include/linux/uprobes.h	/^	struct return_instance		*return_instances;$/;"	m	struct:uprobe_task	typeref:struct:return_instance *
rev	t/tree/include/linux/acpi.h	/^	int rev;$/;"	m	struct:acpi_osc_context	typeref:typename:int
revoked_at	t/tree/include/linux/key.h	/^		time64_t	revoked_at;	\/* time at which key was revoked *\/$/;"	m	union:key::__anon38d188f8040a	typeref:typename:time64_t
rmb	t/tree/include/asm-generic/barrier.h	/^#define rmb(/;"	d
root	t/tree/include/linux/assoc_array.h	/^	struct assoc_array_ptr	*root;		\/* The node at the root of the tree *\/$/;"	m	struct:assoc_array	typeref:struct:assoc_array_ptr *
rounddown_pow_of_two	t/tree/include/linux/log2.h	/^#define rounddown_pow_of_two(/;"	d
roundup_pow_of_two	t/tree/include/linux/log2.h	/^#define roundup_pow_of_two(/;"	d
rp_check	t/tree/include/linux/uprobes.h	/^enum rp_check {$/;"	g
rpm_request	t/tree/include/linux/pm.h	/^enum rpm_request {$/;"	g
rpm_status	t/tree/include/linux/pm.h	/^enum rpm_status {$/;"	g
rseq	t/tree/include/uapi/linux/rseq.h	/^struct rseq {$/;"	s
rseq_cpu_id_state	t/tree/include/uapi/linux/rseq.h	/^enum rseq_cpu_id_state {$/;"	g
rseq_cs	t/tree/include/uapi/linux/rseq.h	/^	} rseq_cs;$/;"	m	struct:rseq	typeref:union:rseq::__anon24fc28e8010a
rseq_cs	t/tree/include/uapi/linux/rseq.h	/^struct rseq_cs {$/;"	s
rseq_cs_flags	t/tree/include/uapi/linux/rseq.h	/^enum rseq_cs_flags {$/;"	g
rseq_cs_flags_bit	t/tree/include/uapi/linux/rseq.h	/^enum rseq_cs_flags_bit {$/;"	g
rseq_flags	t/tree/include/uapi/linux/rseq.h	/^enum rseq_flags {$/;"	g
runtime_auto	t/tree/include/linux/pm.h	/^	unsigned int		runtime_auto:1;$/;"	m	struct:dev_pm_info	typeref:typename:unsigned int:1
runtime_error	t/tree/include/linux/pm.h	/^	int			runtime_error;$/;"	m	struct:dev_pm_info	typeref:typename:int
runtime_idle	t/tree/include/linux/pm.h	/^	int (*runtime_idle)(struct device *dev);$/;"	m	struct:dev_pm_ops	typeref:typename:int (*)(struct device * dev)
runtime_resume	t/tree/include/linux/pm.h	/^	int (*runtime_resume)(struct device *dev);$/;"	m	struct:dev_pm_ops	typeref:typename:int (*)(struct device * dev)
runtime_status	t/tree/include/linux/pm.h	/^	enum rpm_status		runtime_status;$/;"	m	struct:dev_pm_info	typeref:enum:rpm_status
runtime_suspend	t/tree/include/linux/pm.h	/^	int (*runtime_suspend)(struct device *dev);$/;"	m	struct:dev_pm_ops	typeref:typename:int (*)(struct device * dev)
saved_scratch_register	t/tree/arch/x86/include/asm/uprobes.h	/^	unsigned long			saved_scratch_register;$/;"	m	struct:arch_uprobe_task	typeref:typename:unsigned long
saved_tf	t/tree/arch/x86/include/asm/uprobes.h	/^	unsigned int			saved_tf;$/;"	m	struct:arch_uprobe_task	typeref:typename:unsigned int
saved_trap_nr	t/tree/arch/x86/include/asm/uprobes.h	/^	unsigned int			saved_trap_nr;$/;"	m	struct:arch_uprobe_task	typeref:typename:unsigned int
scan_dependent	t/tree/include/acpi/acpi_bus.h	/^	int (*scan_dependent)(struct acpi_device *adev);$/;"	m	struct:acpi_hotplug_profile	typeref:typename:int (*)(struct acpi_device * adev)
scl_fall_ns	t/tree/include/linux/i2c.h	/^	u32 scl_fall_ns;$/;"	m	struct:i2c_timings	typeref:typename:u32
scl_gpiod	t/tree/include/linux/i2c.h	/^	struct gpio_desc *scl_gpiod;$/;"	m	struct:i2c_bus_recovery_info	typeref:struct:gpio_desc *
scl_int_delay_ns	t/tree/include/linux/i2c.h	/^	u32 scl_int_delay_ns;$/;"	m	struct:i2c_timings	typeref:typename:u32
scl_rise_ns	t/tree/include/linux/i2c.h	/^	u32 scl_rise_ns;$/;"	m	struct:i2c_timings	typeref:typename:u32
sda	t/tree/include/linux/srcutree.h	/^	struct srcu_data __percpu *sda;		\/* Per-CPU srcu_data array. *\/$/;"	m	struct:srcu_struct	typeref:struct:srcu_data __percpu *
sda_fall_ns	t/tree/include/linux/i2c.h	/^	u32 sda_fall_ns;$/;"	m	struct:i2c_timings	typeref:typename:u32
sda_gpiod	t/tree/include/linux/i2c.h	/^	struct gpio_desc *sda_gpiod;$/;"	m	struct:i2c_bus_recovery_info	typeref:struct:gpio_desc *
sda_hold_ns	t/tree/include/linux/i2c.h	/^	u32 sda_hold_ns;$/;"	m	struct:i2c_timings	typeref:typename:u32
search_handle	t/tree/drivers/i2c/i2c-core-acpi.c	/^	acpi_handle search_handle;$/;"	m	struct:i2c_acpi_lookup	typeref:typename:acpi_handle	file:
secondary	t/tree/include/acpi/acpi_bus.h	/^	struct resource secondary;	\/* downstream bus range *\/$/;"	m	struct:acpi_pci_root	typeref:struct:resource
securebits	t/tree/include/linux/cred.h	/^	unsigned	securebits;	\/* SUID-less security management *\/$/;"	m	struct:cred	typeref:typename:unsigned
security	t/tree/include/linux/cred.h	/^	void		*security;	\/* subjective LSM security *\/$/;"	m	struct:cred	typeref:typename:void *
security	t/tree/include/linux/key.h	/^	void			*security;	\/* security data for this key *\/$/;"	m	struct:key	typeref:typename:void *
segment	t/tree/include/acpi/acpi_bus.h	/^	u16 segment;$/;"	m	struct:acpi_pci_root	typeref:typename:u16
self	t/tree/include/acpi/acpi_bus.h	/^	struct acpi_device *self;$/;"	m	struct:acpi_hotplug_context	typeref:struct:acpi_device *
sem	t/tree/include/linux/key.h	/^	struct rw_semaphore	sem;		\/* change vs change sem *\/$/;"	m	struct:key	typeref:struct:rw_semaphore
serial	t/tree/include/linux/key.h	/^	key_serial_t		serial;		\/* key serial number *\/$/;"	m	struct:key	typeref:typename:key_serial_t
serial_node	t/tree/include/linux/key.h	/^		struct rb_node	serial_node;$/;"	m	union:key::__anon38d188f8030a	typeref:struct:rb_node
session_keyring	t/tree/include/linux/cred.h	/^	struct key	*session_keyring; \/* keyring inherited over fork *\/$/;"	m	struct:cred	typeref:struct:key *
set_latency_tolerance	t/tree/include/linux/pm.h	/^	void (*set_latency_tolerance)(struct device *, s32);$/;"	m	struct:dev_pm_info	typeref:typename:void (*)(struct device *,s32)
set_scl	t/tree/include/linux/i2c.h	/^	void (*set_scl)(struct i2c_adapter *adap, int val);$/;"	m	struct:i2c_bus_recovery_info	typeref:typename:void (*)(struct i2c_adapter * adap,int val)
set_scl_gpio_value	t/tree/drivers/i2c/i2c-core-base.c	/^static void set_scl_gpio_value(struct i2c_adapter *adap, int val)$/;"	f	typeref:typename:void	file:
set_sda	t/tree/include/linux/i2c.h	/^	void (*set_sda)(struct i2c_adapter *adap, int val);$/;"	m	struct:i2c_bus_recovery_info	typeref:typename:void (*)(struct i2c_adapter * adap,int val)
set_sda_gpio_value	t/tree/drivers/i2c/i2c-core-base.c	/^static void set_sda_gpio_value(struct i2c_adapter *adap, int val)$/;"	f	typeref:typename:void	file:
setup	t/tree/include/acpi/acpi_bus.h	/^	void (*setup)(struct device *);$/;"	m	struct:acpi_bus_type	typeref:typename:void (*)(struct device *)
sgid	t/tree/include/linux/cred.h	/^	kgid_t		sgid;		\/* saved GID of the task *\/$/;"	m	struct:cred	typeref:typename:kgid_t
shift	t/tree/include/linux/xarray.h	/^	unsigned char	shift;		\/* Bits remaining in each slot *\/$/;"	m	struct:xa_node	typeref:typename:unsigned char
should_wakeup	t/tree/include/linux/pm.h	/^	unsigned int		should_wakeup:1;$/;"	m	struct:dev_pm_info	typeref:typename:unsigned int:1
show_in_ui	t/tree/include/acpi/acpi_bus.h	/^	u32 show_in_ui:1;$/;"	m	struct:acpi_device_status	typeref:typename:u32:1
show_modalias	t/tree/drivers/i2c/i2c-core-base.c	/^show_modalias(struct device *dev, struct device_attribute *attr, char *buf)$/;"	f	typeref:typename:ssize_t	file:
show_name	t/tree/drivers/i2c/i2c-core-base.c	/^show_name(struct device *dev, struct device_attribute *attr, char *buf)$/;"	f	typeref:typename:ssize_t	file:
shutdown	t/tree/include/linux/i2c.h	/^	void (*shutdown)(struct i2c_client *client);$/;"	m	struct:i2c_driver	typeref:typename:void (*)(struct i2c_client * client)
sibling	t/tree/include/acpi/acpi_bus.h	/^	struct list_head sibling;$/;"	m	struct:acpi_data_node	typeref:struct:list_head
sibling	t/tree/include/linux/of.h	/^	struct	device_node *sibling;$/;"	m	struct:device_node	typeref:struct:device_node *
signature	t/tree/arch/x86/include/uapi/asm/ist.h	/^	__u32 signature;$/;"	m	struct:ist_info	typeref:typename:__u32
size	t/tree/drivers/i2c/i2c-dev.c	/^	u32 size;$/;"	m	struct:i2c_smbus_ioctl_data32	typeref:typename:u32	file:
size	t/tree/include/linux/logic_pio.h	/^	resource_size_t size; \/* range size populated *\/$/;"	m	struct:logic_pio_hwaddr	typeref:typename:resource_size_t
size	t/tree/include/linux/memblock.h	/^	phys_addr_t size;$/;"	m	struct:memblock_region	typeref:typename:phys_addr_t
slave_cb	t/tree/include/linux/i2c.h	/^	i2c_slave_cb_t slave_cb;	\/* callback for slave mode	*\/$/;"	m	struct:i2c_client	typeref:typename:i2c_slave_cb_t
sleep_state	t/tree/include/acpi/acpi_bus.h	/^	u64 sleep_state;$/;"	m	struct:acpi_device_wakeup	typeref:typename:u64
slots	t/tree/include/linux/xarray.h	/^	void __rcu	*slots[XA_CHUNK_SIZE];$/;"	m	struct:xa_node	typeref:typename:void __rcu * []
smbalert_driver	t/tree/drivers/i2c/i2c-smbus.c	/^static struct i2c_driver smbalert_driver = {$/;"	v	typeref:struct:i2c_driver	file:
smbalert_ids	t/tree/drivers/i2c/i2c-smbus.c	/^static const struct i2c_device_id smbalert_ids[] = {$/;"	v	typeref:typename:const struct i2c_device_id[]	file:
smbalert_probe	t/tree/drivers/i2c/i2c-smbus.c	/^static int smbalert_probe(struct i2c_client *ara,$/;"	f	typeref:typename:int	file:
smbalert_remove	t/tree/drivers/i2c/i2c-smbus.c	/^static int smbalert_remove(struct i2c_client *ara)$/;"	f	typeref:typename:int	file:
smbalert_work	t/tree/drivers/i2c/i2c-smbus.c	/^static void smbalert_work(struct work_struct *work)$/;"	f	typeref:typename:void	file:
smbus_alert	t/tree/drivers/i2c/i2c-smbus.c	/^static irqreturn_t smbus_alert(int irq, void *d)$/;"	f	typeref:typename:irqreturn_t	file:
smbus_algorithm	t/tree/drivers/i2c/i2c-stub.c	/^static const struct i2c_algorithm smbus_algorithm = {$/;"	v	typeref:typename:const struct i2c_algorithm	file:
smbus_block_data	t/tree/drivers/i2c/i2c-stub.c	/^struct smbus_block_data {$/;"	s	file:
smbus_blocks	t/tree/drivers/i2c/i2c-stub.c	/^	struct list_head smbus_blocks;$/;"	m	struct:stub_chip	typeref:struct:list_head	file:
smbus_do_alert	t/tree/drivers/i2c/i2c-smbus.c	/^static int smbus_do_alert(struct device *dev, void *addrp)$/;"	f	typeref:typename:int	file:
smbus_xfer	t/tree/include/linux/i2c.h	/^	int (*smbus_xfer)(struct i2c_adapter *adap, u16 addr,$/;"	m	struct:i2c_algorithm	typeref:typename:int (*)(struct i2c_adapter * adap,u16 addr,unsigned short flags,char read_write,u8 command,int size,union i2c_smbus_data * data)
smbus_xfer_atomic	t/tree/include/linux/i2c.h	/^	int (*smbus_xfer_atomic)(struct i2c_adapter *adap, u16 addr,$/;"	m	struct:i2c_algorithm	typeref:typename:int (*)(struct i2c_adapter * adap,u16 addr,unsigned short flags,char read_write,u8 command,int size,union i2c_smbus_data * data)
smp_acquire__after_ctrl_dep	t/tree/include/asm-generic/barrier.h	/^#define smp_acquire__after_ctrl_dep(/;"	d
smp_cond_load_acquire	t/tree/include/asm-generic/barrier.h	/^#define smp_cond_load_acquire(/;"	d
smp_cond_load_relaxed	t/tree/include/asm-generic/barrier.h	/^#define smp_cond_load_relaxed(/;"	d
smp_load_acquire	t/tree/include/asm-generic/barrier.h	/^#define smp_load_acquire(/;"	d
smp_load_acquire	t/tree/include/asm-generic/barrier.h	/^#define smp_load_acquire(p) __smp_load_acquire(/;"	d
smp_mb	t/tree/include/asm-generic/barrier.h	/^#define smp_mb()	__smp_mb(/;"	d
smp_mb	t/tree/include/asm-generic/barrier.h	/^#define smp_mb(/;"	d
smp_mb__after_atomic	t/tree/include/asm-generic/barrier.h	/^#define smp_mb__after_atomic()	__smp_mb__after_atomic(/;"	d
smp_mb__after_atomic	t/tree/include/asm-generic/barrier.h	/^#define smp_mb__after_atomic(/;"	d
smp_mb__after_srcu_read_unlock	t/tree/include/linux/srcu.h	/^static inline void smp_mb__after_srcu_read_unlock(void)$/;"	f	typeref:typename:void
smp_mb__after_unlock_lock	t/tree/include/linux/rcupdate.h	/^#define smp_mb__after_unlock_lock(/;"	d
smp_mb__before_atomic	t/tree/include/asm-generic/barrier.h	/^#define smp_mb__before_atomic()	__smp_mb__before_atomic(/;"	d
smp_mb__before_atomic	t/tree/include/asm-generic/barrier.h	/^#define smp_mb__before_atomic(/;"	d
smp_read_barrier_depends	t/tree/include/asm-generic/barrier.h	/^#define smp_read_barrier_depends()	__smp_read_barrier_depends(/;"	d
smp_read_barrier_depends	t/tree/include/asm-generic/barrier.h	/^#define smp_read_barrier_depends(/;"	d
smp_rmb	t/tree/include/asm-generic/barrier.h	/^#define smp_rmb()	__smp_rmb(/;"	d
smp_rmb	t/tree/include/asm-generic/barrier.h	/^#define smp_rmb(/;"	d
smp_store_mb	t/tree/include/asm-generic/barrier.h	/^#define smp_store_mb(/;"	d
smp_store_mb	t/tree/include/asm-generic/barrier.h	/^#define smp_store_mb(var, value)  __smp_store_mb(/;"	d
smp_store_release	t/tree/include/asm-generic/barrier.h	/^#define smp_store_release(/;"	d
smp_store_release	t/tree/include/asm-generic/barrier.h	/^#define smp_store_release(p, v) __smp_store_release(/;"	d
smp_wmb	t/tree/include/asm-generic/barrier.h	/^#define smp_wmb()	__smp_wmb(/;"	d
smp_wmb	t/tree/include/asm-generic/barrier.h	/^#define smp_wmb(/;"	d
sp_offset	t/tree/arch/x86/include/asm/orc_types.h	/^	s16		sp_offset;$/;"	m	struct:orc_entry	typeref:typename:s16
sp_offset	t/tree/arch/x86/include/asm/orc_types.h	/^	s16		sp_offset;$/;"	m	struct:unwind_hint	typeref:typename:s16
sp_reg	t/tree/arch/x86/include/asm/orc_types.h	/^	u8		sp_reg;$/;"	m	struct:unwind_hint	typeref:typename:u8
sp_reg	t/tree/arch/x86/include/asm/orc_types.h	/^	unsigned	sp_reg:4;$/;"	m	struct:orc_entry	typeref:typename:unsigned:4
speed	t/tree/drivers/i2c/i2c-core-acpi.c	/^	u32 speed;$/;"	m	struct:i2c_acpi_lookup	typeref:typename:u32	file:
srcu_barrier_completion	t/tree/include/linux/srcutree.h	/^	struct completion srcu_barrier_completion;$/;"	m	struct:srcu_struct	typeref:struct:completion
srcu_barrier_cpu_cnt	t/tree/include/linux/srcutree.h	/^	atomic_t srcu_barrier_cpu_cnt;		\/* # CPUs not yet posting a *\/$/;"	m	struct:srcu_struct	typeref:typename:atomic_t
srcu_barrier_head	t/tree/include/linux/srcutree.h	/^	struct rcu_head srcu_barrier_head;	\/* For srcu_barrier() use. *\/$/;"	m	struct:srcu_data	typeref:struct:rcu_head
srcu_barrier_mutex	t/tree/include/linux/srcutree.h	/^	struct mutex srcu_barrier_mutex;	\/* Serialize barrier ops. *\/$/;"	m	struct:srcu_struct	typeref:struct:mutex
srcu_barrier_seq	t/tree/include/linux/srcutree.h	/^	unsigned long srcu_barrier_seq;		\/* srcu_barrier seq #. *\/$/;"	m	struct:srcu_struct	typeref:typename:unsigned long
srcu_cb_mutex	t/tree/include/linux/srcutree.h	/^	struct mutex srcu_cb_mutex;		\/* Serialize CB preparation. *\/$/;"	m	struct:srcu_struct	typeref:struct:mutex
srcu_cblist	t/tree/include/linux/srcutree.h	/^	struct rcu_segcblist srcu_cblist;	\/* List of callbacks.*\/$/;"	m	struct:srcu_data	typeref:struct:rcu_segcblist
srcu_cblist_invoking	t/tree/include/linux/srcutree.h	/^	bool srcu_cblist_invoking;		\/* Invoking these CBs? *\/$/;"	m	struct:srcu_data	typeref:typename:bool
srcu_data	t/tree/include/linux/srcutree.h	/^struct srcu_data {$/;"	s
srcu_data_have_cbs	t/tree/include/linux/srcutree.h	/^	unsigned long srcu_data_have_cbs[4];	\/* Which srcu_data structs *\/$/;"	m	struct:srcu_node	typeref:typename:unsigned long[4]
srcu_dereference	t/tree/include/linux/srcu.h	/^#define srcu_dereference(p, ssp) srcu_dereference_/;"	d
srcu_dereference_check	t/tree/include/linux/srcu.h	/^#define srcu_dereference_check(/;"	d
srcu_dereference_notrace	t/tree/include/linux/srcu.h	/^#define srcu_dereference_notrace(/;"	d
srcu_gp_mutex	t/tree/include/linux/srcutree.h	/^	struct mutex srcu_gp_mutex;		\/* Serialize GP work. *\/$/;"	m	struct:srcu_struct	typeref:struct:mutex
srcu_gp_seq	t/tree/include/linux/srcutree.h	/^	unsigned long srcu_gp_seq;		\/* Grace-period seq #. *\/$/;"	m	struct:srcu_struct	typeref:typename:unsigned long
srcu_gp_seq_needed	t/tree/include/linux/srcutree.h	/^	unsigned long srcu_gp_seq_needed;	\/* Furthest future GP needed. *\/$/;"	m	struct:srcu_data	typeref:typename:unsigned long
srcu_gp_seq_needed	t/tree/include/linux/srcutree.h	/^	unsigned long srcu_gp_seq_needed;	\/* Latest gp_seq needed. *\/$/;"	m	struct:srcu_struct	typeref:typename:unsigned long
srcu_gp_seq_needed_exp	t/tree/include/linux/srcutree.h	/^	unsigned long srcu_gp_seq_needed_exp;	\/* Furthest future exp GP. *\/$/;"	m	struct:srcu_data	typeref:typename:unsigned long
srcu_gp_seq_needed_exp	t/tree/include/linux/srcutree.h	/^	unsigned long srcu_gp_seq_needed_exp;	\/* Furthest future exp GP. *\/$/;"	m	struct:srcu_node	typeref:typename:unsigned long
srcu_gp_seq_needed_exp	t/tree/include/linux/srcutree.h	/^	unsigned long srcu_gp_seq_needed_exp;	\/* Furthest future exp GP. *\/$/;"	m	struct:srcu_struct	typeref:typename:unsigned long
srcu_have_cbs	t/tree/include/linux/srcutree.h	/^	unsigned long srcu_have_cbs[4];		\/* GP seq for children *\/$/;"	m	struct:srcu_node	typeref:typename:unsigned long[4]
srcu_idx	t/tree/include/linux/srcutree.h	/^	unsigned int srcu_idx;			\/* Current rdr array element. *\/$/;"	m	struct:srcu_struct	typeref:typename:unsigned int
srcu_last_gp_end	t/tree/include/linux/srcutree.h	/^	unsigned long srcu_last_gp_end;		\/* Last GP end timestamp (ns) *\/$/;"	m	struct:srcu_struct	typeref:typename:unsigned long
srcu_lock_count	t/tree/include/linux/srcutree.h	/^	unsigned long srcu_lock_count[2];	\/* Locks per CPU. *\/$/;"	m	struct:srcu_data	typeref:typename:unsigned long[2]
srcu_node	t/tree/include/linux/srcutree.h	/^struct srcu_node {$/;"	s
srcu_parent	t/tree/include/linux/srcutree.h	/^	struct srcu_node *srcu_parent;		\/* Next up in tree. *\/$/;"	m	struct:srcu_node	typeref:struct:srcu_node *
srcu_read_lock	t/tree/include/linux/srcu.h	/^static inline int srcu_read_lock(struct srcu_struct *ssp) __acquires(ssp)$/;"	f	typeref:typename:int
srcu_read_lock_held	t/tree/include/linux/srcu.h	/^static inline int srcu_read_lock_held(const struct srcu_struct *ssp)$/;"	f	typeref:typename:int
srcu_read_lock_notrace	t/tree/include/linux/srcu.h	/^srcu_read_lock_notrace(struct srcu_struct *ssp) __acquires(ssp)$/;"	f	typeref:typename:notrace int
srcu_read_unlock	t/tree/include/linux/srcu.h	/^static inline void srcu_read_unlock(struct srcu_struct *ssp, int idx)$/;"	f	typeref:typename:void
srcu_read_unlock_notrace	t/tree/include/linux/srcu.h	/^srcu_read_unlock_notrace(struct srcu_struct *ssp, int idx) __releases(ssp)$/;"	f	typeref:typename:notrace void
srcu_struct	t/tree/include/linux/srcu.h	/^struct srcu_struct { };$/;"	s
srcu_struct	t/tree/include/linux/srcutree.h	/^struct srcu_struct {$/;"	s
srcu_unlock_count	t/tree/include/linux/srcutree.h	/^	unsigned long srcu_unlock_count[2];	\/* Unlocks per CPU. *\/$/;"	m	struct:srcu_data	typeref:typename:unsigned long[2]
ssp	t/tree/include/linux/srcutree.h	/^	struct srcu_struct *ssp;$/;"	m	struct:srcu_data	typeref:struct:srcu_struct *
stack	t/tree/include/linux/uprobes.h	/^	unsigned long		stack;		\/* stack pointer *\/$/;"	m	struct:return_instance	typeref:typename:unsigned long
start_ip	t/tree/include/uapi/linux/rseq.h	/^	__u64 start_ip;$/;"	m	struct:rseq_cs	typeref:typename:__u64
start_prevent_time	t/tree/include/linux/pm_wakeup.h	/^	ktime_t start_prevent_time;$/;"	m	struct:wakeup_source	typeref:typename:ktime_t
state	t/tree/include/acpi/acpi_bus.h	/^	int state;		\/* Current state *\/$/;"	m	struct:acpi_device_power	typeref:typename:int
state	t/tree/include/acpi/acpi_bus.h	/^	int state;$/;"	m	struct:acpi_device_perf	typeref:typename:int
state	t/tree/include/linux/key.h	/^	short			state;		\/* Key state (+) or rejection error (-) *\/$/;"	m	struct:key	typeref:typename:short
state	t/tree/include/linux/uprobes.h	/^	enum uprobe_task_state		state;$/;"	m	struct:uprobe_task	typeref:enum:uprobe_task_state
state_count	t/tree/include/acpi/acpi_bus.h	/^	int state_count;$/;"	m	struct:acpi_device_perf	typeref:typename:int
states	t/tree/include/acpi/acpi_bus.h	/^	struct acpi_device_perf_state *states;$/;"	m	struct:acpi_device_perf	typeref:struct:acpi_device_perf_state *
states	t/tree/include/acpi/acpi_bus.h	/^	struct acpi_device_power_state states[ACPI_D_STATE_COUNT];	\/* Power states (D0-D3Cold) *\/$/;"	m	struct:acpi_device_power	typeref:struct:acpi_device_power_state[]
status	t/tree/drivers/i2c/i2c-core-acpi.c	/^	u8	status;$/;"	m	struct:gsb_buffer	typeref:typename:u8	file:
status	t/tree/include/acpi/acpi_bus.h	/^	struct acpi_device_status status;$/;"	m	struct:acpi_device	typeref:struct:acpi_device_status
str_obj	t/tree/include/acpi/acpi_bus.h	/^	union acpi_object *str_obj;	\/* unicode string for _STR method *\/$/;"	m	struct:acpi_device_pnp	typeref:union:acpi_object *
stub_adapter	t/tree/drivers/i2c/i2c-stub.c	/^static struct i2c_adapter stub_adapter = {$/;"	v	typeref:struct:i2c_adapter	file:
stub_chip	t/tree/drivers/i2c/i2c-stub.c	/^struct stub_chip {$/;"	s	file:
stub_chips	t/tree/drivers/i2c/i2c-stub.c	/^static struct stub_chip *stub_chips;$/;"	v	typeref:struct:stub_chip *	file:
stub_chips_nr	t/tree/drivers/i2c/i2c-stub.c	/^static int stub_chips_nr;$/;"	v	typeref:typename:int	file:
stub_find_block	t/tree/drivers/i2c/i2c-stub.c	/^static struct smbus_block_data *stub_find_block(struct device *dev,$/;"	f	typeref:struct:smbus_block_data *	file:
stub_func	t/tree/drivers/i2c/i2c-stub.c	/^static u32 stub_func(struct i2c_adapter *adapter)$/;"	f	typeref:typename:u32	file:
stub_get_wordp	t/tree/drivers/i2c/i2c-stub.c	/^static u16 *stub_get_wordp(struct stub_chip *chip, u8 offset)$/;"	f	typeref:typename:u16 *	file:
stub_xfer	t/tree/drivers/i2c/i2c-stub.c	/^static s32 stub_xfer(struct i2c_adapter *adap, u16 addr, unsigned short flags,$/;"	f	typeref:typename:s32	file:
subnodes	t/tree/include/acpi/acpi_bus.h	/^	struct list_head subnodes;$/;"	m	struct:acpi_device_data	typeref:struct:list_head
subscribers	t/tree/include/linux/cred.h	/^	atomic_t	subscribers;	\/* number of processes subscribed *\/$/;"	m	struct:cred	typeref:typename:atomic_t
subsys_data	t/tree/include/linux/pm.h	/^	struct pm_subsys_data	*subsys_data;  \/* Owned by the subsystem. *\/$/;"	m	struct:dev_pm_info	typeref:struct:pm_subsys_data *
subtable_valid	t/tree/include/linux/acpi.h	/^	acpi_probe_entry_validate_subtbl subtable_valid;$/;"	m	struct:acpi_probe_entry	typeref:typename:acpi_probe_entry_validate_subtbl
suid	t/tree/include/linux/cred.h	/^	kuid_t		suid;		\/* saved UID of the task *\/$/;"	m	struct:cred	typeref:typename:kuid_t
suspend	t/tree/include/linux/pm.h	/^	int (*suspend)(struct device *dev);$/;"	m	struct:dev_pm_ops	typeref:typename:int (*)(struct device * dev)
suspend_late	t/tree/include/linux/pm.h	/^	int (*suspend_late)(struct device *dev);$/;"	m	struct:dev_pm_ops	typeref:typename:int (*)(struct device * dev)
suspend_noirq	t/tree/include/linux/pm.h	/^	int (*suspend_noirq)(struct device *dev);$/;"	m	struct:dev_pm_ops	typeref:typename:int (*)(struct device * dev)
suspend_report_result	t/tree/include/linux/pm.h	/^#define suspend_report_result(/;"	d
suspend_timer	t/tree/include/linux/pm.h	/^	struct hrtimer		suspend_timer;$/;"	m	struct:dev_pm_info	typeref:struct:hrtimer
suspended_time	t/tree/include/linux/pm.h	/^	u64			suspended_time;$/;"	m	struct:dev_pm_info	typeref:typename:u64
sync	t/tree/include/linux/pm.h	/^	void (*sync)(struct device *dev);$/;"	m	struct:dev_pm_domain	typeref:typename:void (*)(struct device * dev)
synchronize_rcu_tasks	t/tree/include/linux/rcupdate.h	/^#define synchronize_rcu_tasks /;"	d
syscore	t/tree/include/linux/pm.h	/^	bool			syscore:1;$/;"	m	struct:dev_pm_info	typeref:typename:bool:1
table	t/tree/include/linux/acpi.h	/^	char	*table;$/;"	m	struct:acpi_platform_list	typeref:typename:char *
tags	t/tree/include/linux/radix-tree.h	/^	unsigned long	tags;$/;"	m	struct:radix_tree_iter	typeref:typename:unsigned long
tags	t/tree/include/linux/xarray.h	/^		unsigned long	tags[XA_MAX_MARKS][XA_MARK_LONGS];$/;"	m	union:xa_node::__anonde33faa6020a	typeref:typename:unsigned long[][]
tail	t/tree/include/asm-generic/qspinlock_types.h	/^			u16	tail;$/;"	m	struct:qspinlock::__anond60321f2010a::__anond60321f20308	typeref:typename:u16
tail	t/tree/include/asm-generic/qspinlock_types.h	/^			u16	tail;$/;"	m	struct:qspinlock::__anond60321f2010a::__anond60321f20408	typeref:typename:u16
tail	t/tree/include/linux/rcu_segcblist.h	/^	struct rcu_head **tail;$/;"	m	struct:rcu_cblist	typeref:struct:rcu_head **
tails	t/tree/include/linux/rcu_segcblist.h	/^	struct rcu_head **tails[RCU_CBLIST_NSEGS];$/;"	m	struct:rcu_segcblist	typeref:struct:rcu_head ** []
target	t/tree/include/linux/of.h	/^	struct device_node *target;$/;"	m	struct:of_overlay_notify_data	typeref:struct:device_node *
task_cred_xxx	t/tree/include/linux/cred.h	/^#define task_cred_xxx(/;"	d
task_euid	t/tree/include/linux/cred.h	/^#define task_euid(/;"	d
task_uid	t/tree/include/linux/cred.h	/^#define task_uid(/;"	d
thaw	t/tree/include/linux/pm.h	/^	int (*thaw)(struct device *dev);$/;"	m	struct:dev_pm_ops	typeref:typename:int (*)(struct device * dev)
thaw_early	t/tree/include/linux/pm.h	/^	int (*thaw_early)(struct device *dev);$/;"	m	struct:dev_pm_ops	typeref:typename:int (*)(struct device * dev)
thaw_noirq	t/tree/include/linux/pm.h	/^	int (*thaw_noirq)(struct device *dev);$/;"	m	struct:dev_pm_ops	typeref:typename:int (*)(struct device * dev)
thread_keyring	t/tree/include/linux/cred.h	/^	struct key	*thread_keyring; \/* keyring private to this thread *\/$/;"	m	struct:cred	typeref:struct:key *
timeout	t/tree/include/linux/i2c.h	/^	int timeout;			\/* in jiffies *\/$/;"	m	struct:i2c_adapter	typeref:typename:int
timer	t/tree/include/linux/pm_wakeup.h	/^	struct timer_list	timer;$/;"	m	struct:wakeup_source	typeref:struct:timer_list
timer_autosuspends	t/tree/include/linux/pm.h	/^	unsigned int		timer_autosuspends:1;$/;"	m	struct:dev_pm_info	typeref:typename:unsigned int:1
timer_expires	t/tree/include/linux/pm.h	/^	unsigned long		timer_expires;$/;"	m	struct:dev_pm_info	typeref:typename:unsigned long
timer_expires	t/tree/include/linux/pm_wakeup.h	/^	unsigned long		timer_expires;$/;"	m	struct:wakeup_source	typeref:typename:unsigned long
to_acpi_data_node	t/tree/include/acpi/acpi_bus.h	/^#define to_acpi_data_node(/;"	d
to_acpi_data_node	t/tree/include/linux/acpi.h	/^static inline struct acpi_data_node *to_acpi_data_node(struct fwnode_handle *fwnode)$/;"	f	typeref:struct:acpi_data_node *
to_acpi_device	t/tree/include/acpi/acpi_bus.h	/^#define to_acpi_device(/;"	d
to_acpi_device_node	t/tree/include/acpi/acpi_bus.h	/^#define to_acpi_device_node(/;"	d
to_acpi_device_node	t/tree/include/linux/acpi.h	/^static inline struct acpi_device *to_acpi_device_node(struct fwnode_handle *fwnode)$/;"	f	typeref:struct:acpi_device *
to_acpi_driver	t/tree/include/acpi/acpi_bus.h	/^#define to_acpi_driver(/;"	d
to_acpi_hotplug_profile	t/tree/include/acpi/acpi_bus.h	/^static inline struct acpi_hotplug_profile *to_acpi_hotplug_profile($/;"	f	typeref:struct:acpi_hotplug_profile *
to_i2c_adapter	t/tree/include/linux/i2c.h	/^#define to_i2c_adapter(/;"	d
to_i2c_client	t/tree/include/linux/i2c.h	/^#define to_i2c_client(/;"	d
to_i2c_driver	t/tree/include/linux/i2c.h	/^#define to_i2c_driver(/;"	d
to_of_node	t/tree/include/linux/of.h	/^#define to_of_node(/;"	d
to_of_node	t/tree/include/linux/of.h	/^static inline struct device_node *to_of_node(const struct fwnode_handle *fwnode)$/;"	f	typeref:struct:device_node *
total_size	t/tree/include/linux/memblock.h	/^	phys_addr_t total_size;$/;"	m	struct:memblock_type	typeref:typename:phys_addr_t
total_time	t/tree/include/linux/pm_wakeup.h	/^	ktime_t total_time;$/;"	m	struct:wakeup_source	typeref:typename:ktime_t
try_then_request_module	t/tree/include/linux/kmod.h	/^#define try_then_request_module(/;"	d
trylock_bus	t/tree/include/linux/i2c.h	/^	int (*trylock_bus)(struct i2c_adapter *adapter, unsigned int flags);$/;"	m	struct:i2c_lock_operations	typeref:typename:int (*)(struct i2c_adapter * adapter,unsigned int flags)
type	t/tree/arch/x86/include/asm/orc_types.h	/^	u8		type;$/;"	m	struct:unwind_hint	typeref:typename:u8
type	t/tree/arch/x86/include/asm/orc_types.h	/^	unsigned	type:2;$/;"	m	struct:orc_entry	typeref:typename:unsigned:2
type	t/tree/drivers/i2c/i2c-smbus.c	/^	enum i2c_alert_protocol	type;$/;"	m	struct:alert_data	typeref:enum:i2c_alert_protocol	file:
type	t/tree/include/acpi/acpi_bus.h	/^	struct acpi_pnp_type type;	\/* ID type *\/$/;"	m	struct:acpi_device_pnp	typeref:struct:acpi_pnp_type
type	t/tree/include/acpi/acpi_bus.h	/^	u32 type;$/;"	m	struct:acpi_bus_event	typeref:typename:u32
type	t/tree/include/linux/acpi.h	/^	__u8 type;$/;"	m	struct:acpi_probe_entry	typeref:typename:__u8
type	t/tree/include/linux/i2c.h	/^	char		type[I2C_NAME_SIZE];$/;"	m	struct:i2c_board_info	typeref:typename:char[]
type	t/tree/include/linux/key.h	/^			struct key_type	*type;		\/* type of key *\/$/;"	m	struct:key::__anon38d188f8050a::__anon38d188f80608	typeref:struct:key_type *
type	t/tree/include/linux/key.h	/^	struct key_type		*type;$/;"	m	struct:keyring_index_key	typeref:struct:key_type *
uevent	t/tree/include/acpi/acpi_bus.h	/^	void (*uevent)(struct acpi_device *, u32);$/;"	m	struct:acpi_hotplug_context	typeref:typename:void (*)(struct acpi_device *,u32)
uid	t/tree/include/linux/cred.h	/^	kuid_t		uid;		\/* real UID of the task *\/$/;"	m	struct:cred	typeref:typename:kuid_t
uid	t/tree/include/linux/key.h	/^	kuid_t			uid;$/;"	m	struct:key	typeref:typename:kuid_t
ulong2long	t/tree/include/linux/rcupdate.h	/^#define ulong2long(/;"	d
unbind	t/tree/include/acpi/acpi_bus.h	/^	void (*unbind)(struct device *phys_dev);$/;"	m	struct:acpi_scan_handler	typeref:typename:void (*)(struct device * phys_dev)
undocumented_function	t/tree/issue186.c	/^#define undocumented_function	/;"	d	file:
undocumented_function	t/tree/issue186.c	/^static int undocumented_function(struct platform_device *pdev)$/;"	f	typeref:typename:int	file:
undocumented_function	t/tree/issue188.c	/^static int undocumented_function(struct platform_device *pdev)$/;"	f	typeref:typename:int	file:
unique_id	t/tree/include/acpi/acpi_bus.h	/^	char *unique_id;		\/* _UID *\/$/;"	m	struct:acpi_device_pnp	typeref:typename:char *
unique_id	t/tree/include/linux/of.h	/^	unsigned int unique_id;$/;"	m	struct:device_node	typeref:typename:unsigned int
unique_id	t/tree/include/linux/of.h	/^	unsigned int unique_id;$/;"	m	struct:property	typeref:typename:unsigned int
unlock_bus	t/tree/include/linux/i2c.h	/^	void (*unlock_bus)(struct i2c_adapter *adapter, unsigned int flags);$/;"	m	struct:i2c_lock_operations	typeref:typename:void (*)(struct i2c_adapter * adapter,unsigned int flags)
unprepare_recovery	t/tree/include/linux/i2c.h	/^	void (*unprepare_recovery)(struct i2c_adapter *adap);$/;"	m	struct:i2c_bus_recovery_info	typeref:typename:void (*)(struct i2c_adapter * adap)
unreg_slave	t/tree/include/linux/i2c.h	/^	int (*unreg_slave)(struct i2c_client *client);$/;"	m	struct:i2c_algorithm	typeref:typename:int (*)(struct i2c_client * client)
unregister_acpi_bus_type	t/tree/include/acpi/acpi_bus.h	/^static inline int unregister_acpi_bus_type(void *bus) { return 0; }$/;"	f	typeref:typename:int
unwind_hint	t/tree/arch/x86/include/asm/orc_types.h	/^struct unwind_hint {$/;"	s
unxlate_dev_mem_ptr	t/tree/include/asm-generic/io.h	/^#define unxlate_dev_mem_ptr unxlate_dev_mem_ptr$/;"	d
unxlate_dev_mem_ptr	t/tree/include/asm-generic/io.h	/^static inline void unxlate_dev_mem_ptr(phys_addr_t phys, void *addr)$/;"	f	typeref:typename:void
uprobe	t/tree/include/linux/uprobes.h	/^	struct uprobe		*uprobe;$/;"	m	struct:return_instance	typeref:struct:uprobe *
uprobe_apply	t/tree/include/linux/uprobes.h	/^uprobe_apply(struct inode *inode, loff_t offset, struct uprobe_consumer *uc, bool add)$/;"	f	typeref:typename:int
uprobe_clear_state	t/tree/include/linux/uprobes.h	/^static inline void uprobe_clear_state(struct mm_struct *mm)$/;"	f	typeref:typename:void
uprobe_consumer	t/tree/include/linux/uprobes.h	/^struct uprobe_consumer {$/;"	s
uprobe_copy_process	t/tree/include/linux/uprobes.h	/^static inline void uprobe_copy_process(struct task_struct *t, unsigned long flags)$/;"	f	typeref:typename:void
uprobe_deny_signal	t/tree/include/linux/uprobes.h	/^static inline bool uprobe_deny_signal(void)$/;"	f	typeref:typename:bool
uprobe_dup_mmap	t/tree/include/linux/uprobes.h	/^uprobe_dup_mmap(struct mm_struct *oldmm, struct mm_struct *newmm)$/;"	f	typeref:typename:void
uprobe_end_dup_mmap	t/tree/include/linux/uprobes.h	/^static inline void uprobe_end_dup_mmap(void)$/;"	f	typeref:typename:void
uprobe_filter_ctx	t/tree/include/linux/uprobes.h	/^enum uprobe_filter_ctx {$/;"	g
uprobe_free_utask	t/tree/include/linux/uprobes.h	/^static inline void uprobe_free_utask(struct task_struct *t)$/;"	f	typeref:typename:void
uprobe_get_trap_addr	t/tree/include/linux/uprobes.h	/^#define uprobe_get_trap_addr(/;"	d
uprobe_mmap	t/tree/include/linux/uprobes.h	/^static inline int uprobe_mmap(struct vm_area_struct *vma)$/;"	f	typeref:typename:int
uprobe_munmap	t/tree/include/linux/uprobes.h	/^uprobe_munmap(struct vm_area_struct *vma, unsigned long start, unsigned long end)$/;"	f	typeref:typename:void
uprobe_notify_resume	t/tree/include/linux/uprobes.h	/^static inline void uprobe_notify_resume(struct pt_regs *regs)$/;"	f	typeref:typename:void
uprobe_opcode_t	t/tree/arch/x86/include/asm/uprobes.h	/^typedef u8 uprobe_opcode_t;$/;"	t	typeref:typename:u8
uprobe_register	t/tree/include/linux/uprobes.h	/^uprobe_register(struct inode *inode, loff_t offset, struct uprobe_consumer *uc)$/;"	f	typeref:typename:int
uprobe_register_refctr	t/tree/include/linux/uprobes.h	/^static inline int uprobe_register_refctr(struct inode *inode, loff_t offset, loff_t ref_ctr_offs/;"	f	typeref:typename:int
uprobe_start_dup_mmap	t/tree/include/linux/uprobes.h	/^static inline void uprobe_start_dup_mmap(void)$/;"	f	typeref:typename:void
uprobe_task	t/tree/include/linux/uprobes.h	/^struct uprobe_task {$/;"	s
uprobe_task_state	t/tree/include/linux/uprobes.h	/^enum uprobe_task_state {$/;"	g
uprobe_unregister	t/tree/include/linux/uprobes.h	/^uprobe_unregister(struct inode *inode, loff_t offset, struct uprobe_consumer *uc)$/;"	f	typeref:typename:void
uprobes_init	t/tree/include/linux/uprobes.h	/^static inline void uprobes_init(void)$/;"	f	typeref:typename:void
uprobes_state	t/tree/include/linux/uprobes.h	/^struct uprobes_state {$/;"	s
usage	t/tree/include/linux/cred.h	/^	atomic_t	usage;$/;"	m	struct:cred	typeref:typename:atomic_t
usage	t/tree/include/linux/cred.h	/^	atomic_t	usage;$/;"	m	struct:group_info	typeref:typename:atomic_t
usage	t/tree/include/linux/key.h	/^	refcount_t		usage;		\/* number of references *\/$/;"	m	struct:key	typeref:typename:refcount_t
usage	t/tree/include/linux/key.h	/^	refcount_t		usage;$/;"	m	struct:key_tag	typeref:typename:refcount_t
usage_count	t/tree/include/linux/pm.h	/^	atomic_t		usage_count;$/;"	m	struct:dev_pm_info	typeref:typename:atomic_t
use_autosuspend	t/tree/include/linux/pm.h	/^	unsigned int		use_autosuspend:1;$/;"	m	struct:dev_pm_info	typeref:typename:unsigned int:1
user	t/tree/include/linux/cred.h	/^	struct user_struct *user;	\/* real user ID subscription *\/$/;"	m	struct:cred	typeref:struct:user_struct *
user	t/tree/include/linux/key.h	/^	struct key_user		*user;		\/* owner of this key *\/$/;"	m	struct:key	typeref:struct:key_user *
user_ns	t/tree/include/linux/cred.h	/^	struct user_namespace *user_ns; \/* user_ns the caps and keyrings are relative to. *\/$/;"	m	struct:cred	typeref:struct:user_namespace *
userspace_clients	t/tree/include/linux/i2c.h	/^	struct list_head userspace_clients;$/;"	m	struct:i2c_adapter	typeref:struct:list_head
userspace_clients_lock	t/tree/include/linux/i2c.h	/^	struct mutex userspace_clients_lock;$/;"	m	struct:i2c_adapter	typeref:struct:mutex
uuid_str	t/tree/include/linux/acpi.h	/^	char *uuid_str;			\/* UUID string *\/$/;"	m	struct:acpi_osc_context	typeref:typename:char *
vaddr	t/tree/include/linux/uprobes.h	/^			unsigned long		vaddr;$/;"	m	struct:uprobe_task::__anon18223b0f010a::__anon18223b0f0208	typeref:typename:unsigned long
val	t/tree/include/asm-generic/qspinlock_types.h	/^		atomic_t val;$/;"	m	union:qspinlock::__anond60321f2010a	typeref:typename:atomic_t
valid	t/tree/include/acpi/acpi_bus.h	/^		u8 valid:1;$/;"	m	struct:acpi_device_perf_state::__anonbbafac820208	typeref:typename:u8:1
valid	t/tree/include/acpi/acpi_bus.h	/^		u8 valid:1;$/;"	m	struct:acpi_device_power_state::__anonbbafac820108	typeref:typename:u8:1
valid	t/tree/include/acpi/acpi_bus.h	/^	u8 valid:1;		\/* Can successfully enable wakeup? *\/$/;"	m	struct:acpi_device_wakeup_flags	typeref:typename:u8:1
validate_creds	t/tree/include/linux/cred.h	/^#define validate_creds(/;"	d
validate_creds	t/tree/include/linux/cred.h	/^static inline void validate_creds(const struct cred *cred)$/;"	f	typeref:typename:void
validate_creds_for_do_exit	t/tree/include/linux/cred.h	/^static inline void validate_creds_for_do_exit(struct task_struct *tsk)$/;"	f	typeref:typename:void
validate_process_creds	t/tree/include/linux/cred.h	/^#define validate_process_creds(/;"	d
validate_process_creds	t/tree/include/linux/cred.h	/^static inline void validate_process_creds(void)$/;"	f	typeref:typename:void
value	t/tree/include/linux/of.h	/^	void	*value;$/;"	m	struct:property	typeref:typename:void *
version	t/tree/include/uapi/linux/apm_bios.h	/^	__u16	version;$/;"	m	struct:apm_bios_info	typeref:typename:__u16
version	t/tree/include/uapi/linux/rseq.h	/^	__u32 version;$/;"	m	struct:rseq_cs	typeref:typename:__u32
virt_load_acquire	t/tree/include/asm-generic/barrier.h	/^#define virt_load_acquire(/;"	d
virt_mb	t/tree/include/asm-generic/barrier.h	/^#define virt_mb(/;"	d
virt_mb__after_atomic	t/tree/include/asm-generic/barrier.h	/^#define virt_mb__after_atomic(/;"	d
virt_mb__before_atomic	t/tree/include/asm-generic/barrier.h	/^#define virt_mb__before_atomic(/;"	d
virt_read_barrier_depends	t/tree/include/asm-generic/barrier.h	/^#define virt_read_barrier_depends(/;"	d
virt_rmb	t/tree/include/asm-generic/barrier.h	/^#define virt_rmb(/;"	d
virt_spin_lock	t/tree/include/asm-generic/qspinlock.h	/^static __always_inline bool virt_spin_lock(struct qspinlock *lock)$/;"	f	typeref:typename:__always_inline bool
virt_store_mb	t/tree/include/asm-generic/barrier.h	/^#define virt_store_mb(/;"	d
virt_store_release	t/tree/include/asm-generic/barrier.h	/^#define virt_store_release(/;"	d
virt_to_bus	t/tree/include/asm-generic/io.h	/^static inline unsigned long virt_to_bus(void *address)$/;"	f	typeref:typename:unsigned long
virt_to_phys	t/tree/include/asm-generic/io.h	/^#define virt_to_phys virt_to_phys$/;"	d
virt_to_phys	t/tree/include/asm-generic/io.h	/^static inline unsigned long virt_to_phys(volatile void *address)$/;"	f	typeref:typename:unsigned long
virt_wmb	t/tree/include/asm-generic/barrier.h	/^#define virt_wmb(/;"	d
visited	t/tree/include/acpi/acpi_bus.h	/^	u32 visited:1;$/;"	m	struct:acpi_device_flags	typeref:typename:u32:1
wait_command_ready	t/tree/include/linux/acpi.h	/^	int (*wait_command_ready)(bool single_step, char *buffer, size_t length);$/;"	m	struct:acpi_debugger_ops	typeref:typename:int (*)(bool single_step,char * buffer,size_t length)
wait_queue	t/tree/include/linux/pm.h	/^	wait_queue_head_t	wait_queue;$/;"	m	struct:dev_pm_info	typeref:typename:wait_queue_head_t
wakeirq	t/tree/include/linux/pm.h	/^	struct wake_irq		*wakeirq;$/;"	m	struct:dev_pm_info	typeref:struct:wake_irq *
wakeirq	t/tree/include/linux/pm_wakeup.h	/^	struct wake_irq		*wakeirq;$/;"	m	struct:wakeup_source	typeref:struct:wake_irq *
wakeup	t/tree/include/acpi/acpi_bus.h	/^	struct acpi_device_wakeup wakeup;$/;"	m	struct:acpi_device	typeref:struct:acpi_device_wakeup
wakeup	t/tree/include/linux/pm.h	/^	struct wakeup_source	*wakeup;$/;"	m	struct:dev_pm_info	typeref:struct:wakeup_source *
wakeup_count	t/tree/include/linux/pm_wakeup.h	/^	unsigned long		wakeup_count;$/;"	m	struct:wakeup_source	typeref:typename:unsigned long
wakeup_list	t/tree/include/acpi/acpi_bus.h	/^	struct list_head wakeup_list;$/;"	m	struct:acpi_device	typeref:struct:list_head
wakeup_path	t/tree/include/linux/pm.h	/^	bool			wakeup_path:1;$/;"	m	struct:dev_pm_info	typeref:typename:bool:1
wakeup_source	t/tree/include/linux/pm_wakeup.h	/^struct wakeup_source {$/;"	s
wakeup_source_add	t/tree/include/linux/pm_wakeup.h	/^static inline void wakeup_source_add(struct wakeup_source *ws) {}$/;"	f	typeref:typename:void
wakeup_source_create	t/tree/include/linux/pm_wakeup.h	/^static inline struct wakeup_source *wakeup_source_create(const char *name)$/;"	f	typeref:struct:wakeup_source *
wakeup_source_destroy	t/tree/include/linux/pm_wakeup.h	/^static inline void wakeup_source_destroy(struct wakeup_source *ws) {}$/;"	f	typeref:typename:void
wakeup_source_register	t/tree/include/linux/pm_wakeup.h	/^static inline struct wakeup_source *wakeup_source_register(struct device *dev,$/;"	f	typeref:struct:wakeup_source *
wakeup_source_remove	t/tree/include/linux/pm_wakeup.h	/^static inline void wakeup_source_remove(struct wakeup_source *ws) {}$/;"	f	typeref:typename:void
wakeup_source_unregister	t/tree/include/linux/pm_wakeup.h	/^static inline void wakeup_source_unregister(struct wakeup_source *ws) {}$/;"	f	typeref:typename:void
wdata	t/tree/drivers/i2c/i2c-core-acpi.c	/^		u16	wdata;$/;"	m	union:gsb_buffer::__anonee402091010a	typeref:typename:u16	file:
wmb	t/tree/include/asm-generic/barrier.h	/^#define wmb(/;"	d
wmi_notify_handler	t/tree/include/linux/acpi.h	/^typedef void (*wmi_notify_handler) (u32 value, void *context);$/;"	t	typeref:typename:void (*)(u32 value,void * context)
word	t/tree/include/uapi/linux/i2c.h	/^	__u16 word;$/;"	m	union:i2c_smbus_data	typeref:typename:__u16
words	t/tree/drivers/i2c/i2c-stub.c	/^	u16 words[256];		\/* Byte operations use the LSB as per SMBus$/;"	m	struct:stub_chip	typeref:typename:u16[256]	file:
work	t/tree/include/linux/pm.h	/^	struct work_struct	work;$/;"	m	struct:dev_pm_info	typeref:struct:work_struct
work	t/tree/include/linux/srcutree.h	/^	struct delayed_work work;$/;"	m	struct:srcu_struct	typeref:struct:delayed_work
work	t/tree/include/linux/srcutree.h	/^	struct work_struct work;		\/* Context for CB invoking. *\/$/;"	m	struct:srcu_data	typeref:struct:work_struct
write_log	t/tree/include/linux/acpi.h	/^	ssize_t (*write_log)(const char *msg);$/;"	m	struct:acpi_debugger_ops	typeref:typename:ssize_t (*)(const char * msg)
writeb	t/tree/include/asm-generic/io.h	/^#define writeb writeb$/;"	d
writeb	t/tree/include/asm-generic/io.h	/^static inline void writeb(u8 value, volatile void __iomem *addr)$/;"	f	typeref:typename:void
writeb_relaxed	t/tree/include/asm-generic/io.h	/^#define writeb_relaxed writeb_relaxed$/;"	d
writeb_relaxed	t/tree/include/asm-generic/io.h	/^static inline void writeb_relaxed(u8 value, volatile void __iomem *addr)$/;"	f	typeref:typename:void
writel	t/tree/include/asm-generic/io.h	/^#define writel writel$/;"	d
writel	t/tree/include/asm-generic/io.h	/^static inline void writel(u32 value, volatile void __iomem *addr)$/;"	f	typeref:typename:void
writel_relaxed	t/tree/include/asm-generic/io.h	/^#define writel_relaxed writel_relaxed$/;"	d
writel_relaxed	t/tree/include/asm-generic/io.h	/^static inline void writel_relaxed(u32 value, volatile void __iomem *addr)$/;"	f	typeref:typename:void
writeq	t/tree/include/asm-generic/io.h	/^#define writeq writeq$/;"	d
writeq	t/tree/include/asm-generic/io.h	/^static inline void writeq(u64 value, volatile void __iomem *addr)$/;"	f	typeref:typename:void
writeq_relaxed	t/tree/include/asm-generic/io.h	/^#define writeq_relaxed writeq_relaxed$/;"	d
writeq_relaxed	t/tree/include/asm-generic/io.h	/^static inline void writeq_relaxed(u64 value, volatile void __iomem *addr)$/;"	f	typeref:typename:void
writesb	t/tree/include/asm-generic/io.h	/^#define writesb writesb$/;"	d
writesb	t/tree/include/asm-generic/io.h	/^static inline void writesb(volatile void __iomem *addr, const void *buffer,$/;"	f	typeref:typename:void
writesl	t/tree/include/asm-generic/io.h	/^#define writesl writesl$/;"	d
writesl	t/tree/include/asm-generic/io.h	/^static inline void writesl(volatile void __iomem *addr, const void *buffer,$/;"	f	typeref:typename:void
writesq	t/tree/include/asm-generic/io.h	/^#define writesq writesq$/;"	d
writesq	t/tree/include/asm-generic/io.h	/^static inline void writesq(volatile void __iomem *addr, const void *buffer,$/;"	f	typeref:typename:void
writesw	t/tree/include/asm-generic/io.h	/^#define writesw writesw$/;"	d
writesw	t/tree/include/asm-generic/io.h	/^static inline void writesw(volatile void __iomem *addr, const void *buffer,$/;"	f	typeref:typename:void
writew	t/tree/include/asm-generic/io.h	/^#define writew writew$/;"	d
writew	t/tree/include/asm-generic/io.h	/^static inline void writew(u16 value, volatile void __iomem *addr)$/;"	f	typeref:typename:void
writew_relaxed	t/tree/include/asm-generic/io.h	/^#define writew_relaxed writew_relaxed$/;"	d
writew_relaxed	t/tree/include/asm-generic/io.h	/^static inline void writew_relaxed(u16 value, volatile void __iomem *addr)$/;"	f	typeref:typename:void
ws	t/tree/include/acpi/acpi_bus.h	/^	struct wakeup_source *ws;$/;"	m	struct:acpi_device_wakeup	typeref:struct:wakeup_source *
x	t/tree/include/linux/key.h	/^		unsigned long x;$/;"	m	union:keyring_index_key::__anon38d188f8010a	typeref:typename:unsigned long
x86_default_get_root_pointer	t/tree/arch/x86/include/asm/acpi.h	/^static inline u64 x86_default_get_root_pointer(void)$/;"	f	typeref:typename:u64
x86_default_set_root_pointer	t/tree/arch/x86/include/asm/acpi.h	/^static inline void x86_default_set_root_pointer(u64 addr) { }$/;"	f	typeref:typename:void
xa	t/tree/include/linux/xarray.h	/^	struct xarray *xa;$/;"	m	struct:xa_state	typeref:struct:xarray *
xa_alloc	t/tree/include/linux/xarray.h	/^	struct xa_node *xa_alloc;$/;"	m	struct:xa_state	typeref:struct:xa_node *
xa_alloc	t/tree/include/linux/xarray.h	/^static inline __must_check int xa_alloc(struct xarray *xa, u32 *id,$/;"	f	typeref:typename:__must_check int
xa_alloc_bh	t/tree/include/linux/xarray.h	/^static inline int __must_check xa_alloc_bh(struct xarray *xa, u32 *id,$/;"	f	typeref:typename:int __must_check
xa_alloc_cyclic	t/tree/include/linux/xarray.h	/^static inline int xa_alloc_cyclic(struct xarray *xa, u32 *id, void *entry,$/;"	f	typeref:typename:int
xa_alloc_cyclic_bh	t/tree/include/linux/xarray.h	/^static inline int xa_alloc_cyclic_bh(struct xarray *xa, u32 *id, void *entry,$/;"	f	typeref:typename:int
xa_alloc_cyclic_irq	t/tree/include/linux/xarray.h	/^static inline int xa_alloc_cyclic_irq(struct xarray *xa, u32 *id, void *entry,$/;"	f	typeref:typename:int
xa_alloc_irq	t/tree/include/linux/xarray.h	/^static inline int __must_check xa_alloc_irq(struct xarray *xa, u32 *id,$/;"	f	typeref:typename:int __must_check
xa_cmpxchg	t/tree/include/linux/xarray.h	/^static inline void *xa_cmpxchg(struct xarray *xa, unsigned long index,$/;"	f	typeref:typename:void *
xa_cmpxchg_bh	t/tree/include/linux/xarray.h	/^static inline void *xa_cmpxchg_bh(struct xarray *xa, unsigned long index,$/;"	f	typeref:typename:void *
xa_cmpxchg_irq	t/tree/include/linux/xarray.h	/^static inline void *xa_cmpxchg_irq(struct xarray *xa, unsigned long index,$/;"	f	typeref:typename:void *
xa_empty	t/tree/include/linux/xarray.h	/^static inline bool xa_empty(const struct xarray *xa)$/;"	f	typeref:typename:bool
xa_entry	t/tree/include/linux/xarray.h	/^static inline void *xa_entry(const struct xarray *xa,$/;"	f	typeref:typename:void *
xa_entry_locked	t/tree/include/linux/xarray.h	/^static inline void *xa_entry_locked(const struct xarray *xa,$/;"	f	typeref:typename:void *
xa_erase_bh	t/tree/include/linux/xarray.h	/^static inline void *xa_erase_bh(struct xarray *xa, unsigned long index)$/;"	f	typeref:typename:void *
xa_erase_irq	t/tree/include/linux/xarray.h	/^static inline void *xa_erase_irq(struct xarray *xa, unsigned long index)$/;"	f	typeref:typename:void *
xa_err	t/tree/include/linux/xarray.h	/^static inline int xa_err(void *entry)$/;"	f	typeref:typename:int
xa_flags	t/tree/include/linux/xarray.h	/^	gfp_t		xa_flags;$/;"	m	struct:xarray	typeref:typename:gfp_t
xa_for_each	t/tree/include/linux/xarray.h	/^#define xa_for_each(/;"	d
xa_for_each_marked	t/tree/include/linux/xarray.h	/^#define xa_for_each_marked(/;"	d
xa_for_each_start	t/tree/include/linux/xarray.h	/^#define xa_for_each_start(/;"	d
xa_head	t/tree/include/linux/xarray.h	/^	void __rcu *	xa_head;$/;"	m	struct:xarray	typeref:typename:void __rcu *
xa_head	t/tree/include/linux/xarray.h	/^static inline void *xa_head(const struct xarray *xa)$/;"	f	typeref:typename:void *
xa_head_locked	t/tree/include/linux/xarray.h	/^static inline void *xa_head_locked(const struct xarray *xa)$/;"	f	typeref:typename:void *
xa_index	t/tree/include/linux/xarray.h	/^	unsigned long xa_index;$/;"	m	struct:xa_state	typeref:typename:unsigned long
xa_init	t/tree/include/linux/xarray.h	/^static inline void xa_init(struct xarray *xa)$/;"	f	typeref:typename:void
xa_init_flags	t/tree/include/linux/xarray.h	/^static inline void xa_init_flags(struct xarray *xa, gfp_t flags)$/;"	f	typeref:typename:void
xa_insert	t/tree/include/linux/xarray.h	/^static inline int __must_check xa_insert(struct xarray *xa,$/;"	f	typeref:typename:int __must_check
xa_insert_bh	t/tree/include/linux/xarray.h	/^static inline int __must_check xa_insert_bh(struct xarray *xa,$/;"	f	typeref:typename:int __must_check
xa_insert_irq	t/tree/include/linux/xarray.h	/^static inline int __must_check xa_insert_irq(struct xarray *xa,$/;"	f	typeref:typename:int __must_check
xa_is_advanced	t/tree/include/linux/xarray.h	/^static inline bool xa_is_advanced(const void *entry)$/;"	f	typeref:typename:bool
xa_is_err	t/tree/include/linux/xarray.h	/^static inline bool xa_is_err(const void *entry)$/;"	f	typeref:typename:bool
xa_is_internal	t/tree/include/linux/xarray.h	/^static inline bool xa_is_internal(const void *entry)$/;"	f	typeref:typename:bool
xa_is_node	t/tree/include/linux/xarray.h	/^static inline bool xa_is_node(const void *entry)$/;"	f	typeref:typename:bool
xa_is_retry	t/tree/include/linux/xarray.h	/^static inline bool xa_is_retry(const void *entry)$/;"	f	typeref:typename:bool
xa_is_sibling	t/tree/include/linux/xarray.h	/^static inline bool xa_is_sibling(const void *entry)$/;"	f	typeref:typename:bool
xa_is_value	t/tree/include/linux/xarray.h	/^static inline bool xa_is_value(const void *entry)$/;"	f	typeref:typename:bool
xa_is_zero	t/tree/include/linux/xarray.h	/^static inline bool xa_is_zero(const void *entry)$/;"	f	typeref:typename:bool
xa_limit	t/tree/include/linux/xarray.h	/^struct xa_limit {$/;"	s
xa_limit_31b	t/tree/include/linux/xarray.h	/^#define xa_limit_31b	/;"	d
xa_limit_32b	t/tree/include/linux/xarray.h	/^#define xa_limit_32b	/;"	d
xa_lock	t/tree/include/linux/xarray.h	/^	spinlock_t	xa_lock;$/;"	m	struct:xarray	typeref:typename:spinlock_t
xa_lock	t/tree/include/linux/xarray.h	/^#define xa_lock(xa)		spin_lock(&(xa)->xa_lock)/;"	d
xa_lock_bh	t/tree/include/linux/xarray.h	/^#define xa_lock_bh(/;"	d
xa_lock_irq	t/tree/include/linux/xarray.h	/^#define xa_lock_irq(/;"	d
xa_lock_irqsave	t/tree/include/linux/xarray.h	/^#define xa_lock_irqsave(/;"	d
xa_lock_type	t/tree/include/linux/xarray.h	/^enum xa_lock_type {$/;"	g
xa_mark_t	t/tree/include/linux/xarray.h	/^typedef unsigned __bitwise xa_mark_t;$/;"	t	typeref:typename:unsigned __bitwise
xa_marked	t/tree/include/linux/xarray.h	/^static inline bool xa_marked(const struct xarray *xa, xa_mark_t mark)$/;"	f	typeref:typename:bool
xa_mk_internal	t/tree/include/linux/xarray.h	/^static inline void *xa_mk_internal(unsigned long v)$/;"	f	typeref:typename:void *
xa_mk_node	t/tree/include/linux/xarray.h	/^static inline void *xa_mk_node(const struct xa_node *node)$/;"	f	typeref:typename:void *
xa_mk_sibling	t/tree/include/linux/xarray.h	/^static inline void *xa_mk_sibling(unsigned int offset)$/;"	f	typeref:typename:void *
xa_mk_value	t/tree/include/linux/xarray.h	/^static inline void *xa_mk_value(unsigned long v)$/;"	f	typeref:typename:void *
xa_node	t/tree/include/linux/xarray.h	/^	struct xa_node *xa_node;$/;"	m	struct:xa_state	typeref:struct:xa_node *
xa_node	t/tree/include/linux/xarray.h	/^struct xa_node {$/;"	s
xa_offset	t/tree/include/linux/xarray.h	/^	unsigned char xa_offset;$/;"	m	struct:xa_state	typeref:typename:unsigned char
xa_pad	t/tree/include/linux/xarray.h	/^	unsigned char xa_pad;		\/* Helps gcc generate better code *\/$/;"	m	struct:xa_state	typeref:typename:unsigned char
xa_parent	t/tree/include/linux/xarray.h	/^static inline struct xa_node *xa_parent(const struct xarray *xa,$/;"	f	typeref:struct:xa_node *
xa_parent_locked	t/tree/include/linux/xarray.h	/^static inline struct xa_node *xa_parent_locked(const struct xarray *xa,$/;"	f	typeref:struct:xa_node *
xa_pointer_tag	t/tree/include/linux/xarray.h	/^static inline unsigned int xa_pointer_tag(void *entry)$/;"	f	typeref:typename:unsigned int
xa_release	t/tree/include/linux/xarray.h	/^static inline void xa_release(struct xarray *xa, unsigned long index)$/;"	f	typeref:typename:void
xa_reserve	t/tree/include/linux/xarray.h	/^int xa_reserve(struct xarray *xa, unsigned long index, gfp_t gfp)$/;"	f	typeref:typename:__must_check int
xa_reserve_bh	t/tree/include/linux/xarray.h	/^int xa_reserve_bh(struct xarray *xa, unsigned long index, gfp_t gfp)$/;"	f	typeref:typename:__must_check int
xa_reserve_irq	t/tree/include/linux/xarray.h	/^int xa_reserve_irq(struct xarray *xa, unsigned long index, gfp_t gfp)$/;"	f	typeref:typename:__must_check int
xa_shift	t/tree/include/linux/xarray.h	/^	unsigned char xa_shift;$/;"	m	struct:xa_state	typeref:typename:unsigned char
xa_sibs	t/tree/include/linux/xarray.h	/^	unsigned char xa_sibs;$/;"	m	struct:xa_state	typeref:typename:unsigned char
xa_state	t/tree/include/linux/xarray.h	/^struct xa_state {$/;"	s
xa_store_bh	t/tree/include/linux/xarray.h	/^static inline void *xa_store_bh(struct xarray *xa, unsigned long index,$/;"	f	typeref:typename:void *
xa_store_irq	t/tree/include/linux/xarray.h	/^static inline void *xa_store_irq(struct xarray *xa, unsigned long index,$/;"	f	typeref:typename:void *
xa_tag_pointer	t/tree/include/linux/xarray.h	/^static inline void *xa_tag_pointer(void *p, unsigned long tag)$/;"	f	typeref:typename:void *
xa_to_internal	t/tree/include/linux/xarray.h	/^static inline unsigned long xa_to_internal(const void *entry)$/;"	f	typeref:typename:unsigned long
xa_to_node	t/tree/include/linux/xarray.h	/^static inline struct xa_node *xa_to_node(const void *entry)$/;"	f	typeref:struct:xa_node *
xa_to_sibling	t/tree/include/linux/xarray.h	/^static inline unsigned long xa_to_sibling(const void *entry)$/;"	f	typeref:typename:unsigned long
xa_to_value	t/tree/include/linux/xarray.h	/^static inline unsigned long xa_to_value(const void *entry)$/;"	f	typeref:typename:unsigned long
xa_trylock	t/tree/include/linux/xarray.h	/^#define xa_trylock(/;"	d
xa_unlock	t/tree/include/linux/xarray.h	/^#define xa_unlock(/;"	d
xa_unlock_bh	t/tree/include/linux/xarray.h	/^#define xa_unlock_bh(/;"	d
xa_unlock_irq	t/tree/include/linux/xarray.h	/^#define xa_unlock_irq(/;"	d
xa_unlock_irqrestore	t/tree/include/linux/xarray.h	/^#define xa_unlock_irqrestore(/;"	d
xa_untag_pointer	t/tree/include/linux/xarray.h	/^static inline void *xa_untag_pointer(void *entry)$/;"	f	typeref:typename:void *
xa_update	t/tree/include/linux/xarray.h	/^	xa_update_node_t xa_update;$/;"	m	struct:xa_state	typeref:typename:xa_update_node_t
xa_update_node_t	t/tree/include/linux/xarray.h	/^typedef void (*xa_update_node_t)(struct xa_node *node);$/;"	t	typeref:typename:void (*)(struct xa_node * node)
xarray	t/tree/include/linux/xarray.h	/^struct xarray {$/;"	s
xas_error	t/tree/include/linux/xarray.h	/^static inline int xas_error(const struct xa_state *xas)$/;"	f	typeref:typename:int
xas_find_chunk	t/tree/include/linux/xarray.h	/^static inline unsigned int xas_find_chunk(struct xa_state *xas, bool advance,$/;"	f	typeref:typename:unsigned int
xas_for_each	t/tree/include/linux/xarray.h	/^#define xas_for_each(/;"	d
xas_for_each_conflict	t/tree/include/linux/xarray.h	/^#define xas_for_each_conflict(/;"	d
xas_for_each_marked	t/tree/include/linux/xarray.h	/^#define xas_for_each_marked(/;"	d
xas_frozen	t/tree/include/linux/xarray.h	/^static inline bool xas_frozen(struct xa_node *node)$/;"	f	typeref:typename:bool
xas_invalid	t/tree/include/linux/xarray.h	/^static inline bool xas_invalid(const struct xa_state *xas)$/;"	f	typeref:typename:bool
xas_is_node	t/tree/include/linux/xarray.h	/^static inline bool xas_is_node(const struct xa_state *xas)$/;"	f	typeref:typename:bool
xas_lock	t/tree/include/linux/xarray.h	/^#define xas_lock(/;"	d
xas_lock_bh	t/tree/include/linux/xarray.h	/^#define xas_lock_bh(/;"	d
xas_lock_irq	t/tree/include/linux/xarray.h	/^#define xas_lock_irq(/;"	d
xas_lock_irqsave	t/tree/include/linux/xarray.h	/^#define xas_lock_irqsave(/;"	d
xas_marked	t/tree/include/linux/xarray.h	/^#define xas_marked(/;"	d
xas_next	t/tree/include/linux/xarray.h	/^static inline void *xas_next(struct xa_state *xas)$/;"	f	typeref:typename:void *
xas_next_entry	t/tree/include/linux/xarray.h	/^static inline void *xas_next_entry(struct xa_state *xas, unsigned long max)$/;"	f	typeref:typename:void *
xas_next_marked	t/tree/include/linux/xarray.h	/^static inline void *xas_next_marked(struct xa_state *xas, unsigned long max,$/;"	f	typeref:typename:void *
xas_not_node	t/tree/include/linux/xarray.h	/^static inline bool xas_not_node(struct xa_node *node)$/;"	f	typeref:typename:bool
xas_prev	t/tree/include/linux/xarray.h	/^static inline void *xas_prev(struct xa_state *xas)$/;"	f	typeref:typename:void *
xas_reload	t/tree/include/linux/xarray.h	/^static inline void *xas_reload(struct xa_state *xas)$/;"	f	typeref:typename:void *
xas_reset	t/tree/include/linux/xarray.h	/^static inline void xas_reset(struct xa_state *xas)$/;"	f	typeref:typename:void
xas_retry	t/tree/include/linux/xarray.h	/^static inline bool xas_retry(struct xa_state *xas, const void *entry)$/;"	f	typeref:typename:bool
xas_set	t/tree/include/linux/xarray.h	/^static inline void xas_set(struct xa_state *xas, unsigned long index)$/;"	f	typeref:typename:void
xas_set_err	t/tree/include/linux/xarray.h	/^static inline void xas_set_err(struct xa_state *xas, long err)$/;"	f	typeref:typename:void
xas_set_order	t/tree/include/linux/xarray.h	/^static inline void xas_set_order(struct xa_state *xas, unsigned long index,$/;"	f	typeref:typename:void
xas_set_update	t/tree/include/linux/xarray.h	/^static inline void xas_set_update(struct xa_state *xas, xa_update_node_t update)$/;"	f	typeref:typename:void
xas_top	t/tree/include/linux/xarray.h	/^static inline bool xas_top(struct xa_node *node)$/;"	f	typeref:typename:bool
xas_trylock	t/tree/include/linux/xarray.h	/^#define xas_trylock(/;"	d
xas_unlock	t/tree/include/linux/xarray.h	/^#define xas_unlock(/;"	d
xas_unlock_bh	t/tree/include/linux/xarray.h	/^#define xas_unlock_bh(/;"	d
xas_unlock_irq	t/tree/include/linux/xarray.h	/^#define xas_unlock_irq(/;"	d
xas_unlock_irqrestore	t/tree/include/linux/xarray.h	/^#define xas_unlock_irqrestore(/;"	d
xas_valid	t/tree/include/linux/xarray.h	/^static inline bool xas_valid(const struct xa_state *xas)$/;"	f	typeref:typename:bool
xlate_dev_kmem_ptr	t/tree/include/asm-generic/io.h	/^#define xlate_dev_kmem_ptr xlate_dev_kmem_ptr$/;"	d
xlate_dev_kmem_ptr	t/tree/include/asm-generic/io.h	/^static inline void *xlate_dev_kmem_ptr(void *addr)$/;"	f	typeref:typename:void *
xlate_dev_mem_ptr	t/tree/include/asm-generic/io.h	/^#define xlate_dev_mem_ptr xlate_dev_mem_ptr$/;"	d
xlate_dev_mem_ptr	t/tree/include/asm-generic/io.h	/^static inline void *xlate_dev_mem_ptr(phys_addr_t addr)$/;"	f	typeref:typename:void *
xol_area	t/tree/include/linux/uprobes.h	/^	struct xol_area		*xol_area;$/;"	m	struct:uprobes_state	typeref:struct:xol_area *
xol_vaddr	t/tree/include/linux/uprobes.h	/^	unsigned long			xol_vaddr;$/;"	m	struct:uprobe_task	typeref:typename:unsigned long
